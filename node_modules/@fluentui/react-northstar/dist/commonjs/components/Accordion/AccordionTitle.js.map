{"version":3,"file":"AccordionTitle.js","names":["_accessibility","require","_reactComponentRef","customPropTypes","_interopRequireWildcard","PropTypes","React","_utils","_Box","_reactBindings","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","accordionTitleClassName","exports","accordionTitleSlotClassNames","contentWrapper","AccordionTitle","forwardRef","props","ref","context","useFluentContext","_useTelemetry","useTelemetry","displayName","telemetry","setStart","setEnd","contentRef","children","content","indicator","disabled","accessibility","canBeCollapsed","as","active","accordionContentId","className","design","styles","variables","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","getA11yProps","useAccessibility","debugName","actionHandlers","performClick","e","preventDefault","stopPropagation","handleClick","mapPropsToBehavior","hasContent","String","rtl","_useStyles","useStyles","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","_invoke2","handleFocus","handleWrapperOverrides","predefinedProps","onFocus","onClick","contentWrapperElement","createElement","Ref","innerRef","Box","create","defaultProps","overrideProps","assign","Fragment","element","_extends2","rtlTextContainer","getAttributes","forElements","root","childrenExist","shorthandConfig","mappedProp","propTypes","commonPropTypes","createCommon","string","bool","wrapperShorthand","index","number","func","shorthandAllowingChildren","keys","accordionTitleBehavior","_noop2","createShorthandFactory","Component"],"sources":["components/Accordion/AccordionTitle.tsx"],"sourcesContent":["import { accordionTitleBehavior, Accessibility, AccordionTitleBehaviorProps } from '@fluentui/accessibility';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ContentComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n} from '../../utils';\nimport { ComponentEventHandler, ShorthandValue, FluentComponentStaticProps } from '../../types';\nimport { Box, BoxProps } from '../Box/Box';\nimport {\n  getElementType,\n  useTelemetry,\n  useFluentContext,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface AccordionTitleSlotClassNames {\n  contentWrapper: string;\n}\n\nexport interface AccordionTitleProps\n  extends UIComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>>,\n    ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<AccordionTitleBehaviorProps>;\n\n  /** Id of the content it owns. */\n  accordionContentId?: string;\n\n  /** Whether or not the title is in the open state. */\n  active?: boolean;\n\n  /** If at least one panel needs to stay active and this title does not correspond to the last active one. */\n  canBeCollapsed?: boolean;\n\n  /** Shorthand for the content wrapper element. */\n  contentWrapper?: ShorthandValue<BoxProps>;\n\n  /** An accordion title can show it is currently unable to be interacted with. */\n  disabled?: boolean;\n\n  /** AccordionTitle index inside Accordion. */\n  index?: number;\n\n  /** Ref to the clickable element that contains the title. */\n  contentRef?: React.Ref<HTMLElement>;\n\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<AccordionTitleProps>;\n\n  /**\n   * Called after user's focus.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<AccordionTitleProps>;\n\n  /** Shorthand for the active indicator. */\n  indicator?: ShorthandValue<BoxProps>;\n}\n\nexport const accordionTitleClassName = 'ui-accordion__title';\nexport const accordionTitleSlotClassNames: AccordionTitleSlotClassNames = {\n  contentWrapper: `${accordionTitleClassName}__content-wrapper`,\n};\n\nexport type AccordionTitleStylesProps = Required<Pick<AccordionTitleProps, 'disabled' | 'active'>> & {\n  content: boolean;\n};\n\n/**\n * An AccordionTitle represents the title of Accordion's item that can be interacted with to expand or collapse the item's content.\n */\nexport const AccordionTitle = React.forwardRef<HTMLDListElement, AccordionTitleProps & { as: React.ReactNode }>(\n  (props, ref) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(AccordionTitle.displayName, context.telemetry);\n    setStart();\n    const {\n      contentRef,\n      children,\n      content,\n      indicator,\n      contentWrapper,\n      disabled,\n      accessibility,\n      canBeCollapsed,\n      as,\n      active,\n      accordionContentId,\n      className,\n      design,\n      styles,\n      variables,\n    } = props;\n    const ElementType = getElementType(props);\n    const unhandledProps = useUnhandledProps(AccordionTitle.handledProps, props);\n\n    const getA11yProps = useAccessibility<AccordionTitleBehaviorProps>(accessibility, {\n      debugName: AccordionTitle.displayName,\n      actionHandlers: {\n        performClick: e => {\n          e.preventDefault();\n          e.stopPropagation();\n          handleClick(e);\n        },\n      },\n      mapPropsToBehavior: () => ({\n        hasContent: !!content,\n        canBeCollapsed,\n        as: String(as),\n        active,\n        disabled,\n        accordionContentId,\n      }),\n      rtl: context.rtl,\n    });\n\n    const { classes, styles: resolvedStyles } = useStyles<AccordionTitleStylesProps>(AccordionTitle.displayName, {\n      className: accordionTitleClassName,\n      mapPropsToStyles: () => ({\n        disabled,\n        content: !!content,\n        active,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n    });\n\n    const handleClick = (e: React.SyntheticEvent) => {\n      if (!disabled) {\n        _.invoke(props, 'onClick', e, props);\n      }\n    };\n\n    const handleFocus = (e: React.SyntheticEvent) => {\n      e.stopPropagation();\n      _.invoke(props, 'onFocus', e, props);\n    };\n\n    const handleWrapperOverrides = predefinedProps => ({\n      onFocus: (e: React.FocusEvent) => {\n        handleFocus(e);\n        _.invoke(predefinedProps, 'onFocus', e, props);\n      },\n      onClick: (e: React.MouseEvent) => {\n        handleClick(e);\n        _.invoke(predefinedProps, 'onClick', e, props);\n      },\n    });\n\n    const contentWrapperElement = (\n      <Ref innerRef={contentRef}>\n        {Box.create(contentWrapper, {\n          defaultProps: () =>\n            getA11yProps('content', {\n              className: accordionTitleSlotClassNames.contentWrapper,\n              styles: resolvedStyles.contentWrapper,\n            }),\n          overrideProps: predefinedProps => ({\n            children: (\n              <>\n                {Box.create(indicator, {\n                  defaultProps: () =>\n                    getA11yProps('indicator', {\n                      styles: resolvedStyles.indicator,\n                    }),\n                })}\n                {Box.create(content, {\n                  defaultProps: () => ({\n                    styles: resolvedStyles.content,\n                  }),\n                })}\n              </>\n            ),\n            ...handleWrapperOverrides(predefinedProps),\n          }),\n        })}\n      </Ref>\n    );\n\n    const element = (\n      <ElementType\n        {...rtlTextContainer.getAttributes({ forElements: [children] })}\n        {...getA11yProps('root', {\n          className: classes.root,\n          ref,\n          ...unhandledProps,\n        })}\n      >\n        {childrenExist(children) ? children : contentWrapperElement}\n      </ElementType>\n    );\n    setEnd();\n    return element;\n  },\n) as unknown as ForwardRefWithAs<'div', HTMLDListElement, AccordionTitleProps> &\n  FluentComponentStaticProps<AccordionTitleProps>;\n\nAccordionTitle.displayName = 'AccordionTitle';\n\nAccordionTitle.shorthandConfig = {\n  mappedProp: 'content',\n};\n\nAccordionTitle.propTypes = {\n  ...commonPropTypes.createCommon({ content: 'shorthand' }),\n  accordionContentId: PropTypes.string,\n  active: PropTypes.bool,\n  contentRef: customPropTypes.ref,\n  contentWrapper: customPropTypes.wrapperShorthand,\n  canBeCollapsed: PropTypes.bool,\n  disabled: PropTypes.bool,\n  index: PropTypes.number,\n  onClick: PropTypes.func,\n  indicator: customPropTypes.shorthandAllowingChildren,\n};\n\nAccordionTitle.handledProps = Object.keys(AccordionTitle.propTypes) as any;\n\nAccordionTitle.defaultProps = {\n  accessibility: accordionTitleBehavior,\n  as: 'div',\n  contentRef: _.noop,\n  indicator: {},\n  contentWrapper: {},\n};\n\nAccordionTitle.create = createShorthandFactory({ Component: AccordionTitle, mappedProp: 'content' });\n"],"mappings":"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"}