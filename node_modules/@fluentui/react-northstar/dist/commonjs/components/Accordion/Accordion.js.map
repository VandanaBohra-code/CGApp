{"version":3,"file":"Accordion.js","names":["_accessibility","require","customPropTypes","_interopRequireWildcard","PropTypes","React","_utils","_AccordionTitle","_AccordionContent","_FocusContainer","_reactBindings","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","accordionClassName","exports","accordionSlotClassNames","content","title","Accordion","forwardRef","props","ref","context","useFluentContext","_useTelemetry","useTelemetry","displayName","telemetry","setStart","setEnd","expanded","exclusive","accessibility","children","className","design","styles","variables","panels","renderPanelContent","renderPanelTitle","alwaysRenderPanels","alwaysActiveIndex","_useAutoControlled","useAutoControlled","defaultValue","defaultActiveIndex","value","activeIndex","initialValue","setActiveIndex","actionHandlers","moveNext","e","preventDefault","focusHandler","movePrevious","moveFirst","moveLast","getA11yProps","useAccessibility","debugName","rtl","_useStyles","useStyles","mapPropsToInlineStyles","classes","_React$useState","useState","focusedIndex","setfocusedIndex","handleNavigationFocus","index","getNavigationItemsSize","length","unhandledProps","useUnhandledProps","handledProps","ElementType","getElementType","ContainerFocusHandler","itemRefs","useMemo","Array","from","createRef","useEffect","targetComponent","current","focus","defaultAccordionTitleId","_uniqueId2","defaultAccordionContentId","computeNewIndex","isIndexActionable","_includes2","_without2","concat","handleTitleOverrides","predefinedProps","onClick","titleProps","_invoke2","assign","onFocus","isIndexActive","renderPanels","syncFocusedIndex","_each2","panel","active","canBeCollapsed","titleId","contentId","contentRef","push","createShorthand","AccordionTitle","defaultProps","id","accordionContentId","overrideProps","render","AccordionContent","accordionTitleId","element","createElement","_extends2","root","rtlTextContainer","getAttributes","forElements","childrenExist","propTypes","commonPropTypes","createCommon","every","disallow","oneOfType","arrayOf","number","bool","onTitleClick","func","onActiveIndexChange","shape","itemShorthand","accordionBehavior","as","keys","Title","Content","create","createShorthandFactory","Component"],"sources":["components/Accordion/Accordion.tsx"],"sourcesContent":["import { Accessibility, accordionBehavior, AccordionBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  createShorthand,\n  createShorthandFactory,\n} from '../../utils';\nimport { AccordionTitle, AccordionTitleProps } from './AccordionTitle';\nimport { AccordionContent, AccordionContentProps } from './AccordionContent';\n\nimport {\n  ComponentEventHandler,\n  ShorthandValue,\n  ShorthandRenderFunction,\n  FluentComponentStaticProps,\n} from '../../types';\nimport { ContainerFocusHandler } from '../../utils/accessibility/FocusHandling/FocusContainer';\nimport {\n  useAutoControlled,\n  useAccessibility,\n  useTelemetry,\n  useFluentContext,\n  useUnhandledProps,\n  getElementType,\n  useStyles,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface AccordionSlotClassNames {\n  content: string;\n  title: string;\n}\n\nexport interface AccordionProps extends UIComponentProps, ChildrenComponentProps {\n  /** Index of the currently active panel. */\n  activeIndex?: number[] | number;\n\n  /** Initial activeIndex value. */\n  defaultActiveIndex?: number[] | number;\n\n  /** Only allow one panel to be expanded at a time. */\n  exclusive?: boolean;\n\n  /** At least one panel should be expanded at any time. */\n  expanded?: boolean;\n\n  /**\n   * Called when the active index of the Accordion changes.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props, with `activeIndex` reflecting the new state.\n   */\n  onActiveIndexChange?: ComponentEventHandler<AccordionProps>;\n\n  /**\n   * Called when a panel title is clicked.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All item props.\n   */\n  onTitleClick?: ComponentEventHandler<AccordionProps>;\n\n  /** Shorthand array of props for Accordion. */\n  panels?: {\n    content: ShorthandValue<AccordionContentProps>;\n    title: ShorthandValue<AccordionTitleProps>;\n  }[];\n\n  /**\n   * A custom renderer for each Accordion's panel title.\n   *\n   * @param Component - The panel's component type.\n   * @param props - The panel's computed props.\n   */\n  renderPanelTitle?: ShorthandRenderFunction<AccordionTitleProps>;\n\n  /**\n   * A custom renderer for each Accordion's panel content.\n   *\n   * @param Component - The panel's component type.\n   * @param props - The panel's computed props.\n   */\n  renderPanelContent?: ShorthandRenderFunction<AccordionContentProps>;\n\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<AccordionBehaviorProps>;\n\n  /** Manage if panels should be rendered always or based on their state. */\n  alwaysRenderPanels?: boolean;\n}\n\nexport type AccordionStylesProps = never;\nexport const accordionClassName = 'ui-accordion';\nexport const accordionSlotClassNames: AccordionSlotClassNames = {\n  content: `${accordionClassName}__content`,\n  title: `${accordionClassName}__title`,\n};\n\n/**\n * An Accordion represents stacked set of content sections, with action elements to toggle the display of these sections.\n *\n * @accessibility\n * Implements [ARIA Accordion](https://www.w3.org/TR/wai-aria-practices-1.1/#accordion) design pattern (keyboard navigation not yet supported).\n */\nexport const Accordion = React.forwardRef<HTMLDListElement, AccordionProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Accordion.displayName, context.telemetry);\n  setStart();\n  const {\n    expanded,\n    exclusive,\n    accessibility,\n    children,\n    className,\n    design,\n    styles,\n    variables,\n    panels,\n    renderPanelContent,\n    renderPanelTitle,\n    alwaysRenderPanels,\n  } = props;\n  const alwaysActiveIndex = expanded ? 0 : -1;\n\n  const [activeIndex, setActiveIndex] = useAutoControlled({\n    defaultValue: props.defaultActiveIndex,\n    value: props.activeIndex,\n    initialValue: exclusive ? alwaysActiveIndex : [alwaysActiveIndex],\n  });\n\n  const actionHandlers = {\n    moveNext: e => {\n      e.preventDefault();\n      focusHandler.moveNext();\n    },\n    movePrevious: e => {\n      e.preventDefault();\n      focusHandler.movePrevious();\n    },\n    moveFirst: e => {\n      e.preventDefault();\n      focusHandler.moveFirst();\n    },\n    moveLast: e => {\n      e.preventDefault();\n      focusHandler.moveLast();\n    },\n  };\n\n  const getA11yProps = useAccessibility<AccordionBehaviorProps>(accessibility, {\n    debugName: Accordion.displayName,\n    actionHandlers,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<AccordionStylesProps>(Accordion.displayName, {\n    className: accordionClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const [focusedIndex, setfocusedIndex] = React.useState<number>();\n\n  const handleNavigationFocus = (index: number) => {\n    setfocusedIndex(index);\n  };\n\n  const getNavigationItemsSize = () => props.panels.length;\n  const unhandledProps = useUnhandledProps(Accordion.handledProps, props);\n  const ElementType = getElementType(props);\n\n  const focusHandler: ContainerFocusHandler = new ContainerFocusHandler(\n    getNavigationItemsSize,\n    handleNavigationFocus,\n    true,\n  );\n\n  const itemRefs = React.useMemo<React.RefObject<HTMLElement>[]>(\n    () => Array.from({ length: panels?.length }, () => React.createRef()),\n    // As we are using \"panels.length\" it's fine to have dependency on them\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [panels?.length],\n  );\n\n  React.useEffect(() => {\n    const targetComponent = itemRefs[focusedIndex] && itemRefs[focusedIndex].current;\n    targetComponent && targetComponent.focus();\n  }, [itemRefs, focusedIndex]);\n\n  const defaultAccordionTitleId = React.useMemo(() => _.uniqueId('accordion-title-'), []);\n  const defaultAccordionContentId = React.useMemo(() => _.uniqueId('accordion-content-'), []);\n\n  const computeNewIndex = (index: number): number | number[] => {\n    if (!isIndexActionable(index)) {\n      return activeIndex;\n    }\n\n    if (exclusive) return index === activeIndex ? -1 : index;\n    // check to see if index is in array, and remove it, if not then add it\n    return _.includes(activeIndex as number[], index)\n      ? _.without(activeIndex as number[], index)\n      : [...(activeIndex as number[]), index];\n  };\n\n  const handleTitleOverrides = (predefinedProps: AccordionTitleProps) => ({\n    onClick: (e: React.SyntheticEvent, titleProps: AccordionTitleProps) => {\n      const { index } = titleProps;\n      const activeIndex = computeNewIndex(index);\n      setActiveIndex(activeIndex);\n      setfocusedIndex(index);\n\n      _.invoke(props, 'onActiveIndexChange', e, { ...props, activeIndex });\n      _.invoke(predefinedProps, 'onClick', e, titleProps);\n      _.invoke(props, 'onTitleClick', e, titleProps);\n    },\n    onFocus: (e: React.SyntheticEvent, titleProps: AccordionTitleProps) => {\n      _.invoke(predefinedProps, 'onFocus', e, titleProps);\n      setfocusedIndex(predefinedProps.index);\n    },\n  });\n\n  const isIndexActive = (index: number): boolean => {\n    return exclusive ? activeIndex === index : _.includes(activeIndex as number[], index);\n  };\n\n  /**\n   * Checks if panel at index can be actioned upon. Used in the case of expanded accordion,\n   * when at least a panel needs to stay active. Will return false if expanded prop is true,\n   * index is active and either it's an exclusive accordion or if there are no other active\n   * panels open besides this one.\n   *\n   * @param index - The index of the panel.\n   * @returns If the panel can be set active/inactive.\n   */\n  const isIndexActionable = (index: number): boolean => {\n    if (!isIndexActive(index)) {\n      return true;\n    }\n\n    return !expanded || (!exclusive && (activeIndex as number[]).length > 1);\n  };\n\n  const renderPanels = () => {\n    const children: any[] = [];\n    focusHandler.syncFocusedIndex(focusedIndex);\n    _.each(panels, (panel, index) => {\n      const { content, title } = panel;\n      const active = isIndexActive(+index);\n      const canBeCollapsed = isIndexActionable(+index);\n      const titleId = title['id'] || `${defaultAccordionTitleId}${index}`;\n      const contentId = content['id'] || `${defaultAccordionContentId}${index}`;\n      const contentRef = itemRefs[index];\n\n      children.push(\n        createShorthand(AccordionTitle, title, {\n          defaultProps: () => ({\n            className: accordionSlotClassNames.title,\n            active,\n            index: +index,\n            contentRef,\n            canBeCollapsed,\n            id: titleId,\n            accordionContentId: contentId,\n          }),\n          overrideProps: handleTitleOverrides,\n          render: renderPanelTitle,\n        }),\n      );\n      if (alwaysRenderPanels || active) {\n        children.push(\n          createShorthand(AccordionContent, content, {\n            defaultProps: () => ({\n              className: accordionSlotClassNames.content,\n              active,\n              id: contentId,\n              accordionTitleId: titleId,\n            }),\n            render: renderPanelContent,\n          }),\n        );\n      }\n    });\n    return children;\n  };\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n        ref,\n      })}\n      {...rtlTextContainer.getAttributes({ forElements: [children] })}\n    >\n      {childrenExist(children) ? children : renderPanels()}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n}) as unknown as ForwardRefWithAs<'dl', HTMLDListElement, AccordionProps> &\n  FluentComponentStaticProps<AccordionProps> & {\n    Title: typeof AccordionTitle;\n    Content: typeof AccordionContent;\n  };\n\nAccordion.displayName = 'Accordion';\n\nAccordion.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  activeIndex: customPropTypes.every([\n    customPropTypes.disallow(['children']),\n    PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number]),\n  ]),\n  defaultActiveIndex: customPropTypes.every([\n    customPropTypes.disallow(['children']),\n    PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number]),\n  ]),\n  exclusive: PropTypes.bool,\n  expanded: PropTypes.bool,\n  onTitleClick: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.func]),\n  onActiveIndexChange: PropTypes.func,\n  panels: customPropTypes.every([\n    customPropTypes.disallow(['children']),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        content: customPropTypes.itemShorthand,\n        title: customPropTypes.itemShorthand,\n      }),\n    ),\n  ]),\n\n  renderPanelTitle: PropTypes.func,\n  renderPanelContent: PropTypes.func,\n};\n\nAccordion.defaultProps = {\n  accessibility: accordionBehavior,\n  as: 'dl',\n};\n\nAccordion.handledProps = Object.keys(Accordion.propTypes) as any;\nAccordion.Title = AccordionTitle;\nAccordion.Content = AccordionContent;\nAccordion.create = createShorthandFactory({\n  Component: Accordion,\n});\n"],"mappings":"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"}