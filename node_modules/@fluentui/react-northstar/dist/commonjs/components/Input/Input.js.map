{"version":3,"file":"Input.js","names":["_accessibility","require","_reactComponentRef","customPropTypes","_interopRequireWildcard","React","PropTypes","_utils","_Box","_reactBindings","_reactIconsNorthstar","_InputLabel","_formFieldBaseContext","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","inputClassName","exports","inputSlotClassNames","input","icon","Input","compose","props","ref","composeOptions","context","useFluentContext","_useTelemetry","useTelemetry","displayName","telemetry","setStart","setEnd","className","type","wrapper","disabled","fluid","inverted","inline","clearable","iconPosition","design","styles","variables","required","successIndicator","error","errorIndicator","showSuccessIndicator","label","labelPosition","inputRef","useRef","_React$useContext","useContext","FormFieldBaseContext","labelId","inputId","current","id","getOrGenerateIdFromShorthand","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","_partitionHTMLProps","partitionHTMLProps","htmlInputProps","restProps","_useAutoControlled","useAutoControlled","defaultValue","value","initialValue","setValue","hasValue","length","isShowSuccessIndicatorUndefined","requiredAndSuccessful","hasIcon","_isNil2","_useStyles","useStyles","mapPropsToStyles","mapPropsToInlineStyles","rtl","unstable_props","classes","resolvedStyles","getA11yProps","useAccessibility","accessibility","debugName","actionHandlers","clear","e","stopPropagation","nativeEvent","handleOnClear","mapPropsToBehavior","handleIconOverrides","predefinedProps","onClick","focus","_invoke2","handleChange","newValue","_get2","assign","computeIcon","createElement","CloseIcon","outline","labelElement","createShorthand","slots","defaultProps","htmlFor","inputElement","Box","create","children","Fragment","Ref","innerRef","handleRef","control","as","onChange","overrideProps","inputContainer","element","root","InputLabel","propTypes","commonPropTypes","createCommon","content","bool","oneOfType","string","arrayOf","itemShorthand","oneOf","shorthandAllowingChildren","func","number","wrapperShorthand","inputBehavior","ExclamationCircleIcon","CheckmarkCircleIcon","Label","createShorthandFactory","Component"],"sources":["components/Input/Input.tsx"],"sourcesContent":["import { Accessibility, inputBehavior, InputBehaviorProps } from '@fluentui/accessibility';\nimport { handleRef, Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\n\nimport {\n  partitionHTMLProps,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  createShorthandFactory,\n  ShorthandFactory,\n  createShorthand,\n  getOrGenerateIdFromShorthand,\n} from '../../utils';\nimport { SupportedIntrinsicInputProps } from '../../utils/htmlPropsUtils';\nimport { ShorthandValue, ComponentEventHandler } from '../../types';\nimport { Box, BoxProps } from '../Box/Box';\nimport {\n  useAutoControlled,\n  getElementType,\n  useUnhandledProps,\n  useTelemetry,\n  useFluentContext,\n  useStyles,\n  useAccessibility,\n  compose,\n  ComponentWithAs,\n} from '@fluentui/react-bindings';\nimport { ExclamationCircleIcon, CheckmarkCircleIcon, CloseIcon } from '@fluentui/react-icons-northstar';\nimport { InputLabel, InputLabelProps, LabelPosition } from './InputLabel';\nimport { FormFieldBaseContext } from '../Form/utils/formFieldBaseContext';\n\nexport interface InputProps extends UIComponentProps, ChildrenComponentProps, SupportedIntrinsicInputProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<InputBehaviorProps>;\n\n  /** A property that will change the icon on the input and clear the input on click on Cancel. */\n  clearable?: boolean;\n\n  /** The default value of the input. */\n  defaultValue?: string | string[];\n\n  /** An Input can be disabled. */\n  disabled?: boolean;\n\n  /** An input can take the width of its container. */\n  fluid?: boolean;\n\n  /** Optional Icon to display inside the Input. */\n  icon?: ShorthandValue<BoxProps>;\n\n  /** An Input with icon can format the icon to appear at the start or at the end of the input field. */\n  iconPosition?: 'start' | 'end';\n\n  /** An input can be used inline with text. */\n  inline?: boolean;\n\n  /** Shorthand for the input component. */\n  input?: ShorthandValue<BoxProps>;\n\n  /** An input can have inverted colors. */\n  inverted?: boolean;\n\n  /**\n   * Called on change.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onChange?: ComponentEventHandler<InputProps & { value: string }>;\n\n  /** The HTML input type. */\n  type?: string;\n\n  /** (DEPRECATED) Ref for input DOM node. */\n  inputRef?: React.Ref<HTMLElement>;\n\n  /** The value of the input. */\n  value?: string | number;\n\n  /** A label for the input. */\n  label?: ShorthandValue<InputLabelProps>;\n\n  /** Poisition for the label */\n  labelPosition?: LabelPosition;\n\n  /** Shorthand for the wrapper component. */\n  wrapper?: ShorthandValue<BoxProps>;\n\n  /** Input can be required to be valid. */\n  required?: boolean;\n\n  /** Input can have error state */\n  error?: boolean;\n\n  /** Input can have error indicator when error is true */\n  errorIndicator?: ShorthandValue<BoxProps>;\n\n  /** Optional Icon to display inside the Input if required and fulfilled. */\n  successIndicator?: ShorthandValue<BoxProps>;\n\n  /** Indicates whether the successIndicator should be visible. */\n  showSuccessIndicator?: boolean;\n}\n\nexport interface InputSlotClassNames {\n  input: string;\n  icon: string;\n}\n\nexport const inputClassName = 'ui-input';\n\nexport type InputStylesProps = Required<\n  Pick<\n    InputProps,\n    'fluid' | 'inverted' | 'inline' | 'disabled' | 'clearable' | 'iconPosition' | 'error' | 'labelPosition'\n  > & {\n    hasIcon: boolean;\n    hasValue: boolean;\n    requiredAndSuccessful: boolean;\n  }\n>;\n\nexport const inputSlotClassNames: InputSlotClassNames = {\n  input: `${inputClassName}__input`,\n  icon: `${inputClassName}__icon`,\n};\n\n/**\n * An Input is a field used to elicit an input from a user.\n *\n * @accessibility\n * For good screen reader experience set `aria-label` or `aria-labelledby` attribute for input.\n */\nexport const Input = compose<'input', InputProps, InputStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n    const {\n      className,\n      input,\n      type,\n      wrapper,\n      disabled,\n      fluid,\n      inverted,\n      inline,\n      clearable,\n      icon,\n      iconPosition,\n      design,\n      styles,\n      variables,\n      required,\n      successIndicator,\n      error,\n      errorIndicator,\n      showSuccessIndicator,\n      label,\n      labelPosition,\n    } = props;\n\n    const inputRef = React.useRef<HTMLInputElement>();\n\n    const { labelId } = React.useContext(FormFieldBaseContext);\n    const inputId = React.useRef<string>();\n    inputId.current = props.id || getOrGenerateIdFromShorthand('ui-input-', '', inputId.current);\n\n    const ElementType = getElementType(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const [htmlInputProps, restProps] = partitionHTMLProps(unhandledProps);\n    const [value, setValue] = useAutoControlled({\n      defaultValue: props.defaultValue,\n      value: props.value as string,\n      initialValue: '',\n    });\n    const hasValue: boolean = !!value && (value as string)?.length !== 0;\n\n    const isShowSuccessIndicatorUndefined = typeof showSuccessIndicator === 'undefined';\n\n    const requiredAndSuccessful = isShowSuccessIndicatorUndefined\n      ? ((required && hasValue) || showSuccessIndicator) && !error\n      : showSuccessIndicator;\n\n    const hasIcon = !!icon || showSuccessIndicator || (required && isShowSuccessIndicatorUndefined) || !_.isNil(error);\n\n    const { classes, styles: resolvedStyles } = useStyles<InputStylesProps>(composeOptions.displayName, {\n      className: inputClassName,\n      mapPropsToStyles: () => ({\n        fluid,\n        inverted,\n        inline,\n        disabled,\n        clearable,\n        hasIcon,\n        requiredAndSuccessful,\n        iconPosition,\n        hasValue,\n        labelPosition,\n        error,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n      composeOptions,\n      unstable_props: props,\n    });\n\n    const getA11yProps = useAccessibility<InputBehaviorProps>(props.accessibility, {\n      debugName: composeOptions.displayName,\n      actionHandlers: {\n        clear: e => {\n          if (clearable && value !== '') {\n            e.stopPropagation();\n            e.nativeEvent && e.nativeEvent.stopPropagation();\n            handleOnClear(e);\n          }\n        },\n      },\n      mapPropsToBehavior: () => ({\n        disabled,\n        required,\n        error,\n      }),\n      rtl: context.rtl,\n    });\n\n    const handleIconOverrides = predefinedProps => ({\n      onClick: (e: React.MouseEvent) => {\n        if (!disabled) {\n          handleOnClear(e);\n          inputRef.current.focus();\n        }\n\n        _.invoke(predefinedProps, 'onClick', e, props);\n      },\n    });\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (disabled) {\n        return;\n      }\n\n      const newValue = _.get(e, 'target.value');\n\n      _.invoke(props, 'onChange', e, { ...props, value: newValue });\n\n      setValue(newValue);\n    };\n\n    const handleOnClear = (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (clearable) {\n        _.invoke(props, 'onChange', e, { ...props, value: '' });\n        setValue('');\n      }\n    };\n\n    const computeIcon = (): ShorthandValue<BoxProps> => {\n      if (clearable && (value as string)?.length !== 0) {\n        return <CloseIcon outline />;\n      }\n      if (requiredAndSuccessful) {\n        return successIndicator;\n      }\n      if (error) {\n        return errorIndicator;\n      }\n      return icon || null;\n    };\n\n    const labelElement = createShorthand(composeOptions.slots.label, label, {\n      defaultProps: () => ({\n        labelPosition,\n        label,\n        required,\n        htmlFor: inputId.current,\n        hasValue,\n        id: labelId,\n      }),\n    });\n\n    const inputElement = Box.create(\n      {},\n      {\n        defaultProps: () => ({\n          children: (\n            <>\n              <Ref\n                innerRef={(inputElement: HTMLElement) => {\n                  handleRef(inputRef, inputElement);\n                  handleRef(props.inputRef, inputElement);\n                  handleRef(ref, inputElement);\n                }}\n              >\n                {createShorthand(composeOptions.slots.control, input || type, {\n                  defaultProps: () =>\n                    getA11yProps('input', {\n                      ...htmlInputProps,\n                      as: 'input',\n                      disabled,\n                      type,\n                      required,\n                      value: value || '',\n                      id: inputId.current,\n                      className: inputSlotClassNames.input,\n                      styles: resolvedStyles.input,\n                      onChange: handleChange,\n                    }),\n                })}\n              </Ref>\n              {createShorthand(composeOptions.slots.icon, computeIcon(), {\n                defaultProps: () =>\n                  getA11yProps('icon', {\n                    className: inputSlotClassNames.icon,\n                    styles: resolvedStyles.icon,\n                  }),\n                overrideProps: handleIconOverrides,\n              })}\n            </>\n          ),\n          styles: resolvedStyles.inputContainer,\n        }),\n      },\n    );\n\n    const element = Box.create(wrapper, {\n      defaultProps: () =>\n        getA11yProps('root', {\n          className: classes.root,\n          children: (\n            <>\n              {labelElement}\n              {inputElement}\n            </>\n          ),\n          styles: resolvedStyles.root,\n          ...restProps,\n        }),\n      overrideProps: {\n        as: (wrapper && (wrapper as any).as) || ElementType,\n      },\n    });\n    setEnd();\n    return element;\n  },\n  {\n    className: inputClassName,\n    displayName: 'Input',\n    slots: {\n      control: Box,\n      icon: Box,\n      label: InputLabel,\n    },\n    handledProps: [\n      'accessibility',\n      'as',\n      'children',\n      'className',\n      'design',\n      'styles',\n      'variables',\n      'clearable',\n      'defaultValue',\n      'disabled',\n      'fluid',\n      'icon',\n      'iconPosition',\n      'input',\n      'inputRef',\n      'inline',\n      'inverted',\n      'onChange',\n      'type',\n      'value',\n      'wrapper',\n      'required',\n      'successIndicator',\n      'error',\n      'errorIndicator',\n      'showSuccessIndicator',\n      'label',\n      'labelPosition',\n    ],\n  },\n) as ComponentWithAs<'input', InputProps> & {\n  create: ShorthandFactory<InputProps>;\n  Label: typeof InputLabel;\n};\n\nInput.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  clearable: PropTypes.bool,\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  disabled: PropTypes.bool,\n  fluid: PropTypes.bool,\n  label: customPropTypes.itemShorthand,\n  labelPosition: PropTypes.oneOf<LabelPosition>(['inline', 'above', 'inside']),\n  icon: customPropTypes.shorthandAllowingChildren,\n  iconPosition: PropTypes.oneOf(['start', 'end']),\n  input: customPropTypes.itemShorthand,\n  inputRef: customPropTypes.ref,\n  inline: PropTypes.bool,\n  inverted: PropTypes.bool,\n  onChange: PropTypes.func,\n  type: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  wrapper: customPropTypes.wrapperShorthand,\n  required: PropTypes.bool,\n  successIndicator: customPropTypes.shorthandAllowingChildren,\n  error: PropTypes.bool,\n  errorIndicator: customPropTypes.shorthandAllowingChildren,\n  showSuccessIndicator: PropTypes.bool,\n};\n\nInput.defaultProps = {\n  accessibility: inputBehavior,\n  type: 'text',\n  wrapper: {},\n  iconPosition: 'end',\n  errorIndicator: <ExclamationCircleIcon />,\n  successIndicator: <CheckmarkCircleIcon outline />,\n};\n\nInput.Label = InputLabel;\n\nInput.create = createShorthandFactory({ Component: Input });\n"],"mappings":"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"}