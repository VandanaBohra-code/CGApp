{"version":3,"file":"Dropdown.js","names":["_reactBindings","require","_reactComponentRef","customPropTypes","_interopRequireWildcard","_accessibility","React","PropTypes","_classnames","_interopRequireDefault","_computeScrollIntoView","_downshift","_utils","_List","_DropdownItem","_DropdownSelectedItem","_DropdownSearchInput","_Button","_accessibilityStyles","_Box","_Portal","_positioner","_reactIconsNorthstar","_excluded","_excluded2","_excluded3","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","dropdownClassName","exports","dropdownSlotClassNames","clearIndicator","container","toggleIndicator","item","itemsCount","itemsList","searchInput","selectedItem","selectedItems","triggerButton","a11yStatusCleanupTime","charKeyPressedCleanupTime","normalizeValue","multiple","rawValue","normalizedValue","Array","isArray","slice","getFilteredValues","options","items","itemToString","itemToValue","search","searchQuery","value","filteredItemsByValue","_differenceBy2","filteredItemStrings","_map2","filteredItem","toLowerCase","_isFunction2","filteredItems","filter","indexOf","isEmpty","prop","props","_get2","Dropdown","forwardRef","ref","_context$target3","context","useFluentContext","_useTelemetry","useTelemetry","displayName","telemetry","setStart","setEnd","ariaLabelledby","ariaDescribedby","ariaInvalid","allowFreeform","clearable","checkable","checkableIndicator","className","design","disabled","error","fluid","getA11ySelectionMessage","a11ySelectedItemsMessage","getA11yStatusMessage","inline","inverted","highlightFirstItemOnOpen","headerMessage","moveFocusOnTab","noResultsMessage","loading","loadingMessage","placeholder","renderItem","renderSelectedItem","styles","variables","align","flipBoundary","overflowBoundary","position","positionFixed","offset","unstable_disableTether","unstable_pinned","autoSize","_partitionPopperProps","partitionPopperPropsFromShorthand","list","positioningProps","buttonRef","useRef","inputRef","listRef","selectedItemsRef","containerRef","defaultTriggerButtonId","useMemo","_uniqueId2","selectedItemsCountNarrationId","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","_useAutoControlled","useAutoControlled","defaultValue","defaultActiveSelectedIndex","initialValue","undefined","activeSelectedIndex","setActiveSelectedIndex","_useAutoControlled2","defaultHighlightedIndex","highlightedIndex","setHighlightedIndex","_useAutoControlled3","defaultOpen","open","setOpen","_useAutoControlled4","defaultSearchQuery","setSearchQuery","_useAutoControlled5","setValue","_React$useState","useState","a11ySelectionStatus","setA11ySelectionStatus","_React$useState2","focused","setFocused","_React$useState3","isFromKeyboard","setIsFromKeyboard","_React$useState4","itemIsFromKeyboard","setItemIsFromKeyboard","_React$useState5","startingString","setStartingString","inListbox","_getFilteredValues","_useStyles","useStyles","mapPropsToStyles","_positioningProps$pos","isEmptyClearIndicator","hasToggleIndicator","hasItemsSelected","length","mapPropsToInlineStyles","rtl","classes","resolvedStyles","popperRef","useMergedRefs","useIsomorphicLayoutEffect","_popperRef$current","current","updatePosition","clearA11ySelectionMessage","_debounce2","clearStartingString","handleChange","e","_invoke2","assign","handleOnBlur","target","renderTriggerButton","getToggleButtonProps","content","getSelectedItemAsString","triggerButtonId","triggerButtonContentId","triggerButtonProps","onFocus","handleTriggerButtonOrListFocus","onBlur","handleTriggerButtonBlur","onKeyDown","handleTriggerButtonKeyDown","Boolean","join","onClick","restTriggerButtonProps","_objectWithoutPropertiesLoose2","createElement","Ref","innerRef","createShorthand","Button","defaultProps","id","overrideProps","predefinedProps","resolvedContent","_isPlainObject2","children","renderSearchInput","accessibilityComboboxProps","getInputProps","selectItemAtIndex","toggleMenu","noPlaceholder","isMac","test","navigator","platform","comboboxProps","DropdownSearchInput","create","handleSearchInputOverrides","renderSelectedItemsCountNarration","narration","style","screenReaderContainerStyles","renderItemsList","getMenuProps","getItemProps","renderItems","_getMenuProps","refKey","suppressRefError","accessibilityMenuProps","accessibilityInputProps","handleListKeyDown","listElement","handleRef","Popper","_extends2","enabled","targetRef","positioningDependencies","List","tabIndex","listProps","handleListBlur","footerItem","renderItemsListFooter","headerItem","renderItemsListHeader","index","selected","DropdownItem","active","header","handleItemOverrides","render","push","concat","selectedItemsCountNarration","renderSelectedItems","map","DropdownSelectedItem","isSelectedItemActive","handleSelectedItemOverrides","Fragment","role","downshiftStateReducer","state","changes","activeElement","type","Downshift","stateChangeTypes","blurButton","isOpen","handleInputValueChange","inputValue","stateAndHelpers","itemSelected","setStateAndInvokeHandler","handleStateChange","_context$target2","newState","changeInput","shouldValueChange","itemIndex","findIndex","i","_itemToString","_changes$inputValue","toLocaleLowerCase","startsWith","shouldMenuClose","keyDownEnter","clickItem","shouldAddHighlightedIndex","isSameItemSelected","newValue","_itemToString2","onAdd","setA11ySelectionMessage","_context$target","defaultView","setTimeout","scrollTop","scrollHeight","tryFocusTriggerButton","keyDownEscape","keyDownArrowDown","keyDownArrowUp","highlightedIndexOnArrowKeyOpen","getHighlightedIndexOnArrowKeyOpen","_isNumber2","focus","mouseUp","_itemToString3","clickButton","keyDownSpaceButton","_itemToString4","itemMouseEnter","unknown","_isEmpty2","handlers","accessibilityItemProps","stopPropagation","nativeEvent","stopImmediatePropagation","onRemove","dropdownSelectedItemProps","handleSelectedItemRemove","handleSelectedItemKeyDown","handleInputBlur","searchInputProps","detectIsFromKeyboard","handleInputKeyDown","getCode","keyboardKey","Home","End","Tab","handleTabSelection","ArrowLeft","process","env","NODE_ENV","setWhatInputSource","view","document","trySetLastSelectedItemAsActive","ArrowRight","Backspace","tryRemoveItemFromValue","Escape","ArrowUp","ArrowDown","Enter","onChange","node","onInputBlur","onInputKeyDown","_isNil2","preventDefault","selectionStart","selectionEnd","removeItemFromValue","handleClear","tryFocusSearchInput","handleContainerClick","accessibilityInputPropsKeyDown","keyCode","keyString","String","fromCharCode","setHighlightedIndexOnCharKeyDown","previousKey","nextKey","Delete","relatedTarget","newStartingString","newHighlightedIndex","_findIndex2","poppedItem","currentElement","pop","handlerNames","event","proposedValue","forEach","handlerName","isArrowUp","isArrowDown","itemsLength","useEffect","cancel","element","root","stateReducer","scrollIntoView","menu","nodeToScroll","actions","computeScrollIntoView","boundary","scrollMode","block","_ref","el","top","left","scrollLeft","onStateChange","onInputValueChange","labelId","environment","inputId","_ref2","getRootProps","_getRootProps","accessibilityRootPropsRest","showClearIndicator","cx","Box","accessibility","indicatorBehavior","SpacebarKey","Portal","propTypes","commonPropTypes","createCommon","number","bool","shorthandAllowingChildren","string","oneOfType","itemShorthand","collectionShorthand","object","func","onOpenChange","onSearchQueryChange","onActiveSelectedIndexChange","onHighlightedIndexChange","oneOf","ALIGNMENTS","arrayOf","POSITIONS","AUTOSIZES","keys","CloseIcon","outline","isValidElement","ChevronDownIcon","Item","SearchInput","SelectedItem"],"sources":["components/Dropdown/Dropdown.tsx"],"sourcesContent":["import {\n  getElementType,\n  useAutoControlled,\n  useStyles,\n  useUnhandledProps,\n  useFluentContext,\n  useTelemetry,\n  ForwardRefWithAs,\n  useMergedRefs,\n  useIsomorphicLayoutEffect,\n} from '@fluentui/react-bindings';\nimport { handleRef, Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { indicatorBehavior, AccessibilityAttributes, getCode, keyboardKey, SpacebarKey } from '@fluentui/accessibility';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\nimport cx from 'classnames';\nimport computeScrollIntoView from 'compute-scroll-into-view';\n\nimport { ShorthandRenderFunction, ShorthandValue, ShorthandCollection, FluentComponentStaticProps } from '../../types';\nimport Downshift, {\n  DownshiftState,\n  StateChangeOptions,\n  A11yStatusMessageOptions,\n  GetMenuPropsOptions,\n  GetPropsCommonOptions,\n  GetInputPropsOptions,\n  GetToggleButtonPropsOptions,\n  GetItemPropsOptions,\n  ControllerStateAndHelpers,\n} from 'downshift';\nimport {\n  commonPropTypes,\n  UIComponentProps,\n  isFromKeyboard as detectIsFromKeyboard,\n  createShorthand,\n  setWhatInputSource,\n} from '../../utils';\nimport { List, ListProps } from '../List/List';\nimport { DropdownItem, DropdownItemProps } from './DropdownItem';\nimport { DropdownSelectedItem, DropdownSelectedItemProps } from './DropdownSelectedItem';\nimport { DropdownSearchInput, DropdownSearchInputProps } from './DropdownSearchInput';\nimport { Button, ButtonProps } from '../Button/Button';\nimport { screenReaderContainerStyles } from '../../utils/accessibility/Styles/accessibilityStyles';\nimport { Box, BoxProps } from '../Box/Box';\nimport { Portal } from '../Portal/Portal';\nimport {\n  ALIGNMENTS,\n  POSITIONS,\n  Popper,\n  PositioningProps,\n  PopperShorthandProps,\n  partitionPopperPropsFromShorthand,\n  AutoSize,\n  AUTOSIZES,\n} from '../../utils/positioner';\nimport { CloseIcon, ChevronDownIcon } from '@fluentui/react-icons-northstar';\n\nexport interface DownshiftA11yStatusMessageOptions<Item> extends Required<A11yStatusMessageOptions<Item>> {}\n\nexport interface DropdownSlotClassNames {\n  clearIndicator: string;\n  container: string;\n  toggleIndicator: string;\n  item: string;\n  itemsCount: string;\n  itemsList: string;\n  searchInput: string;\n  selectedItem: string;\n  selectedItems: string;\n  triggerButton: string;\n}\n\nexport interface DropdownProps extends UIComponentProps<DropdownProps>, PositioningProps {\n  /** The index of the currently selected item, if the dropdown supports multiple selection. */\n  activeSelectedIndex?: number;\n\n  /** Whether the ComboBox allows freeform user input, rather than restricting to the provided options. */\n  allowFreeform?: boolean;\n\n  /** Identifies the element (or elements) that labels the current element. Will be passed to `triggerButton`. */\n  'aria-labelledby'?: AccessibilityAttributes['aria-labelledby'];\n  'aria-describedby'?: AccessibilityAttributes['aria-describedby'];\n\n  /** Indicates the entered value does not conform to the format expected by the application. Will be passed to `triggerButton`. */\n  'aria-invalid'?: AccessibilityAttributes['aria-invalid'];\n\n  /** A dropdown item can show a check indicator if it is selected. */\n  checkable?: boolean;\n\n  /** A slot for a selected indicator in the dropdown list. */\n  checkableIndicator?: ShorthandValue<BoxProps>;\n\n  /** A dropdown can be clearable to let users remove their selection. */\n  clearable?: boolean;\n\n  /** A slot for the clearing indicator. */\n  clearIndicator?: ShorthandValue<BoxProps>;\n\n  /** The initial value for the index of the currently selected item in a multiple selection. */\n  defaultActiveSelectedIndex?: number;\n\n  /** The initial value for 'open' in uncontrolled mode. */\n  defaultOpen?: boolean;\n\n  /** The initial list item index to highlight. */\n  defaultHighlightedIndex?: number;\n\n  /** The initial value for the search query if the dropdown has `search` enabled. */\n  defaultSearchQuery?: string;\n\n  /** The initial value (or value array if the array has multiple selection). */\n  defaultValue?: ShorthandValue<DropdownItemProps> | ShorthandCollection<DropdownItemProps>;\n\n  /** A dropdown can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** A dropdown can fill the width of its container. */\n  fluid?: boolean;\n\n  /** Object with callbacks for generating announcements for item selection and removal. */\n  getA11ySelectionMessage?: {\n    /**\n     * Callback that creates custom accessibility message a screen reader narrates on item added to selection.\n     * @param item - Dropdown added element.\n     */\n    onAdd?: (item: ShorthandValue<DropdownItemProps>) => string;\n    /**\n     * Callback that creates custom accessibility message a screen reader narrates on item removed from selection.\n     * @param item - Dropdown removed element.\n     */\n    onRemove?: (item: ShorthandValue<DropdownItemProps>) => string;\n    /**\n     * Callback that creates custom accessibility message about the selected items count a screen reader narrates on input field focus.\n     * @param count - number of items selected.\n     */\n    itemsCount?: (count: number) => string;\n  };\n\n  /** A label for selected items listbox. */\n  a11ySelectedItemsMessage?: string;\n\n  /**\n   * Callback that provides status announcement message with number of items in the list, using Arrow Up/Down keys to navigate through them and, if multiple, using Arrow Left/Right to navigate through selected items.\n   * @param messageGenerationProps - Object with properties to generate message from. See getA11yStatusMessage from Downshift repo.\n   */\n  getA11yStatusMessage?: (options: DownshiftA11yStatusMessageOptions<ShorthandValue<DropdownItemProps>>) => string;\n\n  /** A dropdown can highlight the first option when it opens. */\n  highlightFirstItemOnOpen?: boolean;\n\n  /** The index of the list item to highlight. */\n  highlightedIndex?: number;\n\n  /** A dropdown can be formatted to appear inline next to other elements. */\n  inline?: boolean;\n\n  /** A dropdown can have inverted colors. */\n  inverted?: boolean;\n\n  /** Array of props for generating list options (Dropdown.Item[]) and selected item labels (Dropdown.SelectedItem[]), if it's a multiple selection. */\n  items?: ShorthandCollection<DropdownItemProps>;\n\n  /**\n   * A function that converts an item to string. Used when dropdown has `search` enabled.\n   * By default, it:\n   * - returns the `header` property if it exists on an item\n   * - stringifies the item if it is a primitive type\n   */\n  itemToString?: (item: ShorthandValue<DropdownItemProps>) => string;\n\n  /** Used when comparing two items in multiple selection. Default comparison is by the header prop. */\n  itemToValue?: (item: ShorthandValue<DropdownItemProps>) => any;\n\n  /** A message to be displayed in the list header. */\n  headerMessage?: ShorthandValue<DropdownItemProps>;\n\n  /** A slot for dropdown list. */\n  list?: ShorthandValue<ListProps & { popper?: PopperShorthandProps }>;\n\n  /** A dropdown can show that it is currently loading data. */\n  loading?: boolean;\n\n  /** A message to be displayed in the list when the dropdown is loading. */\n  loadingMessage?: ShorthandValue<DropdownItemProps>;\n\n  /** When selecting an element with Tab, focus stays on the dropdown by default. If true, the focus will jump to next/previous element in DOM. Only available to multiple selection dropdowns. */\n  moveFocusOnTab?: boolean;\n\n  /** A dropdown can allow a user to select multiple items. */\n  multiple?: boolean;\n\n  /** A message to be displayed in the list when the dropdown has no items. */\n  noResultsMessage?: ShorthandValue<DropdownItemProps>;\n\n  /**\n   * Called when the dropdown's selected items index change.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and the new selected value(s).\n   */\n  onActiveSelectedIndexChange?: (event: React.MouseEvent | React.KeyboardEvent | null, data: DropdownProps) => void;\n\n  /**\n   * Called when the dropdown's highlighted index change.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and the new selected value(s).\n   */\n  onHighlightedIndexChange?: (event: React.MouseEvent | React.KeyboardEvent | null, data: DropdownProps) => void;\n\n  /**\n   * Called when the dropdown opens or closes.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props, with `open` reflecting the new open state.\n   */\n  onOpenChange?: (event: React.MouseEvent | React.KeyboardEvent | null, data: DropdownProps) => void;\n\n  /**\n   * Called when the dropdown's search query changes.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props, with `searchQuery` reflecting its new value.\n   */\n  onSearchQueryChange?: (event: React.MouseEvent | React.KeyboardEvent | null, data: DropdownProps) => void;\n\n  /**\n   * Called when the dropdown's selected item(s) change.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and the new selected value(s).\n   */\n  onChange?: (event: React.MouseEvent | React.KeyboardEvent | null, data: DropdownProps) => void;\n\n  /**\n   * Called when the focus moves out from dropdown.\n   * @param event - React's original SyntheticEvent.\n   */\n  onBlur?: (event: React.FocusEvent | null) => void;\n\n  /** A dropdown's open state can be controlled. */\n  open?: boolean;\n\n  /** A placeholder message for the input field. */\n  placeholder?: string;\n\n  /**\n   * A render function to customize how items are rendered in the dropdown.\n   *\n   * @param Component - The computed component for this slot.\n   * @param props - The computed props for this slot.\n   * @param children - The computed children for this slot.\n   */\n  renderItem?: ShorthandRenderFunction<DropdownItemProps>;\n\n  /**\n   * A custom render function for the selected item. Only applicable with the `multiple` prop.\n   *\n   * @param Component - The computed component for this slot.\n   * @param props - The computed props for this slot.\n   * @param children - The computed children for this slot.\n   */\n  renderSelectedItem?: ShorthandRenderFunction<DropdownSelectedItemProps>;\n\n  /** A dropdown can have a search field instead of trigger button. Can receive a custom search function that will replace the default equivalent. */\n  search?:\n    | boolean\n    | ((items: ShorthandCollection<DropdownItemProps>, searchQuery: string) => ShorthandCollection<DropdownItemProps>);\n\n  /** A search dropdown's input can be customized. */\n  searchInput?: ShorthandValue<DropdownSearchInputProps>;\n\n  /** Sets search query value (controlled mode). */\n  searchQuery?: string;\n\n  /** Controls the appearance of the indicator that shows/hides the list of items. */\n  toggleIndicator?: ShorthandValue<BoxProps>;\n\n  /** Controls the appearance of the trigger button if it's a selection dropdown (not a search). */\n  triggerButton?: ShorthandValue<ButtonProps>;\n\n  /** Sets the dropdown's currently selected value(s) in controlled mode. */\n  value?: ShorthandValue<DropdownItemProps> | ShorthandCollection<DropdownItemProps>;\n\n  /** Dropdown can have errors status  */\n  error?: boolean;\n}\n\nexport type DropdownStylesProps = Required<\n  Pick<DropdownProps, 'disabled' | 'error' | 'fluid' | 'inline' | 'inverted' | 'multiple' | 'position' | 'open'>\n> & {\n  focused: boolean;\n  isEmptyClearIndicator: boolean;\n  hasToggleIndicator: boolean;\n  isFromKeyboard: boolean;\n  search: boolean;\n  hasItemsSelected: boolean;\n};\n\ntype DropdownStateForInvoke = {\n  activeSelectedIndex?: number | null;\n  highlightedIndex?: number | null;\n  itemIsFromKeyboard?: boolean;\n  open?: boolean;\n  searchQuery?: string;\n  value?: ShorthandCollection<DropdownItemProps>;\n};\n\nexport const dropdownClassName = 'ui-dropdown';\nexport const dropdownSlotClassNames: DropdownSlotClassNames = {\n  clearIndicator: `${dropdownClassName}__clear-indicator`,\n  container: `${dropdownClassName}__container`,\n  toggleIndicator: `${dropdownClassName}__toggle-indicator`,\n  item: `${dropdownClassName}__item`,\n  itemsCount: `${dropdownClassName}__items-count`,\n  itemsList: `${dropdownClassName}__items-list`,\n  searchInput: `${dropdownClassName}__searchinput`,\n  selectedItem: `${dropdownClassName}__selecteditem`,\n  selectedItems: `${dropdownClassName}__selected-items`,\n  triggerButton: `${dropdownClassName}__trigger-button`,\n};\n\nconst a11yStatusCleanupTime = 500;\nconst charKeyPressedCleanupTime = 500;\n\n/** `normalizedValue` should be normalized always as it can be received from props */\nfunction normalizeValue(multiple: boolean, rawValue: DropdownProps['value']): ShorthandCollection<DropdownItemProps> {\n  const normalizedValue = Array.isArray(rawValue) ? rawValue : [rawValue];\n\n  if (multiple) {\n    return normalizedValue;\n  }\n\n  if (normalizedValue[0] === '') {\n    return [];\n  }\n\n  return normalizedValue.slice(0, 1);\n}\n\n/**\n * Used to compute the filtered items (by value and search query) and, if needed,\n * their string equivalents, in order to be used throughout the component.\n */\nfunction getFilteredValues(\n  options: Required<\n    Pick<DropdownProps, 'multiple' | 'items' | 'itemToValue' | 'itemToString' | 'search' | 'searchQuery'>\n  > & {\n    value: ShorthandCollection<DropdownItemProps>;\n  },\n) {\n  const { items, itemToString, itemToValue, multiple, search, searchQuery, value } = options;\n\n  const filteredItemsByValue = multiple ? _.differenceBy(items, value, itemToValue) : items;\n  const filteredItemStrings = _.map(filteredItemsByValue, filteredItem => itemToString(filteredItem).toLowerCase());\n\n  if (search) {\n    if (_.isFunction(search)) {\n      return {\n        filteredItems: search(filteredItemsByValue, searchQuery),\n        filteredItemStrings,\n      };\n    }\n\n    return {\n      filteredItems: filteredItemsByValue.filter(\n        item => itemToString(item).toLowerCase().indexOf(searchQuery.toLowerCase()) !== -1,\n      ),\n      filteredItemStrings,\n    };\n  }\n\n  return {\n    filteredItems: filteredItemsByValue,\n    filteredItemStrings,\n  };\n}\n\nconst isEmpty = prop => {\n  return typeof prop === 'object' && !prop.props && !_.get(prop, 'children') && !_.get(prop, 'content');\n};\n\n/**\n * A Dropdown allows user to select one or more values from a list of options.\n * Can be created with search and multi-selection capabilities.\n *\n * @accessibility\n * Implements [ARIA Combo Box](https://www.w3.org/TR/wai-aria-practices-1.1/#combobox) design pattern, uses aria-live to announce state changes.\n * @accessibilityIssues\n * [Issue 991203: VoiceOver doesn't narrate properly elements in the input/combobox](https://bugs.chromium.org/p/chromium/issues/detail?id=991203)\n * [JAWS - ESC (ESCAPE) not closing collapsible listbox (dropdown) on first time #528](https://github.com/FreedomScientific/VFO-standards-support/issues/528)\n */\nexport const Dropdown = React.forwardRef<HTMLDivElement, DropdownProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Dropdown.displayName, context.telemetry);\n\n  setStart();\n\n  const {\n    'aria-labelledby': ariaLabelledby,\n    'aria-describedby': ariaDescribedby,\n    'aria-invalid': ariaInvalid,\n    allowFreeform,\n    clearable,\n    clearIndicator,\n    checkable,\n    checkableIndicator,\n    className,\n    design,\n    disabled,\n    error,\n    fluid,\n    getA11ySelectionMessage,\n    a11ySelectedItemsMessage,\n    getA11yStatusMessage,\n    inline,\n    inverted,\n    itemToString,\n    itemToValue,\n    items,\n    highlightFirstItemOnOpen,\n    multiple,\n    headerMessage,\n    moveFocusOnTab,\n    noResultsMessage,\n    loading,\n    loadingMessage,\n    placeholder,\n    renderItem,\n    renderSelectedItem,\n    search,\n    searchInput,\n    styles,\n    toggleIndicator,\n    triggerButton,\n    variables,\n  } = props;\n\n  const {\n    align,\n    flipBoundary,\n    overflowBoundary,\n    position,\n    positionFixed,\n    offset,\n    unstable_disableTether,\n    unstable_pinned,\n    autoSize,\n  } = props; // PositioningProps passed directly to Dropdown\n  const [list, positioningProps] = partitionPopperPropsFromShorthand(props.list); // PositioningProps passed to Dropdown `list` prop's `popper` key\n\n  const buttonRef = React.useRef<HTMLElement>();\n  const inputRef = React.useRef<HTMLInputElement | undefined>() as React.MutableRefObject<HTMLInputElement | undefined>;\n  const listRef = React.useRef<HTMLElement>();\n  const selectedItemsRef = React.useRef<HTMLDivElement>();\n  const containerRef = React.useRef<HTMLDivElement>();\n\n  const defaultTriggerButtonId = React.useMemo(() => _.uniqueId('dropdown-trigger-button-'), []);\n  const selectedItemsCountNarrationId = React.useMemo(() => _.uniqueId('dropdown-selected-items-count-'), []);\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Dropdown.handledProps, props);\n\n  const [activeSelectedIndex, setActiveSelectedIndex] = useAutoControlled<number | null | undefined>({\n    defaultValue: props.defaultActiveSelectedIndex,\n    initialValue: multiple ? null : undefined,\n    value: props.activeSelectedIndex,\n  });\n  const [highlightedIndex, setHighlightedIndex] = useAutoControlled<number | null>({\n    defaultValue: props.defaultHighlightedIndex,\n    initialValue: highlightFirstItemOnOpen ? 0 : null,\n    value: props.highlightedIndex,\n  });\n  const [open, setOpen] = useAutoControlled({\n    defaultValue: props.defaultOpen,\n    initialValue: false,\n    value: props.open,\n  });\n  const [searchQuery, setSearchQuery] = useAutoControlled<string | undefined>({\n    defaultValue: props.defaultSearchQuery,\n    initialValue: search ? '' : undefined,\n    value: props.searchQuery,\n  });\n  const [rawValue, setValue] = useAutoControlled({\n    defaultValue: props.defaultValue,\n    initialValue: [],\n    value: props.value,\n  });\n  const value = normalizeValue(multiple, rawValue);\n\n  const [a11ySelectionStatus, setA11ySelectionStatus] = React.useState('');\n  const [focused, setFocused] = React.useState(false);\n  const [isFromKeyboard, setIsFromKeyboard] = React.useState(false);\n  const [itemIsFromKeyboard, setItemIsFromKeyboard] = React.useState(false);\n  const [startingString, setStartingString] = React.useState<string | undefined>(search ? undefined : '');\n  // used for keeping track of the source of the input, as Downshift does not pass events to the handlers\n  // for free form dropdown:\n  // - if the value is changed based on search query change (from input), accept any value even if not in the list\n  // - if the value is changed based on selection from list, use the value from the list item\n  const inListbox = React.useRef(false);\n\n  const { filteredItems, filteredItemStrings } = getFilteredValues({\n    itemToString,\n    itemToValue,\n    items,\n    multiple,\n    search,\n    searchQuery,\n    value,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<DropdownStylesProps>(Dropdown.displayName, {\n    className: dropdownClassName,\n    mapPropsToStyles: () => ({\n      disabled,\n      error,\n      fluid,\n      focused,\n      isEmptyClearIndicator: isEmpty(clearIndicator),\n      hasToggleIndicator: !!toggleIndicator,\n      inline,\n      inverted,\n      isFromKeyboard,\n      multiple,\n      open,\n      position: positioningProps?.position ?? position,\n      search: !!search,\n      hasItemsSelected: value.length > 0,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const popperRef = useMergedRefs(props.popperRef);\n\n  useIsomorphicLayoutEffect(() => {\n    popperRef.current?.updatePosition();\n  }, [filteredItems?.length, popperRef]);\n\n  const clearA11ySelectionMessage = React.useMemo(\n    () =>\n      _.debounce(() => {\n        setA11ySelectionStatus('');\n      }, a11yStatusCleanupTime),\n    [],\n  );\n  const clearStartingString = React.useMemo(\n    () =>\n      _.debounce(() => {\n        setStartingString('');\n      }, charKeyPressedCleanupTime),\n    [],\n  );\n\n  const handleChange = (e: React.SyntheticEvent) => {\n    // Dropdown component doesn't present any `input` component in markup, however all of our\n    // components should handle events transparently.\n    _.invoke(props, 'onChange', e, { ...props, value });\n  };\n\n  const handleOnBlur = (e: React.SyntheticEvent) => {\n    // Dropdown component doesn't present any `input` component in markup, however all of our\n    // components should handle events transparently.\n    if (e.target !== buttonRef.current) {\n      _.invoke(props, 'onBlur', e, props);\n    }\n  };\n\n  const renderTriggerButton = (getToggleButtonProps: (options?: GetToggleButtonPropsOptions) => any): JSX.Element => {\n    const content = getSelectedItemAsString(value[0]);\n    const triggerButtonId = triggerButton['id'] || defaultTriggerButtonId;\n    const triggerButtonContentId = `${triggerButtonId}__content`;\n    const triggerButtonProps = getToggleButtonProps({\n      disabled,\n      onFocus: handleTriggerButtonOrListFocus,\n      onBlur: handleTriggerButtonBlur,\n      onKeyDown: e => {\n        handleTriggerButtonKeyDown(e);\n      },\n      'aria-invalid': ariaInvalid,\n      'aria-label': undefined,\n      'aria-labelledby': [ariaLabelledby, triggerButtonContentId].filter(Boolean).join(' '),\n      ...(open && { 'aria-expanded': true }),\n    });\n\n    const { onClick, onFocus, onBlur, onKeyDown, ...restTriggerButtonProps } = triggerButtonProps;\n\n    return (\n      <Ref innerRef={buttonRef}>\n        {createShorthand(Button, triggerButton, {\n          defaultProps: () => ({\n            className: dropdownSlotClassNames.triggerButton,\n            disabled,\n            id: triggerButtonId,\n            fluid: true,\n            styles: resolvedStyles.triggerButton,\n            ...restTriggerButtonProps,\n          }),\n          overrideProps: (predefinedProps: ButtonProps) => {\n            // It can be a shorthand\n            const resolvedContent = _.isPlainObject(predefinedProps.content)\n              ? (predefinedProps.content as {})\n              : predefinedProps.content\n              ? { children: predefinedProps.content }\n              : {};\n\n            return {\n              content:\n                // If `null` is passed we should not render the slot\n                predefinedProps.content === null ? null : { content, id: triggerButtonContentId, ...resolvedContent },\n              onClick: e => {\n                onClick(e);\n                _.invoke(predefinedProps, 'onClick', e, predefinedProps);\n              },\n              onFocus: e => {\n                onFocus(e);\n                _.invoke(predefinedProps, 'onFocus', e, predefinedProps);\n              },\n              onBlur: e => {\n                if (!disabled) {\n                  onBlur(e);\n                }\n\n                _.invoke(predefinedProps, 'onBlur', e, predefinedProps);\n              },\n              onKeyDown: e => {\n                if (!disabled) {\n                  onKeyDown(e);\n                }\n\n                _.invoke(predefinedProps, 'onKeyDown', e, predefinedProps);\n              },\n            };\n          },\n        })}\n      </Ref>\n    );\n  };\n\n  const renderSearchInput = (\n    accessibilityComboboxProps: Object,\n    highlightedIndex: number,\n    getInputProps: (options?: GetInputPropsOptions) => any,\n    selectItemAtIndex: (index: number, otherStateToSet?: Partial<StateChangeOptions<any>>, cb?: () => void) => void,\n    toggleMenu: () => void,\n    variables,\n  ): JSX.Element => {\n    const noPlaceholder = searchQuery?.length > 0 || (multiple && value.length > 0);\n    const isMac = /Mac|iPod|iPhone|iPad/.test(navigator.platform);\n    const comboboxProps = isMac\n      ? { ...accessibilityComboboxProps, 'aria-owns': undefined }\n      : accessibilityComboboxProps;\n\n    return DropdownSearchInput.create(searchInput || {}, {\n      defaultProps: () => ({\n        className: dropdownSlotClassNames.searchInput,\n        placeholder: noPlaceholder ? '' : placeholder,\n        inline,\n        variables,\n        disabled,\n      }),\n      overrideProps: handleSearchInputOverrides(\n        highlightedIndex,\n        selectItemAtIndex,\n        toggleMenu,\n        comboboxProps,\n        getInputProps,\n      ),\n    });\n  };\n\n  const renderSelectedItemsCountNarration = id => {\n    // Get narration only if callback is provided, at least one item is selected and only in multiple case\n    if (!getA11ySelectionMessage || !getA11ySelectionMessage.itemsCount || value.length === 0 || !multiple) {\n      return null;\n    }\n    const narration = getA11ySelectionMessage.itemsCount(value.length);\n    return (\n      <span id={id} className={dropdownSlotClassNames.itemsCount} style={screenReaderContainerStyles}>\n        {narration}\n      </span>\n    );\n  };\n  const renderItemsList = (\n    highlightedIndex: number,\n    toggleMenu: () => void,\n    selectItemAtIndex: (index: number) => void,\n    getMenuProps: (options?: GetMenuPropsOptions, otherOptions?: GetPropsCommonOptions) => any,\n    getItemProps: (options: GetItemPropsOptions<ShorthandValue<DropdownItemProps>>) => any,\n    getInputProps: (options?: GetInputPropsOptions) => any,\n  ) => {\n    const items = open ? renderItems(getItemProps) : [];\n    const { innerRef, ...accessibilityMenuProps } = getMenuProps({ refKey: 'innerRef' }, { suppressRefError: true });\n\n    // If it's just a selection, some attributes and listeners from Downshift input need to go on the menu list.\n    if (!search) {\n      const accessibilityInputProps = getInputProps();\n\n      accessibilityMenuProps['aria-activedescendant'] = accessibilityInputProps['aria-activedescendant'];\n      accessibilityMenuProps['onKeyDown'] = e => {\n        handleListKeyDown(e, highlightedIndex, accessibilityInputProps['onKeyDown'], toggleMenu, selectItemAtIndex);\n      };\n    }\n\n    return (\n      <Ref\n        innerRef={(listElement: HTMLElement) => {\n          handleRef(listRef, listElement);\n          handleRef(innerRef, listElement);\n        }}\n      >\n        <Popper\n          rtl={context.rtl}\n          enabled={open}\n          targetRef={containerRef}\n          positioningDependencies={[items.length]}\n          // positioning props:\n          align={align}\n          flipBoundary={flipBoundary}\n          overflowBoundary={overflowBoundary}\n          popperRef={popperRef}\n          position={position}\n          positionFixed={positionFixed}\n          offset={offset}\n          unstable_disableTether={unstable_disableTether}\n          unstable_pinned={unstable_pinned}\n          autoSize={autoSize}\n          {...positioningProps}\n        >\n          {List.create(list, {\n            defaultProps: () => ({\n              className: dropdownSlotClassNames.itemsList,\n              ...accessibilityMenuProps,\n              styles: resolvedStyles.list,\n              items,\n              tabIndex: search ? undefined : -1, // needs to be focused when trigger button is activated.\n              'aria-hidden': !open,\n            }),\n\n            overrideProps: (predefinedProps: ListProps) => ({\n              onFocus: (e: React.SyntheticEvent<HTMLElement>, listProps: ListProps) => {\n                handleTriggerButtonOrListFocus();\n                _.invoke(predefinedProps, 'onClick', e, listProps);\n              },\n              onBlur: (e: React.SyntheticEvent<HTMLElement>, listProps: ListProps) => {\n                handleListBlur(e);\n                _.invoke(predefinedProps, 'onBlur', e, listProps);\n              },\n            }),\n          })}\n        </Popper>\n      </Ref>\n    );\n  };\n\n  const renderItems = (getItemProps: (options: GetItemPropsOptions<ShorthandValue<DropdownItemProps>>) => any) => {\n    const footerItem = renderItemsListFooter();\n    const headerItem = renderItemsListHeader();\n\n    const items = _.map(filteredItems, (item, index) => ({\n      children: () => {\n        const selected = value.indexOf(item) !== -1;\n\n        return DropdownItem.create(item, {\n          defaultProps: () => ({\n            className: dropdownSlotClassNames.item,\n            active: highlightedIndex === index,\n            selected,\n            checkable,\n            checkableIndicator,\n            isFromKeyboard: itemIsFromKeyboard,\n            variables,\n            ...(typeof item === 'object' &&\n              !item.hasOwnProperty('key') && {\n                key: (item as any).header,\n              }),\n          }),\n          overrideProps: handleItemOverrides(item, index, getItemProps, selected),\n          render: renderItem,\n        });\n      },\n    }));\n\n    if (footerItem) {\n      items.push(footerItem);\n    }\n\n    return headerItem ? [headerItem, ...items] : items;\n  };\n\n  const renderItemsListHeader = () => {\n    if (headerMessage) {\n      return {\n        children: () =>\n          DropdownItem.create(headerMessage, {\n            defaultProps: () => ({\n              key: 'items-list-footer-message',\n              styles: resolvedStyles.headerMessage,\n            }),\n          }),\n      };\n    }\n\n    return null;\n  };\n\n  const renderItemsListFooter = () => {\n    if (loading) {\n      return {\n        children: () =>\n          DropdownItem.create(loadingMessage, {\n            defaultProps: () => ({\n              key: 'loading-message',\n              styles: resolvedStyles.loadingMessage,\n            }),\n          }),\n      };\n    }\n\n    if (filteredItems && filteredItems.length === 0) {\n      return {\n        children: () =>\n          DropdownItem.create(noResultsMessage, {\n            defaultProps: () => ({\n              key: 'no-results-message',\n              styles: resolvedStyles.noResultsMessage,\n            }),\n          }),\n      };\n    }\n\n    return null;\n  };\n\n  const selectedItemsCountNarration = renderSelectedItemsCountNarration(selectedItemsCountNarrationId);\n  const renderSelectedItems = () => {\n    if (value.length === 0) {\n      return null;\n    }\n\n    const selectedItems = value.map((item: DropdownItemProps, index) =>\n      // (!) an item matches DropdownItemProps\n      DropdownSelectedItem.create(item, {\n        defaultProps: () => ({\n          className: dropdownSlotClassNames.selectedItem,\n          active: isSelectedItemActive(index),\n          disabled,\n          variables,\n          ...(typeof item === 'object' &&\n            !item.hasOwnProperty('key') && {\n              key: (item as any).header,\n            }),\n        }),\n        overrideProps: handleSelectedItemOverrides(item),\n        render: renderSelectedItem,\n      }),\n    );\n    return (\n      <>\n        <div role=\"listbox\" tabIndex={-1} aria-label={a11ySelectedItemsMessage}>\n          {selectedItems}\n        </div>\n        {selectedItemsCountNarration}\n      </>\n    );\n  };\n\n  const downshiftStateReducer = (\n    state: DownshiftState<ShorthandValue<DropdownItemProps>>,\n    changes: StateChangeOptions<ShorthandValue<DropdownItemProps>>,\n  ) => {\n    const activeElement: Element = context.target.activeElement;\n\n    switch (changes.type) {\n      case Downshift.stateChangeTypes.blurButton:\n        // Downshift closes the list by default on trigger blur. It does not support the case when dropdown is\n        // single selection and focuses list on trigger click/up/down/space/enter. Treating that here.\n        if (state.isOpen && activeElement === listRef.current) {\n          return {}; // won't change state in this case.\n        }\n        _.invoke(props, 'onBlur', null);\n      default:\n        return changes;\n    }\n  };\n\n  const handleInputValueChange = (\n    inputValue: string,\n    stateAndHelpers: ControllerStateAndHelpers<ShorthandValue<DropdownItemProps>>,\n  ) => {\n    const itemSelected = stateAndHelpers.selectedItem && inputValue === itemToString(stateAndHelpers.selectedItem);\n    if (\n      inputValue !== searchQuery &&\n      !itemSelected // when item is selected, `handleStateChange` will update searchQuery.\n    ) {\n      setStateAndInvokeHandler(['onSearchQueryChange'], null, {\n        searchQuery: inputValue,\n      });\n    }\n  };\n\n  const handleStateChange = (changes: StateChangeOptions<ShorthandValue<DropdownItemProps>>) => {\n    const { type } = changes;\n    const newState = {} as DropdownStateForInvoke;\n\n    switch (type) {\n      case Downshift.stateChangeTypes.changeInput: {\n        const shouldValueChange = changes.inputValue === '' && !multiple && value.length > 0;\n\n        if (allowFreeform) {\n          // set highlighted index to first item starting with search query\n          const itemIndex = items.findIndex(i =>\n            itemToString(i)?.toLocaleLowerCase().startsWith(changes.inputValue?.toLowerCase()),\n          );\n          if (itemIndex !== -1) {\n            newState.highlightedIndex = itemIndex;\n            // for free form always keep searchQuery and inputValue in sync\n            // as state change might not be called after last letter was entered\n            newState.searchQuery = changes.inputValue;\n          }\n        } else {\n          newState.highlightedIndex = highlightFirstItemOnOpen ? 0 : null;\n        }\n\n        if (shouldValueChange) {\n          newState.value = [];\n        }\n\n        if (open) {\n          // we clear value when in single selection user cleared the query.\n          const shouldMenuClose = changes.inputValue === '' || changes.selectedItem !== undefined;\n\n          if (shouldMenuClose) {\n            newState.open = false;\n          }\n        } else {\n          newState.open = true;\n        }\n\n        break;\n      }\n      case Downshift.stateChangeTypes.keyDownEnter:\n      case Downshift.stateChangeTypes.clickItem:\n        const shouldAddHighlightedIndex = !multiple && items && items.length > 0;\n        const isSameItemSelected = changes.selectedItem === undefined;\n        const newValue = isSameItemSelected ? value[0] : changes.selectedItem;\n\n        newState.searchQuery = getSelectedItemAsString(newValue);\n        if (allowFreeform && !inListbox.current && type === Downshift.stateChangeTypes.keyDownEnter) {\n          const itemIndex = items.findIndex(i =>\n            itemToString(i)?.toLocaleLowerCase().startsWith(searchQuery?.toLocaleLowerCase()),\n          );\n\n          // if there is an item that starts with searchQuery, still apply the search query\n          // to do auto complete (you enter '12:', can be completed to '12:00')\n          if (itemIndex === -1) {\n            delete newState.searchQuery;\n          }\n        }\n\n        newState.open = false;\n        newState.highlightedIndex = shouldAddHighlightedIndex ? items.indexOf(newValue) : null;\n        inListbox.current = false;\n\n        if (!isSameItemSelected) {\n          newState.value = multiple ? [...value, changes.selectedItem] : [changes.selectedItem];\n\n          if (getA11ySelectionMessage && getA11ySelectionMessage.onAdd) {\n            setA11ySelectionMessage(getA11ySelectionMessage.onAdd(newValue));\n          }\n        }\n\n        if (multiple) {\n          context.target?.defaultView.setTimeout(\n            () => (selectedItemsRef.current.scrollTop = selectedItemsRef.current.scrollHeight),\n            0,\n          );\n        }\n\n        // timeout because of NVDA, otherwise it narrates old button value/state\n        context.target?.defaultView.setTimeout(() => tryFocusTriggerButton(), 100);\n\n        break;\n      case Downshift.stateChangeTypes.keyDownEscape:\n        if (search && !multiple) {\n          newState.value = [];\n        }\n        newState.open = false;\n        newState.highlightedIndex = highlightFirstItemOnOpen ? 0 : null;\n        break;\n      case Downshift.stateChangeTypes.keyDownArrowDown:\n      case Downshift.stateChangeTypes.keyDownArrowUp:\n        if (changes.isOpen !== undefined) {\n          newState.open = changes.isOpen;\n          newState.highlightedIndex = changes.highlightedIndex;\n\n          if (changes.isOpen) {\n            const highlightedIndexOnArrowKeyOpen = getHighlightedIndexOnArrowKeyOpen(changes);\n\n            if (_.isNumber(highlightedIndexOnArrowKeyOpen)) {\n              newState.highlightedIndex = highlightedIndexOnArrowKeyOpen;\n            }\n\n            if (!search) {\n              listRef.current.focus();\n            }\n          } else {\n            newState.highlightedIndex = null;\n          }\n        }\n      case Downshift.stateChangeTypes['keyDownHome']:\n      case Downshift.stateChangeTypes['keyDownEnd']:\n        if (open && _.isNumber(changes.highlightedIndex)) {\n          newState.highlightedIndex = changes.highlightedIndex;\n          newState.itemIsFromKeyboard = true;\n        }\n\n        break;\n      case Downshift.stateChangeTypes.mouseUp:\n        if (open) {\n          newState.open = false;\n          if (allowFreeform) {\n            const itemIndex = items.findIndex(i =>\n              itemToString(i)?.toLowerCase().startsWith(searchQuery?.toLowerCase()),\n            );\n\n            // if there is an item that starts with searchQuery, still apply the search query\n            // to do auto complete (you enter '12:', can be completed to '12:00')\n            if (itemIndex !== -1) {\n              newState.searchQuery = itemToString(items[itemIndex]);\n            }\n          } else {\n            newState.highlightedIndex = null;\n          }\n        }\n\n        break;\n      case Downshift.stateChangeTypes.clickButton:\n      case Downshift.stateChangeTypes.keyDownSpaceButton:\n        newState.open = changes.isOpen;\n        newState.itemIsFromKeyboard = isFromKeyboard;\n\n        if (changes.isOpen) {\n          const highlightedIndexOnArrowKeyOpen = getHighlightedIndexOnArrowKeyOpen(changes);\n\n          if (_.isNumber(highlightedIndexOnArrowKeyOpen)) {\n            newState.highlightedIndex = highlightedIndexOnArrowKeyOpen;\n          }\n\n          if (!search) {\n            listRef.current.focus();\n          }\n        } else if (allowFreeform) {\n          const itemIndex = items.findIndex(i =>\n            itemToString(i)?.toLocaleLowerCase().startsWith(searchQuery.toLowerCase()),\n          );\n\n          // if there is an item that starts with searchQuery, still apply the search query\n          // to do auto complete (you enter '12:', can be completed to '12:00')\n          if (itemIndex !== -1) {\n            newState.searchQuery = itemToString(items[itemIndex]);\n          }\n        } else {\n          newState.highlightedIndex = null;\n        }\n        break;\n      case Downshift.stateChangeTypes.itemMouseEnter:\n        newState.highlightedIndex = changes.highlightedIndex;\n        newState.itemIsFromKeyboard = false;\n        break;\n      case Downshift.stateChangeTypes.unknown:\n        if (changes.selectedItem) {\n          newState.value = multiple ? [...value, changes.selectedItem] : [changes.selectedItem];\n          newState.searchQuery = multiple ? '' : changes.inputValue;\n          newState.open = false;\n          newState.highlightedIndex = changes.highlightedIndex;\n\n          tryFocusTriggerButton();\n        } else {\n          newState.open = changes.isOpen;\n        }\n      default:\n        break;\n    }\n\n    if (_.isEmpty(newState)) {\n      return;\n    }\n\n    const handlers: (keyof DropdownProps)[] = [\n      newState.highlightedIndex !== undefined && 'onHighlightedIndexChange',\n      newState.open !== undefined && 'onOpenChange',\n      newState.searchQuery !== undefined && 'onSearchQueryChange',\n      newState.value !== undefined && 'onChange',\n    ].filter(Boolean) as (keyof DropdownProps)[];\n\n    setStateAndInvokeHandler(handlers, null, newState);\n  };\n\n  const isSelectedItemActive = (index: number): boolean => {\n    return index === activeSelectedIndex;\n  };\n\n  const handleItemOverrides =\n    (\n      item: ShorthandValue<DropdownItemProps>,\n      index: number,\n      getItemProps: (options: GetItemPropsOptions<ShorthandValue<DropdownItemProps>>) => any,\n      selected: boolean,\n    ) =>\n    (predefinedProps: DropdownItemProps) => ({\n      accessibilityItemProps: {\n        ...getItemProps({\n          item,\n          index,\n          disabled: item['disabled'],\n          onClick: e => {\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n            _.invoke(predefinedProps, 'onClick', e, predefinedProps);\n          },\n        }),\n        // for single selection the selected item should have aria-selected, instead of the highlighted\n        ...(!multiple && {\n          'aria-selected': selected,\n        }),\n      },\n    });\n\n  const handleSelectedItemOverrides =\n    (item: ShorthandValue<DropdownItemProps>) => (predefinedProps: DropdownSelectedItemProps) => ({\n      onRemove: (e: React.SyntheticEvent, dropdownSelectedItemProps: DropdownSelectedItemProps) => {\n        handleSelectedItemRemove(e, item, predefinedProps, dropdownSelectedItemProps);\n      },\n      onClick: (e: React.SyntheticEvent, dropdownSelectedItemProps: DropdownSelectedItemProps) => {\n        setStateAndInvokeHandler(['onActiveSelectedIndexChange'], null, {\n          activeSelectedIndex: value.indexOf(item),\n        });\n        e.stopPropagation();\n        _.invoke(predefinedProps, 'onClick', e, dropdownSelectedItemProps);\n      },\n      onKeyDown: (e: React.KeyboardEvent, dropdownSelectedItemProps: DropdownSelectedItemProps) => {\n        handleSelectedItemKeyDown(e, item, predefinedProps, dropdownSelectedItemProps);\n      },\n    });\n\n  const handleSearchInputOverrides =\n    (\n      highlightedIndex: number,\n      selectItemAtIndex: (index: number, otherStateToSet?: Partial<StateChangeOptions<any>>, cb?: () => void) => void,\n      toggleMenu: () => void,\n      accessibilityComboboxProps: Object,\n      getInputProps: (options?: GetInputPropsOptions) => any,\n    ) =>\n    (predefinedProps: DropdownSearchInputProps) => {\n      const handleInputBlur = (e: React.SyntheticEvent, searchInputProps: DropdownSearchInputProps) => {\n        if (!disabled) {\n          setFocused(false);\n          setIsFromKeyboard(detectIsFromKeyboard());\n\n          e.nativeEvent['preventDownshiftDefault'] = true;\n        }\n\n        _.invoke(predefinedProps, 'onInputBlur', e, searchInputProps);\n      };\n\n      const handleInputKeyDown = (\n        e: React.KeyboardEvent<HTMLInputElement>,\n        searchInputProps: DropdownSearchInputProps,\n      ) => {\n        if (!disabled) {\n          switch (getCode(e)) {\n            // https://github.com/downshift-js/downshift/issues/1097\n            // Downshift skips Home/End if Deopdown is opened\n            case keyboardKey.Home:\n              e.nativeEvent['preventDownshiftDefault'] = filteredItems.length === 0;\n              break;\n            case keyboardKey.End:\n              e.nativeEvent['preventDownshiftDefault'] = filteredItems.length === 0;\n              break;\n            case keyboardKey.Tab:\n              e.stopPropagation();\n              handleTabSelection(e, highlightedIndex, selectItemAtIndex, toggleMenu);\n              break;\n            case keyboardKey.ArrowLeft:\n              e.stopPropagation();\n              if (!context.rtl) {\n                // https://github.com/testing-library/user-event/issues/709\n                // JSDOM does not implement `event.view` so prune this code path in test\n                if (process.env.NODE_ENV !== 'test') {\n                  setWhatInputSource(e.view.document, 'keyboard');\n                }\n                trySetLastSelectedItemAsActive();\n              }\n              break;\n            case keyboardKey.ArrowRight:\n              e.stopPropagation();\n              if (context.rtl) {\n                // https://github.com/testing-library/user-event/issues/709\n                // JSDOM does not implement `event.view` so prune this code path in test\n                if (process.env.NODE_ENV !== 'test') {\n                  setWhatInputSource(e.view.document, 'keyboard');\n                }\n                trySetLastSelectedItemAsActive();\n              }\n              break;\n            case keyboardKey.Backspace:\n              e.stopPropagation();\n              tryRemoveItemFromValue();\n              break;\n            case keyboardKey.Escape:\n              // If dropdown list is open ESC should close it and not propagate to the parent\n              // otherwise event should propagate\n              if (open) {\n                e.stopPropagation();\n              }\n            case keyboardKey.ArrowUp:\n            case keyboardKey.ArrowDown:\n              if (allowFreeform) {\n                inListbox.current = true;\n              }\n              break;\n            default:\n              if (getCode(e) !== keyboardKey.Enter) {\n                inListbox.current = false;\n              }\n              break;\n          }\n        }\n\n        _.invoke(predefinedProps, 'onInputKeyDown', e, {\n          ...searchInputProps,\n          highlightedIndex,\n          selectItemAtIndex,\n        });\n      };\n\n      return {\n        // getInputProps adds Downshift handlers. We also add our own by passing them as params to that function.\n        // user handlers were also added to our handlers previously, at the beginning of this function.\n        accessibilityInputProps: {\n          ...getInputProps({\n            disabled,\n            onBlur: e => {\n              handleInputBlur(e, predefinedProps);\n            },\n            onKeyDown: e => {\n              handleInputKeyDown(e, predefinedProps);\n            },\n            onChange: (e: React.ChangeEvent<HTMLInputElement>) => {\n              // we prevent the onChange input event to bubble up to our Dropdown handler,\n              // since in Dropdown it gets handled as onSearchQueryChange.\n              e.stopPropagation();\n\n              // A state modification should be triggered there otherwise it will go to an another frame and will break\n              // cursor position:\n              // https://github.com/facebook/react/issues/955#issuecomment-469352730\n              setSearchQuery(e.target.value);\n            },\n            'aria-labelledby': ariaLabelledby,\n            'aria-describedby': ariaDescribedby || selectedItemsCountNarrationId,\n          }),\n        },\n        // same story as above for getRootProps.\n        accessibilityComboboxProps,\n\n        inputRef: (node: HTMLInputElement) => {\n          handleRef(predefinedProps.inputRef, node);\n          inputRef.current = node;\n        },\n        onFocus: (e: React.FocusEvent, searchInputProps: DropdownSearchInputProps) => {\n          if (!disabled) {\n            setFocused(true);\n            setIsFromKeyboard(detectIsFromKeyboard());\n          }\n\n          _.invoke(predefinedProps, 'onFocus', e, searchInputProps);\n        },\n        onInputBlur: (e: React.FocusEvent, searchInputProps: DropdownSearchInputProps) => {\n          handleInputBlur(e, searchInputProps);\n        },\n        onInputKeyDown: (e: React.KeyboardEvent<HTMLInputElement>, searchInputProps: DropdownSearchInputProps) => {\n          handleInputKeyDown(e, searchInputProps);\n        },\n      };\n    };\n\n  /**\n   * Custom Tab selection logic, at least until Downshift will implement selection on blur.\n   * Also keeps focus on multiple selection dropdown when selecting by Tab.\n   */\n  const handleTabSelection = (\n    e: React.SyntheticEvent,\n    highlightedIndex: number,\n    selectItemAtIndex: (highlightedIndex: number) => void,\n    toggleMenu: () => void,\n  ): void => {\n    if (open) {\n      if (!_.isNil(highlightedIndex) && filteredItems.length && !items[highlightedIndex]['disabled']) {\n        selectItemAtIndex(highlightedIndex);\n\n        if (multiple && !moveFocusOnTab) {\n          e.preventDefault();\n        }\n      } else {\n        toggleMenu();\n      }\n    }\n  };\n\n  const trySetLastSelectedItemAsActive = () => {\n    if (!multiple || (inputRef.current && inputRef.current.selectionStart !== 0)) {\n      return;\n    }\n\n    if (value.length > 0) {\n      // If last element was already active, perform a 'reset' of activeSelectedIndex.\n      if (activeSelectedIndex === value.length - 1) {\n        setStateAndInvokeHandler(['onActiveSelectedIndexChange'], null, {\n          activeSelectedIndex: value.length - 1,\n        });\n      } else {\n        setStateAndInvokeHandler(['onActiveSelectedIndexChange'], null, {\n          activeSelectedIndex: value.length - 1,\n        });\n      }\n    }\n  };\n\n  const tryRemoveItemFromValue = () => {\n    if (\n      multiple &&\n      (searchQuery === '' || (inputRef.current.selectionStart === 0 && inputRef.current.selectionEnd === 0)) &&\n      value.length > 0\n    ) {\n      removeItemFromValue();\n    }\n  };\n\n  const handleClear = (e: React.SyntheticEvent<HTMLElement>) => {\n    setStateAndInvokeHandler(['onChange', 'onActiveSelectedIndexChange', 'onHighlightedIndexChange'], e, {\n      activeSelectedIndex: multiple ? null : undefined,\n      highlightedIndex: highlightFirstItemOnOpen ? 0 : null,\n      open: false,\n      searchQuery: search ? '' : undefined,\n      value: [],\n    });\n\n    tryFocusSearchInput();\n    tryFocusTriggerButton();\n  };\n\n  const handleContainerClick = () => {\n    tryFocusSearchInput();\n  };\n\n  const handleTriggerButtonKeyDown = (e: React.KeyboardEvent) => {\n    switch (getCode(e)) {\n      case keyboardKey.ArrowLeft:\n        if (!context.rtl) {\n          trySetLastSelectedItemAsActive();\n        }\n        return;\n      case keyboardKey.ArrowRight:\n        if (context.rtl) {\n          trySetLastSelectedItemAsActive();\n        }\n        return;\n      default:\n        return;\n    }\n  };\n\n  const handleListKeyDown = (\n    e: React.KeyboardEvent,\n    highlightedIndex: number,\n    accessibilityInputPropsKeyDown: (e) => any,\n    toggleMenu: () => void,\n    selectItemAtIndex: (index: number) => void,\n  ) => {\n    const keyCode = getCode(e);\n    switch (keyCode) {\n      case keyboardKey.Tab:\n        handleTabSelection(e, highlightedIndex, selectItemAtIndex, toggleMenu);\n        return;\n      case keyboardKey.Escape:\n        accessibilityInputPropsKeyDown(e);\n        tryFocusTriggerButton();\n        e.stopPropagation();\n        return;\n      default:\n        const keyString = String.fromCharCode(keyCode);\n        if (/[a-zA-Z0-9]/.test(keyString)) {\n          setHighlightedIndexOnCharKeyDown(keyString);\n        }\n        accessibilityInputPropsKeyDown(e);\n        return;\n    }\n  };\n\n  const handleSelectedItemKeyDown = (\n    e: React.KeyboardEvent,\n    item: ShorthandValue<DropdownItemProps>,\n    predefinedProps: DropdownSelectedItemProps,\n    dropdownSelectedItemProps: DropdownSelectedItemProps,\n  ) => {\n    const previousKey = context.rtl ? keyboardKey.ArrowRight : keyboardKey.ArrowLeft;\n    const nextKey = context.rtl ? keyboardKey.ArrowLeft : keyboardKey.ArrowRight;\n\n    switch (getCode(e)) {\n      case keyboardKey.Delete:\n      case keyboardKey.Backspace:\n        handleSelectedItemRemove(e, item, predefinedProps, dropdownSelectedItemProps);\n        break;\n      case previousKey:\n        if (value.length > 0 && !_.isNil(activeSelectedIndex) && activeSelectedIndex > 0) {\n          setStateAndInvokeHandler(['onActiveSelectedIndexChange'], null, {\n            activeSelectedIndex: activeSelectedIndex - 1,\n          });\n        }\n        break;\n      case nextKey:\n        if (value.length > 0 && !_.isNil(activeSelectedIndex)) {\n          if (activeSelectedIndex < value.length - 1) {\n            setStateAndInvokeHandler(['onActiveSelectedIndexChange'], null, {\n              activeSelectedIndex: activeSelectedIndex + 1,\n            });\n          } else {\n            setStateAndInvokeHandler(['onActiveSelectedIndexChange'], null, {\n              activeSelectedIndex: null,\n            });\n\n            if (search) {\n              e.preventDefault(); // prevents caret to forward one position in input.\n              inputRef.current.focus();\n            } else {\n              buttonRef.current.focus();\n            }\n          }\n        }\n        break;\n      default:\n        break;\n    }\n    _.invoke(predefinedProps, 'onKeyDown', e, dropdownSelectedItemProps);\n  };\n\n  const handleTriggerButtonOrListFocus = () => {\n    setFocused(true);\n    setIsFromKeyboard(detectIsFromKeyboard());\n  };\n\n  const handleTriggerButtonBlur = e => {\n    if (listRef.current !== e.relatedTarget) {\n      setFocused(false);\n      setIsFromKeyboard(detectIsFromKeyboard());\n    }\n  };\n\n  const handleListBlur = e => {\n    if (buttonRef.current !== e.relatedTarget) {\n      setFocused(false);\n      setIsFromKeyboard(detectIsFromKeyboard());\n    }\n  };\n\n  /**\n   * Sets highlightedIndex to be the item that starts with the character keys the\n   * user has typed. Only used in non-search dropdowns.\n   *\n   * @param keystring - The string the item needs to start with. It is composed by typing keys in fast succession.\n   */\n  const setHighlightedIndexOnCharKeyDown = (keyString: string): void => {\n    const newStartingString = `${startingString}${keyString.toLowerCase()}`;\n    let newHighlightedIndex = -1;\n\n    setStartingString(newStartingString);\n    clearStartingString();\n\n    if (_.isNumber(highlightedIndex)) {\n      newHighlightedIndex = _.findIndex(\n        filteredItemStrings,\n        item => item.startsWith(newStartingString),\n        highlightedIndex + (startingString.length > 0 ? 0 : 1),\n      );\n    }\n\n    if (newHighlightedIndex < 0) {\n      newHighlightedIndex = _.findIndex(filteredItemStrings, item => item.startsWith(newStartingString));\n    }\n\n    if (newHighlightedIndex >= 0) {\n      setStateAndInvokeHandler(['onHighlightedIndexChange'], null, {\n        highlightedIndex: newHighlightedIndex,\n      });\n    }\n  };\n\n  const handleSelectedItemRemove = (\n    e: React.SyntheticEvent,\n    item: ShorthandValue<DropdownItemProps>,\n    predefinedProps: DropdownSelectedItemProps,\n    dropdownSelectedItemProps: DropdownSelectedItemProps,\n  ) => {\n    setStateAndInvokeHandler(['onActiveSelectedIndexChange'], null, {\n      activeSelectedIndex: null,\n    });\n    removeItemFromValue(item);\n    tryFocusSearchInput();\n    tryFocusTriggerButton();\n    _.invoke(predefinedProps, 'onRemove', e, dropdownSelectedItemProps);\n  };\n\n  const removeItemFromValue = (item?: ShorthandValue<DropdownItemProps>) => {\n    let poppedItem = item;\n    let newValue = [...value];\n\n    if (poppedItem) {\n      newValue = newValue.filter(currentElement => currentElement !== item);\n    } else {\n      poppedItem = newValue.pop();\n    }\n\n    if (getA11ySelectionMessage && getA11ySelectionMessage.onRemove) {\n      setA11ySelectionMessage(getA11ySelectionMessage.onRemove(poppedItem));\n    }\n\n    setStateAndInvokeHandler(['onChange'], null, { value: newValue });\n  };\n\n  /**\n   * Calls setState and invokes event handler exposed to user.\n   * We don't have the event object for most events coming from Downshift se we send an empty event\n   * because we want to keep the event handling interface\n   */\n  const setStateAndInvokeHandler = (\n    handlerNames: (keyof DropdownProps)[],\n    event: React.SyntheticEvent<HTMLElement>,\n    newState: DropdownStateForInvoke,\n  ) => {\n    const proposedValue = _.isNil(newState.value) ? value : newState.value;\n    // `proposedValue` should be normalized for single/multiple variations, `null` condition is\n    // required as first item can be undefined\n    const newValue = multiple ? proposedValue : proposedValue[0] || null;\n\n    if (newState.hasOwnProperty('activeSelectedIndex')) {\n      setActiveSelectedIndex(newState.activeSelectedIndex);\n    }\n    if (newState.hasOwnProperty('highlightedIndex')) {\n      setHighlightedIndex(newState.highlightedIndex);\n    }\n    if (newState.hasOwnProperty('itemIsFromKeyboard')) {\n      setItemIsFromKeyboard(newState.itemIsFromKeyboard);\n    }\n    if (newState.hasOwnProperty('open')) {\n      setOpen(newState.open);\n    }\n    if (newState.hasOwnProperty('searchQuery')) {\n      setSearchQuery(newState.searchQuery);\n    }\n    if (newState.hasOwnProperty('value')) {\n      setValue(newState.value);\n    }\n\n    handlerNames.forEach(handlerName => {\n      _.invoke(props, handlerName, event, { ...props, ...newState, value: newValue });\n    });\n  };\n\n  const tryFocusTriggerButton = () => {\n    if (!search && buttonRef.current) {\n      buttonRef.current.focus();\n    }\n  };\n\n  const tryFocusSearchInput = () => {\n    if (search && inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  /**\n   * If there is no value we use the placeholder value\n   * otherwise, for single selection we convert the value with itemToString\n   * and for multiple selection we return empty string, the values are rendered by renderSelectedItems\n   */\n  const getSelectedItemAsString = (value: ShorthandValue<DropdownItemProps>): string => {\n    if (!value) {\n      return search ? '' : placeholder;\n    }\n\n    if (multiple) {\n      return '';\n    }\n\n    return itemToString(value);\n  };\n\n  const getHighlightedIndexOnArrowKeyOpen = (\n    changes: StateChangeOptions<ShorthandValue<DropdownItemProps>>,\n  ): number => {\n    const isArrowUp = changes.type === Downshift.stateChangeTypes.keyDownArrowUp;\n    const isArrowDown = changes.type === Downshift.stateChangeTypes.keyDownArrowDown;\n    const itemsLength = filteredItems.length;\n\n    if (highlightedIndex) {\n      return highlightedIndex;\n    }\n\n    if (highlightFirstItemOnOpen) {\n      // otherwise, if highlightFirstItemOnOpen prop is provied, highlight first item.\n      return 0;\n    }\n\n    if (!multiple && value.length > 0) {\n      // in single selection (search or not search), if there is a selected item, highlight it.\n      const offset = isArrowUp ? -1 : isArrowDown ? 1 : 0;\n      const newHighlightedIndex = items.indexOf(value[0]) + offset;\n      if (newHighlightedIndex >= itemsLength) {\n        return 0;\n      }\n      if (isArrowUp && newHighlightedIndex < 0) {\n        return itemsLength - 1;\n      }\n      if (newHighlightedIndex > 0) {\n        return newHighlightedIndex;\n      }\n    }\n\n    if (isArrowDown) {\n      return 0;\n    }\n    if (isArrowUp) {\n      return itemsLength - 1;\n    }\n\n    return null;\n  };\n\n  /**\n   * Function that sets and cleans the selection message after it has been set,\n   * so it is not read anymore via virtual cursor.\n   */\n  const setA11ySelectionMessage = (a11ySelectionStatus: string): void => {\n    setA11ySelectionStatus(a11ySelectionStatus);\n    clearA11ySelectionMessage();\n  };\n\n  React.useEffect(() => {\n    return () => {\n      clearStartingString.cancel();\n      clearA11ySelectionMessage.cancel();\n    };\n  }, [clearA11ySelectionMessage, clearStartingString]);\n\n  const element = (\n    <ElementType\n      className={classes.root}\n      onBlur={handleOnBlur}\n      onChange={handleChange}\n      ref={ref}\n      {...unhandledProps}\n      {...(process.env.NODE_ENV === 'test' && { 'data-test-focused': focused })}\n    >\n      <Downshift\n        isOpen={open}\n        inputValue={search ? searchQuery : null}\n        stateReducer={downshiftStateReducer}\n        itemToString={itemToString}\n        // downshift does not work with arrays as selectedItem.\n        selectedItem={multiple || !value.length ? null : value[0]}\n        scrollIntoView={(node: HTMLElement, menu: HTMLElement) => {\n          if (node) {\n            const { children } = menu;\n            let nodeToScroll = node;\n            /**\n             * If it's loading downshift doesn't take the last node with loadingMessage\n             * in consideration to scrolld so we need to check if the current is the\n             * antepenultimate and is so scroll the loading into view, same for headerMessage\n             */\n            if (loading && children[children.length - 2] === node) {\n              nodeToScroll = children[children.length - 1] as HTMLElement;\n            } else if (headerMessage && children[1] === node) {\n              nodeToScroll = children[0] as HTMLElement;\n            }\n\n            // Replicating same config that Downshift uses\n            const actions = computeScrollIntoView(nodeToScroll, {\n              boundary: menu, // Explicitly set boundary to avoid unnecessary scrolling by checking all parent elements\n              scrollMode: 'if-needed',\n              block: 'nearest',\n              inline: 'nearest',\n            });\n            actions.forEach(({ el, top, left }) => {\n              el.scrollTop = top;\n              el.scrollLeft = left;\n            });\n          }\n        }}\n        getA11yStatusMessage={getA11yStatusMessage}\n        highlightedIndex={highlightedIndex}\n        onStateChange={handleStateChange}\n        onInputValueChange={handleInputValueChange}\n        labelId={ariaLabelledby}\n        environment={context.target?.defaultView}\n        inputId={searchInput && searchInput['id'] ? searchInput['id'] : undefined}\n      >\n        {({\n          getInputProps,\n          getItemProps,\n          getMenuProps,\n          getRootProps,\n          getToggleButtonProps,\n          toggleMenu,\n          highlightedIndex,\n          selectItemAtIndex,\n        }) => {\n          const { innerRef, ...accessibilityRootPropsRest } = getRootProps(\n            { refKey: 'innerRef' },\n            { suppressRefError: true },\n          );\n          const showClearIndicator = clearable && value.length > 0;\n\n          return (\n            <Ref innerRef={innerRef}>\n              <div\n                ref={containerRef}\n                className={cx(dropdownSlotClassNames.container, classes.container)}\n                onClick={search && !open ? handleContainerClick : undefined}\n              >\n                <div ref={selectedItemsRef} className={cx(dropdownSlotClassNames.selectedItems, classes.selectedItems)}>\n                  {/* We previously were rendering the trigger button after selected items list,\n                    after listbox wrapper was introduced we moved it to before and\n                     set as absolute to avoid visual regressions   */}\n                  {!search && renderTriggerButton(getToggleButtonProps)}\n                  {multiple && renderSelectedItems()}\n                  {search &&\n                    renderSearchInput(\n                      accessibilityRootPropsRest,\n                      highlightedIndex,\n                      getInputProps,\n                      selectItemAtIndex,\n                      toggleMenu,\n                      variables,\n                    )}\n                </div>\n                {showClearIndicator\n                  ? Box.create(clearIndicator, {\n                      defaultProps: () => ({\n                        className: dropdownSlotClassNames.clearIndicator,\n                        styles: resolvedStyles.clearIndicator,\n                        ...(!search ? { tabIndex: 0, role: 'button' } : { accessibility: indicatorBehavior }),\n                      }),\n                      overrideProps: (predefinedProps: BoxProps) => ({\n                        onClick: (e: React.SyntheticEvent<HTMLElement>) => {\n                          _.invoke(predefinedProps, 'onClick', e);\n                          handleClear(e);\n                        },\n                        onKeyDown: (e: React.KeyboardEvent<HTMLElement>) => {\n                          _.invoke(predefinedProps, 'onKeyDown', e);\n                          const keyCode = getCode(e);\n                          if (!search && (keyCode === keyboardKey.Enter || keyCode === SpacebarKey)) {\n                            handleClear(e);\n                            e.preventDefault();\n                          }\n                        },\n                      }),\n                    })\n                  : Box.create(toggleIndicator, {\n                      defaultProps: () => ({\n                        className: dropdownSlotClassNames.toggleIndicator,\n                        styles: resolvedStyles.toggleIndicator,\n                        accessibility: indicatorBehavior,\n                      }),\n                      overrideProps: (predefinedProps: BoxProps) => ({\n                        onClick: e => {\n                          if (!disabled) {\n                            getToggleButtonProps({ disabled }).onClick(e);\n                          }\n\n                          _.invoke(predefinedProps, 'onClick', e);\n                        },\n                      }),\n                    })}\n                {renderItemsList(\n                  highlightedIndex,\n                  toggleMenu,\n                  selectItemAtIndex,\n                  getMenuProps,\n                  getItemProps,\n                  getInputProps,\n                )}\n              </div>\n            </Ref>\n          );\n        }}\n      </Downshift>\n      <Portal open={!!getA11ySelectionMessage}>\n        <div role=\"status\" aria-live=\"polite\" aria-relevant=\"additions text\" style={screenReaderContainerStyles}>\n          {a11ySelectionStatus}\n        </div>\n      </Portal>\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown as ForwardRefWithAs<'div', HTMLDivElement, DropdownProps> &\n  FluentComponentStaticProps<DropdownProps> & {\n    Item: typeof DropdownItem;\n    SearchInput: typeof DropdownSearchInput;\n    SelectedItem: typeof DropdownSelectedItem;\n  };\n\nDropdown.displayName = 'Dropdown';\n\nDropdown.propTypes = {\n  ...commonPropTypes.createCommon({\n    accessibility: false,\n    children: false,\n    content: false,\n  }),\n  activeSelectedIndex: PropTypes.number,\n  allowFreeform: PropTypes.bool,\n  checkable: PropTypes.bool,\n  checkableIndicator: customPropTypes.shorthandAllowingChildren,\n  clearable: PropTypes.bool,\n  clearIndicator: customPropTypes.shorthandAllowingChildren,\n  defaultActiveSelectedIndex: PropTypes.number,\n  defaultOpen: PropTypes.bool,\n  defaultHighlightedIndex: PropTypes.number,\n  defaultSearchQuery: PropTypes.string,\n  defaultValue: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n  disabled: PropTypes.bool,\n  error: PropTypes.bool,\n  fluid: PropTypes.bool,\n  getA11ySelectionMessage: PropTypes.object,\n  getA11yStatusMessage: PropTypes.func,\n  highlightFirstItemOnOpen: PropTypes.bool,\n  highlightedIndex: PropTypes.number,\n  inline: PropTypes.bool,\n  inverted: PropTypes.bool,\n  items: customPropTypes.collectionShorthand,\n  itemToString: PropTypes.func,\n  itemToValue: PropTypes.func,\n  headerMessage: customPropTypes.itemShorthand,\n  list: customPropTypes.itemShorthand,\n  loading: PropTypes.bool,\n  loadingMessage: customPropTypes.itemShorthand,\n  moveFocusOnTab: PropTypes.bool,\n  multiple: PropTypes.bool,\n  noResultsMessage: customPropTypes.itemShorthand,\n  onOpenChange: PropTypes.func,\n  onSearchQueryChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onActiveSelectedIndexChange: PropTypes.func,\n  onHighlightedIndexChange: PropTypes.func,\n  open: PropTypes.bool,\n  placeholder: PropTypes.string,\n  renderItem: PropTypes.func,\n  renderSelectedItem: PropTypes.func,\n  search: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n  searchQuery: PropTypes.string,\n  searchInput: customPropTypes.itemShorthand,\n  toggleIndicator: customPropTypes.shorthandAllowingChildren,\n  triggerButton: customPropTypes.itemShorthand,\n  value: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n  'aria-labelledby': PropTypes.string,\n  'aria-invalid': PropTypes.bool,\n  a11ySelectedItemsMessage: PropTypes.string,\n  // positioning props\n  align: PropTypes.oneOf(ALIGNMENTS),\n  flipBoundary: PropTypes.oneOfType([\n    PropTypes.object as PropTypes.Requireable<HTMLElement>,\n    PropTypes.arrayOf(PropTypes.object) as PropTypes.Requireable<HTMLElement[]>,\n    PropTypes.oneOf<'clippingParents' | 'window' | 'scrollParent'>(['clippingParents', 'window', 'scrollParent']),\n  ]),\n  overflowBoundary: PropTypes.oneOfType([\n    PropTypes.object as PropTypes.Requireable<HTMLElement>,\n    PropTypes.arrayOf(PropTypes.object) as PropTypes.Requireable<HTMLElement[]>,\n    PropTypes.oneOf<'clippingParents' | 'window' | 'scrollParent'>(['clippingParents', 'window', 'scrollParent']),\n  ]),\n  popperRef: customPropTypes.ref,\n  position: PropTypes.oneOf(POSITIONS),\n  positionFixed: PropTypes.bool,\n  offset: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.arrayOf(PropTypes.number) as PropTypes.Requireable<[number, number]>,\n  ]),\n  unstable_disableTether: PropTypes.oneOf([true, false, 'all']),\n  unstable_pinned: PropTypes.bool,\n  autoSize: PropTypes.oneOf<AutoSize>(AUTOSIZES),\n};\nDropdown.handledProps = Object.keys(Dropdown.propTypes) as any;\n\nDropdown.defaultProps = {\n  align: 'start',\n  clearIndicator: <CloseIcon outline />,\n  itemToString: item => {\n    if (!item || React.isValidElement(item)) {\n      return '';\n    }\n\n    // targets DropdownItem shorthand objects\n    return (item as any).header || String(item);\n  },\n  itemToValue: item => {\n    if (!item || React.isValidElement(item)) {\n      return '';\n    }\n\n    // targets DropdownItem shorthand objects\n    return (item as any).header || String(item);\n  },\n  list: {},\n  position: 'below',\n  toggleIndicator: <ChevronDownIcon outline />,\n  triggerButton: {},\n};\n\nDropdown.Item = DropdownItem;\nDropdown.SearchInput = DropdownSearchInput;\nDropdown.SelectedItem = DropdownSelectedItem;\n"],"mappings":"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"}