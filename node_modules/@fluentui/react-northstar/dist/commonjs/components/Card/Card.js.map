{"version":3,"file":"Card.js","names":["_accessibility","require","_reactBindings","_reactComponentRef","CustomPropTypes","_interopRequireWildcard","PropTypes","React","_utils","_CardBody","_CardColumn","_CardFooter","_CardHeader","_CardPreview","_CardTopControls","_CardExpandableBox","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","cardClassName","exports","Card","forwardRef","props","ref","context","useFluentContext","_useTelemetry","useTelemetry","displayName","telemetry","setStart","setEnd","cardRef","useRef","className","design","styles","variables","children","compact","horizontal","centered","size","fluid","onClick","disabled","expandable","elevated","inverted","ghost","selected","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","getA11yProps","useAccessibility","accessibility","debugName","actionHandlers","performClick","e","preventDefault","handleClick","focusCard","current","focus","mapPropsToBehavior","rtl","_useStyles","useStyles","mapPropsToStyles","actionable","mapPropsToInlineStyles","classes","_invoke2","element","createElement","Ref","innerRef","unstable_wrapWithFocusZone","assign","root","propTypes","commonPropTypes","createCommon","func","bool","defaultProps","cardBehavior","keys","Header","CardHeader","Body","CardBody","Footer","CardFooter","Preview","CardPreview","TopControls","CardTopControls","Column","CardColumn","ExpandableBox","CardExpandableBox","create","createShorthandFactory","Component"],"sources":["components/Card/Card.tsx"],"sourcesContent":["import { Accessibility, cardBehavior, CardBehaviorProps } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useAccessibility,\n  useStyles,\n  useFluentContext,\n  useTelemetry,\n  useUnhandledProps,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as CustomPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { ComponentEventHandler, FluentComponentStaticProps } from '../../types';\nimport { commonPropTypes, createShorthandFactory, SizeValue, UIComponentProps } from '../../utils';\nimport { CardBody } from './CardBody';\nimport { CardColumn } from './CardColumn';\nimport { CardFooter } from './CardFooter';\nimport { CardHeader } from './CardHeader';\nimport { CardPreview } from './CardPreview';\nimport { CardTopControls } from './CardTopControls';\nimport { CardExpandableBox } from './CardExpandableBox';\n\nexport interface CardProps extends UIComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<CardBehaviorProps>;\n\n  /** A primary content. */\n  children?: React.ReactNode;\n\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<CardProps>;\n\n  /** A card can be compact, without any padding inside. */\n  compact?: boolean;\n\n  /** A card will used horizontal layout. */\n  horizontal?: boolean;\n\n  /** Centers content in a card. */\n  centered?: boolean;\n\n  /** A card can be sized. */\n  size?: SizeValue;\n\n  /** A card can take up the width and height of its container. */\n  fluid?: boolean;\n\n  /** A card can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** A card can be hiding part of the content and expand on hover/focus. */\n  expandable?: boolean;\n\n  /** A card can have elevation styles. */\n  elevated?: boolean;\n\n  /** A card can have inverted background styles. */\n  inverted?: boolean;\n\n  /** A card can have ghost styles. */\n  ghost?: boolean;\n\n  /** A card can show that it is currently selected or not. */\n  selected?: boolean;\n}\n\nexport type CardStylesProps = Pick<\n  CardProps,\n  | 'compact'\n  | 'horizontal'\n  | 'centered'\n  | 'size'\n  | 'fluid'\n  | 'disabled'\n  | 'expandable'\n  | 'elevated'\n  | 'inverted'\n  | 'ghost'\n  | 'selected'\n> & {\n  actionable: boolean;\n};\n\nexport const cardClassName = 'ui-card';\n\n/**\n * A Card is used to display data in sematically grouped way.\n * * @accessibility\n * By default adds `group` role ([more information available in aria documentation](https://www.w3.org/TR/wai-aria-1.1/#group)), thus it's necessary to provide `aria-roledescription` for correct widget description. [More information available in aria documentation.](https://www.w3.org/TR/wai-aria-1.1/#aria-roledescription-property)\n * When card is actionable (i.e. has `onClick` property), use [cardFocusableBehavior](/components/card/accessibility#card-focusable). [More information available in aria documentation.](https://www.w3.org/TR/wai-aria-practices/#gridNav_focus)\n * When card contains actionable elements, use [cardChildrenFocusableBehavior](/components/card/accessibility#card-children-focusable).\n *\n */\nexport const Card = React.forwardRef<HTMLDivElement, CardProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Card.displayName, context.telemetry);\n  setStart();\n  const cardRef = React.useRef<HTMLElement>();\n\n  const {\n    className,\n    design,\n    styles,\n    variables,\n    children,\n    compact,\n    horizontal,\n    centered,\n    size,\n    fluid,\n    onClick,\n    disabled,\n    expandable,\n    elevated,\n    inverted,\n    ghost,\n    selected,\n  } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Card.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: Card.displayName,\n    actionHandlers: {\n      performClick: e => {\n        // prevent Spacebar from scrolling\n        e.preventDefault();\n        handleClick(e);\n      },\n      focusCard: e => {\n        cardRef.current.focus();\n      },\n    },\n    mapPropsToBehavior: () => ({\n      disabled,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CardStylesProps>(Card.displayName, {\n    className: cardClassName,\n    mapPropsToStyles: () => ({\n      centered,\n      horizontal,\n      compact,\n      size,\n      fluid,\n      actionable: !!onClick,\n      disabled,\n      expandable,\n      elevated,\n      inverted,\n      ghost,\n      selected,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n    if (disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const element = (\n    <Ref innerRef={cardRef}>\n      {getA11yProps.unstable_wrapWithFocusZone(\n        <ElementType\n          {...getA11yProps('root', {\n            className: classes.root,\n            onClick: handleClick,\n            ref,\n            ...unhandledProps,\n          })}\n        >\n          {children}\n        </ElementType>,\n      )}\n    </Ref>\n  );\n  setEnd();\n  return element;\n}) as unknown as ForwardRefWithAs<'div', HTMLDivElement, CardProps> &\n  FluentComponentStaticProps<CardProps> & {\n    Header: typeof CardHeader;\n    Body: typeof CardBody;\n    Footer: typeof CardFooter;\n    Preview: typeof CardPreview;\n    TopControls: typeof CardPreview;\n    Column: typeof CardColumn;\n    ExpandableBox: typeof CardExpandableBox;\n  };\n\nCard.displayName = 'Card';\n\nCard.propTypes = {\n  ...commonPropTypes.createCommon(),\n  onClick: PropTypes.func,\n  compact: PropTypes.bool,\n  horizontal: PropTypes.bool,\n  centered: PropTypes.bool,\n  size: CustomPropTypes.size,\n  fluid: PropTypes.bool,\n  expandable: PropTypes.bool,\n  disabled: PropTypes.bool,\n  elevated: PropTypes.bool,\n  ghost: PropTypes.bool,\n  inverted: PropTypes.bool,\n  selected: PropTypes.bool,\n};\n\nCard.defaultProps = {\n  accessibility: cardBehavior,\n  size: 'medium',\n};\n\nCard.handledProps = Object.keys(Card.propTypes) as any;\nCard.Header = CardHeader;\nCard.Body = CardBody;\nCard.Footer = CardFooter;\nCard.Preview = CardPreview;\nCard.TopControls = CardTopControls;\nCard.Column = CardColumn;\nCard.ExpandableBox = CardExpandableBox;\n\nCard.create = createShorthandFactory({ Component: Card });\n"],"mappings":"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"}