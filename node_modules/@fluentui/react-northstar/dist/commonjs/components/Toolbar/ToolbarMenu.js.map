{"version":3,"file":"ToolbarMenu.js","names":["_accessibility","require","_reactBindings","_reactComponentRef","customPropTypes","_interopRequireWildcard","PropTypes","React","_utils","_ToolbarMenuRadioGroup","_ToolbarMenuDivider","_ToolbarMenuItem","_toolbarVariablesContext","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","toolbarMenuClassName","exports","ToolbarMenu","compose","props","ref","composeOptions","context","useFluentContext","_useTelemetry","useTelemetry","displayName","telemetry","setStart","setEnd","accessibility","className","children","design","items","styles","variables","parentVariables","useContext","ToolbarVariablesContext","mergedVariables","mergeVariablesOverrides","slotProps","resolveSlotProps","getA11yProps","useAccessibility","debugName","actionHandlers","performClick","e","_invoke2","rtl","_useStyles","useStyles","mapPropsToInlineStyles","unstable_props","classes","handleItemOverrides","predefinedProps","onClick","itemProps","assign","menuOpen","menu","handleRadioGroupOverrides","onItemClick","renderItems","_map2","item","kind","_get2","createShorthand","slots","divider","defaultProps","group","overrideProps","toggle","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","element","unstable_wrapWithFocusZone","createElement","root","ToolbarVariablesProvider","value","childrenExist","Ref","innerRef","ToolbarMenuItem","ToolbarMenuDivider","ToolbarMenuRadioGroup","submenuIndicator","inSubmenu","submenu","toolbarMenuItemCheckboxBehavior","shorthandConfig","mappedArrayProp","propTypes","commonPropTypes","createCommon","collectionShorthandWithKindProp","func","bool","shorthandAllowingChildren","toolbarMenuBehavior","as"],"sources":["components/Toolbar/ToolbarMenu.tsx"],"sourcesContent":["import {\n  Accessibility,\n  toolbarMenuBehavior,\n  toolbarMenuItemCheckboxBehavior,\n  ToolbarMenuBehaviorProps,\n} from '@fluentui/accessibility';\nimport {\n  compose,\n  getElementType,\n  mergeVariablesOverrides,\n  useUnhandledProps,\n  useFluentContext,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n} from '@fluentui/react-bindings';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  createShorthand,\n  commonPropTypes,\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n} from '../../utils';\n\nimport { ComponentEventHandler, ShorthandCollection, ShorthandValue } from '../../types';\n\nimport { ToolbarMenuRadioGroup, ToolbarMenuRadioGroupProps } from './ToolbarMenuRadioGroup';\nimport { ToolbarMenuDivider } from './ToolbarMenuDivider';\nimport { ToolbarMenuItem, ToolbarMenuItemProps } from './ToolbarMenuItem';\nimport { BoxProps } from '../Box/Box';\nimport { ToolbarVariablesContext, ToolbarVariablesProvider } from './toolbarVariablesContext';\nimport { ToolbarDividerProps } from './ToolbarDivider';\nimport { ToolbarItemProps } from './ToolbarItem';\n\nexport type ToolbarMenuItemShorthandKinds = {\n  divider: ToolbarDividerProps;\n  item: ToolbarItemProps;\n  toggle: ToolbarItemProps;\n};\n\nexport interface ToolbarMenuProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<ToolbarMenuBehaviorProps>;\n\n  /** Shorthand array of props for ToolbarMenu. */\n  items?: ShorthandCollection<ToolbarMenuItemProps, ToolbarMenuItemShorthandKinds>;\n\n  /**\n   * Called on item click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All item props.\n   */\n  onItemClick?: ComponentEventHandler<ToolbarMenuItemProps>;\n\n  /** Indicates whether the menu is submenu. */\n  submenu?: boolean;\n\n  /** Shorthand for the submenu indicator. */\n  submenuIndicator?: ShorthandValue<BoxProps>;\n}\n\nexport type ToolbarMenuStylesProps = never;\nexport const toolbarMenuClassName = 'ui-toolbar__menu';\n\n/**\n * A ToolbarMenu creates a pop-up menu attached to a ToolbarItem.\n *\n * @accessibility\n * Implements pop-up menu (submenu) behavior of [ARIA Menu](https://www.w3.org/TR/wai-aria-practices-1.1/#menu) design pattern.\n */\nexport const ToolbarMenu = compose<'ul', ToolbarMenuProps, ToolbarMenuStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const { accessibility, className, children, design, items, styles, variables } = props;\n\n    const parentVariables = React.useContext(ToolbarVariablesContext);\n    const mergedVariables = mergeVariablesOverrides(parentVariables, variables);\n    const slotProps = composeOptions.resolveSlotProps<ToolbarMenuProps>(props);\n\n    const getA11yProps = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      actionHandlers: {\n        performClick: e => {\n          _.invoke(props, 'onClick', e, props);\n        },\n      },\n      rtl: context.rtl,\n    });\n    const { classes } = useStyles<ToolbarMenuStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables: mergedVariables,\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const handleItemOverrides = predefinedProps => ({\n      onClick: (e, itemProps) => {\n        _.invoke(predefinedProps, 'onClick', e, itemProps);\n        _.invoke(props, 'onItemClick', e, {\n          ...itemProps,\n          menuOpen: !!itemProps.menu,\n        });\n      },\n    });\n\n    const handleRadioGroupOverrides = (predefinedProps: ToolbarMenuRadioGroupProps) => ({\n      onItemClick: (e, itemProps) => {\n        _.invoke(predefinedProps, 'onItemClick', e, itemProps);\n        _.invoke(props, 'onItemClick', e, itemProps);\n      },\n    });\n\n    const renderItems = () => {\n      return _.map(items, item => {\n        const kind = _.get(item, 'kind', 'item');\n\n        switch (kind) {\n          case 'divider':\n            return createShorthand(composeOptions.slots.divider, item, {\n              defaultProps: () => slotProps.divider,\n            });\n\n          case 'group':\n            return createShorthand(composeOptions.slots.group, item, {\n              defaultProps: () => slotProps.group,\n              overrideProps: handleRadioGroupOverrides,\n            });\n\n          case 'toggle':\n            return createShorthand(composeOptions.slots.toggle, item, {\n              defaultProps: () => slotProps.toggle,\n              overrideProps: handleItemOverrides,\n            });\n\n          default:\n            return createShorthand(composeOptions.slots.item, item, {\n              defaultProps: () => slotProps.item,\n              overrideProps: handleItemOverrides,\n            });\n        }\n      });\n    };\n\n    const ElementType = getElementType(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const element = getA11yProps.unstable_wrapWithFocusZone(\n      <ElementType {...getA11yProps('root', { ...unhandledProps, className: classes.root })}>\n        <ToolbarVariablesProvider value={mergedVariables}>\n          {childrenExist(children) ? children : renderItems()}\n        </ToolbarVariablesProvider>\n      </ElementType>,\n    );\n    setEnd();\n\n    // TODO: As ElementType is wrapped with FocusZone which doesn't ref forwarding we have to use Ref\n    return ref ? <Ref innerRef={ref}>{element}</Ref> : element;\n  },\n  {\n    displayName: 'ToolbarMenu',\n    className: toolbarMenuClassName,\n\n    slots: {\n      item: ToolbarMenuItem,\n      divider: ToolbarMenuDivider,\n      group: ToolbarMenuRadioGroup,\n      toggle: ToolbarMenuItem,\n    },\n    slotProps: props => ({\n      item: {\n        submenuIndicator: props.submenuIndicator,\n        inSubmenu: props.submenu,\n      },\n      toggle: {\n        accessibility: toolbarMenuItemCheckboxBehavior,\n      },\n    }),\n\n    shorthandConfig: {\n      mappedArrayProp: 'items',\n    },\n    handledProps: [\n      'accessibility',\n      'as',\n      'children',\n      'className',\n      'content',\n      'design',\n      'items',\n      'onItemClick',\n      'styles',\n      'submenu',\n      'submenuIndicator',\n      'variables',\n    ],\n  },\n);\n\nToolbarMenu.propTypes = {\n  ...commonPropTypes.createCommon(),\n  items: customPropTypes.collectionShorthandWithKindProp(['divider', 'item']),\n  onItemClick: PropTypes.func,\n  submenu: PropTypes.bool,\n  submenuIndicator: customPropTypes.shorthandAllowingChildren,\n};\nToolbarMenu.defaultProps = {\n  accessibility: toolbarMenuBehavior,\n  as: 'ul',\n};\n"],"mappings":";;;;;;;;AAAA,IAAAA,cAAA,GAAAC,OAAA;AAMA,IAAAC,cAAA,GAAAD,OAAA;AAUA,IAAAE,kBAAA,GAAAF,OAAA;AACA,IAAAG,eAAA,GAAAC,uBAAA,CAAAJ,OAAA;AAEA,IAAAK,SAAA,GAAAD,uBAAA,CAAAJ,OAAA;AACA,IAAAM,KAAA,GAAAF,uBAAA,CAAAJ,OAAA;AAEA,IAAAO,MAAA,GAAAP,OAAA;AAWA,IAAAQ,sBAAA,GAAAR,OAAA;AACA,IAAAS,mBAAA,GAAAT,OAAA;AACA,IAAAU,gBAAA,GAAAV,OAAA;AAEA,IAAAW,wBAAA,GAAAX,OAAA;AAA8F,SAAAY,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAT,wBAAAa,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAmCvF,IAAMW,oBAAoB,GAAG,kBAAkB;;AAEtD;AACA;AACA;AACA;AACA;AACA;AALAC,OAAA,CAAAD,oBAAA,GAAAA,oBAAA;AAMO,IAAME,WAAW,GAAG,IAAAC,sBAAO,EAChC,UAACC,KAAK,EAAEC,GAAG,EAAEC,cAAc,EAAK;EAC9B,IAAMC,OAAO,GAAG,IAAAC,+BAAgB,EAAC,CAAC;EAClC,IAAAC,aAAA,GAA6B,IAAAC,2BAAY,EAACJ,cAAc,CAACK,WAAW,EAAEJ,OAAO,CAACK,SAAS,CAAC;IAAhFC,QAAQ,GAAAJ,aAAA,CAARI,QAAQ;IAAEC,MAAM,GAAAL,aAAA,CAANK,MAAM;EACxBD,QAAQ,CAAC,CAAC;EAEV,IAAQE,aAAa,GAA4DX,KAAK,CAA9EW,aAAa;IAAEC,SAAS,GAAiDZ,KAAK,CAA/DY,SAAS;IAAEC,QAAQ,GAAuCb,KAAK,CAApDa,QAAQ;IAAEC,MAAM,GAA+Bd,KAAK,CAA1Cc,MAAM;IAAEC,KAAK,GAAwBf,KAAK,CAAlCe,KAAK;IAAEC,MAAM,GAAgBhB,KAAK,CAA3BgB,MAAM;IAAEC,SAAS,GAAKjB,KAAK,CAAnBiB,SAAS;EAE5E,IAAMC,eAAe,GAAGlD,KAAK,CAACmD,UAAU,CAACC,gDAAuB,CAAC;EACjE,IAAMC,eAAe,GAAG,IAAAC,sCAAuB,EAACJ,eAAe,EAAED,SAAS,CAAC;EAC3E,IAAMM,SAAS,GAAGrB,cAAc,CAACsB,gBAAgB,CAAmBxB,KAAK,CAAC;EAE1E,IAAMyB,YAAY,GAAG,IAAAC,+BAAgB,EAACf,aAAa,EAAE;IACnDgB,SAAS,EAAEzB,cAAc,CAACK,WAAW;IACrCqB,cAAc,EAAE;MACdC,YAAY,EAAE,SAAAA,aAAAC,CAAC,EAAI;QACjB,IAAAC,QAAA,CAAAlD,OAAA,EAASmB,KAAK,EAAE,SAAS,EAAE8B,CAAC,EAAE9B,KAAK,CAAC;MACtC;IACF,CAAC;IACDgC,GAAG,EAAE7B,OAAO,CAAC6B;EACf,CAAC,CAAC;EACF,IAAAC,UAAA,GAAoB,IAAAC,wBAAS,EAAyBhC,cAAc,CAACK,WAAW,EAAE;MAChFK,SAAS,EAAEV,cAAc,CAACU,SAAS;MACnCV,cAAc,EAAdA,cAAc;MACdiC,sBAAsB,EAAE,SAAAA,uBAAA;QAAA,OAAO;UAC7BvB,SAAS,EAATA,SAAS;UACTE,MAAM,EAANA,MAAM;UACNE,MAAM,EAANA,MAAM;UACNC,SAAS,EAAEI;QACb,CAAC;MAAA,CAAC;MACFW,GAAG,EAAE7B,OAAO,CAAC6B,GAAG;MAChBI,cAAc,EAAEpC;IAClB,CAAC,CAAC;IAXMqC,OAAO,GAAAJ,UAAA,CAAPI,OAAO;EAaf,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAGC,eAAe;IAAA,OAAK;MAC9CC,OAAO,EAAE,SAAAA,QAACV,CAAC,EAAEW,SAAS,EAAK;QACzB,IAAAV,QAAA,CAAAlD,OAAA,EAAS0D,eAAe,EAAE,SAAS,EAAET,CAAC,EAAEW,SAAS,CAAC;QAClD,IAAAV,QAAA,CAAAlD,OAAA,EAASmB,KAAK,EAAE,aAAa,EAAE8B,CAAC,EAAA3C,MAAA,CAAAuD,MAAA,KAC3BD,SAAS;UACZE,QAAQ,EAAE,CAAC,CAACF,SAAS,CAACG;QAAI,EAC3B,CAAC;MACJ;IACF,CAAC;EAAA,CAAC;EAEF,IAAMC,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAIN,eAA2C;IAAA,OAAM;MAClFO,WAAW,EAAE,SAAAA,YAAChB,CAAC,EAAEW,SAAS,EAAK;QAC7B,IAAAV,QAAA,CAAAlD,OAAA,EAAS0D,eAAe,EAAE,aAAa,EAAET,CAAC,EAAEW,SAAS,CAAC;QACtD,IAAAV,QAAA,CAAAlD,OAAA,EAASmB,KAAK,EAAE,aAAa,EAAE8B,CAAC,EAAEW,SAAS,CAAC;MAC9C;IACF,CAAC;EAAA,CAAC;EAEF,IAAMM,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxB,OAAO,IAAAC,KAAA,CAAAnE,OAAA,EAAMkC,KAAK,EAAE,UAAAkC,IAAI,EAAI;MAC1B,IAAMC,IAAI,GAAG,IAAAC,KAAA,CAAAtE,OAAA,EAAMoE,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC;MAExC,QAAQC,IAAI;QACV,KAAK,SAAS;UACZ,OAAO,IAAAE,sBAAe,EAAClD,cAAc,CAACmD,KAAK,CAACC,OAAO,EAAEL,IAAI,EAAE;YACzDM,YAAY,EAAE,SAAAA,aAAA;cAAA,OAAMhC,SAAS,CAAC+B,OAAO;YAAA;UACvC,CAAC,CAAC;QAEJ,KAAK,OAAO;UACV,OAAO,IAAAF,sBAAe,EAAClD,cAAc,CAACmD,KAAK,CAACG,KAAK,EAAEP,IAAI,EAAE;YACvDM,YAAY,EAAE,SAAAA,aAAA;cAAA,OAAMhC,SAAS,CAACiC,KAAK;YAAA;YACnCC,aAAa,EAAEZ;UACjB,CAAC,CAAC;QAEJ,KAAK,QAAQ;UACX,OAAO,IAAAO,sBAAe,EAAClD,cAAc,CAACmD,KAAK,CAACK,MAAM,EAAET,IAAI,EAAE;YACxDM,YAAY,EAAE,SAAAA,aAAA;cAAA,OAAMhC,SAAS,CAACmC,MAAM;YAAA;YACpCD,aAAa,EAAEnB;UACjB,CAAC,CAAC;QAEJ;UACE,OAAO,IAAAc,sBAAe,EAAClD,cAAc,CAACmD,KAAK,CAACJ,IAAI,EAAEA,IAAI,EAAE;YACtDM,YAAY,EAAE,SAAAA,aAAA;cAAA,OAAMhC,SAAS,CAAC0B,IAAI;YAAA;YAClCQ,aAAa,EAAEnB;UACjB,CAAC,CAAC;MACN;IACF,CAAC,CAAC;EACJ,CAAC;EAED,IAAMqB,WAAW,GAAG,IAAAC,6BAAc,EAAC5D,KAAK,CAAC;EACzC,IAAM6D,cAAc,GAAG,IAAAC,gCAAiB,EAAC5D,cAAc,CAAC6D,YAAY,EAAE/D,KAAK,CAAC;EAE5E,IAAMgE,OAAO,GAAGvC,YAAY,CAACwC,0BAA0B,eACrDjG,KAAA,CAAAkG,aAAA,CAACP,WAAW,EAAKlC,YAAY,CAAC,MAAM,EAAAtC,MAAA,CAAAuD,MAAA,KAAOmB,cAAc;IAAEjD,SAAS,EAAEyB,OAAO,CAAC8B;EAAI,EAAE,CAAC,eACnFnG,KAAA,CAAAkG,aAAA,CAAC7F,wBAAA,CAAA+F,wBAAwB;IAACC,KAAK,EAAEhD;EAAgB,GAC9C,IAAAiD,oBAAa,EAACzD,QAAQ,CAAC,GAAGA,QAAQ,GAAGkC,WAAW,CAAC,CAC1B,CACf,CACf,CAAC;EACDrC,MAAM,CAAC,CAAC;;EAER;EACA,OAAOT,GAAG,gBAAGjC,KAAA,CAAAkG,aAAA,CAACtG,kBAAA,CAAA2G,GAAG;IAACC,QAAQ,EAAEvE;EAAI,GAAE+D,OAAa,CAAC,GAAGA,OAAO;AAC5D,CAAC,EACD;EACEzD,WAAW,EAAE,aAAa;EAC1BK,SAAS,EAAEhB,oBAAoB;EAE/ByD,KAAK,EAAE;IACLJ,IAAI,EAAEwB,gCAAe;IACrBnB,OAAO,EAAEoB,sCAAkB;IAC3BlB,KAAK,EAAEmB,4CAAqB;IAC5BjB,MAAM,EAAEe;EACV,CAAC;EACDlD,SAAS,EAAE,SAAAA,UAAAvB,KAAK;IAAA,OAAK;MACnBiD,IAAI,EAAE;QACJ2B,gBAAgB,EAAE5E,KAAK,CAAC4E,gBAAgB;QACxCC,SAAS,EAAE7E,KAAK,CAAC8E;MACnB,CAAC;MACDpB,MAAM,EAAE;QACN/C,aAAa,EAAEoE;MACjB;IACF,CAAC;EAAA,CAAC;EAEFC,eAAe,EAAE;IACfC,eAAe,EAAE;EACnB,CAAC;EACDlB,YAAY,EAAE,CACZ,eAAe,EACf,IAAI,EACJ,UAAU,EACV,WAAW,EACX,SAAS,EACT,QAAQ,EACR,OAAO,EACP,aAAa,EACb,QAAQ,EACR,SAAS,EACT,kBAAkB,EAClB,WAAW;AAEf,CACF,CAAC;AAAClE,OAAA,CAAAC,WAAA,GAAAA,WAAA;AAEFA,WAAW,CAACoF,SAAS,GAAA/F,MAAA,CAAAuD,MAAA,KAChByC,sBAAe,CAACC,YAAY,CAAC,CAAC;EACjCrE,KAAK,EAAElD,eAAe,CAACwH,+BAA+B,CAAC,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;EAC3EvC,WAAW,EAAE/E,SAAS,CAACuH,IAAI;EAC3BR,OAAO,EAAE/G,SAAS,CAACwH,IAAI;EACvBX,gBAAgB,EAAE/G,eAAe,CAAC2H;AAAyB,EAC5D;AACD1F,WAAW,CAACyD,YAAY,GAAG;EACzB5C,aAAa,EAAE8E,kCAAmB;EAClCC,EAAE,EAAE;AACN,CAAC"}