{"version":3,"file":"Toolbar.js","names":["_accessibility","require","_reactBindings","_reactComponentEventListener","_reactComponentRef","_reactIconsNorthstar","customPropTypes","_interopRequireWildcard","PropTypes","React","_utils","_ToolbarCustomItem","_ToolbarDivider","_ToolbarItem","_ToolbarItemWrapper","_ToolbarItemIcon","_ToolbarMenu","_ToolbarMenuDivider","_ToolbarMenuItem","_ToolbarMenuRadioGroup","_ToolbarMenuRadioGroupWrapper","_ToolbarRadioGroup","_toolbarVariablesContext","_ToolbarMenuItemSubmenuIndicator","_ToolbarMenuItemIcon","_ToolbarMenuItemActiveIndicator","_toolbarMenuContext","_Box","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","WAS_FOCUSABLE_ATTRIBUTE","toolbarClassName","exports","Toolbar","compose","props","ref","composeOptions","context","useFluentContext","_useTelemetry","useTelemetry","displayName","telemetry","setStart","setEnd","accessibility","className","children","design","getOverflowItems","items","overflow","overflowItem","overflowOpen","overflowSentinel","styles","variables","overflowContainerRef","useRef","overflowItemWrapperRef","overflowSentinelRef","offsetMeasureRef","containerRef","lastVisibleItemIndex","animationFrameId","getA11Props","useAccessibility","debugName","rtl","_useStyles","useStyles","mapPropsToStyles","mapPropsToInlineStyles","unstable_props","classes","ElementType","getElementType","slotProps","resolveSlotProps","unhandledProps","useUnhandledProps","handledProps","hide","el","style","visibility","target","activeElement","contains","current","firstFocusableItem","getFirstFocusable","firstElementChild","focus","wasFocusable","getAttribute","IS_FOCUSABLE_ATTRIBUTE","setAttribute","show","removeAttribute","isItemOverflowing","itemBoundingRect","containerBoundingRect","right","left","wouldItemCollide","$item","overflowItemBoundingRect","actualWindow","defaultView","wouldCollide","itemLeftMargin","parseFloat","getComputedStyle","marginLeft","width","itemRightMargin","marginRight","setOverflowPosition","$overflowItem","$lastVisibleItem","lastVisibleItemRect","absolutePositioningOffset","lastVisibleItemMarginLeft","horizontal","lastVisibleItemRightMargin","hideOverflowItems","$overflowContainer","$overflowSentinel","$offsetMeasure","scrollTo","Number","MAX_SAFE_INTEGER","scrollTop","scrollLeft","$items","overflowContainerBoundingRect","getBoundingClientRect","offsetMeasureBoundingRect","vertical","top","isOverflowing","_forEachRight2","i","position","length","_invoke2","collectOverflowItems","slice","getVisibleItems","end","handleWindowResize","_debounce2","e","assign","renderItems","_map2","item","kind","_get2","createShorthand","slots","divider","defaultProps","group","toggle","customItem","renderOverflowItem","overrideProps","predefinedProps","_predefinedProps$menu","menu","popper","positionFixed","menuOpen","onMenuOpenChange","_ref","wrapper","renderOverflowSentinel","createElement","Ref","innerRef","element","Box","create","id","useEffect","cancelAnimationFrame","requestAnimationFrame","undefined","_context$target$defau","Fragment","node","handleRef","unstable_wrapWithFocusZone","root","overflowContainer","ToolbarMenuContextProvider","value","ToolbarVariablesProvider","childrenExist","offsetMeasure","EventListener","listener","type","ToolbarCustomItem","ToolbarDivider","ToolbarItem","ToolbarRadioGroup","ToolbarMenu","toggleButtonBehavior","icon","MoreIcon","outline","shorthandConfig","mappedProp","propTypes","commonPropTypes","createCommon","collectionShorthandWithKindProp","bool","shorthandAllowingChildren","onOverflow","func","onOverflowOpenChange","toolbarBehavior","CustomItem","Divider","Item","ItemWrapper","ToolbarItemWrapper","ItemIcon","ToolbarItemIcon","Menu","MenuDivider","ToolbarMenuDivider","MenuItem","ToolbarMenuItem","MenuItemIcon","ToolbarMenuItemIcon","MenuItemSubmenuIndicator","ToolbarMenuItemSubmenuIndicator","MenuItemActiveIndicator","ToolbarMenuItemActiveIndicator","MenuRadioGroup","ToolbarMenuRadioGroup","MenuRadioGroupWrapper","ToolbarMenuRadioGroupWrapper","RadioGroup"],"sources":["components/Toolbar/Toolbar.tsx"],"sourcesContent":["import {\n  Accessibility,\n  toolbarBehavior,\n  ToolbarBehaviorProps,\n  toggleButtonBehavior,\n  IS_FOCUSABLE_ATTRIBUTE,\n} from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  compose,\n  getElementType,\n  getFirstFocusable,\n  useFluentContext,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport { EventListener } from '@fluentui/react-component-event-listener';\nimport { handleRef, Ref } from '@fluentui/react-component-ref';\nimport { MoreIcon } from '@fluentui/react-icons-northstar';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { ComponentEventHandler, ShorthandCollection, ShorthandValue, ObjectShorthandValue } from '../../types';\nimport {\n  childrenExist,\n  createShorthand,\n  UIComponentProps,\n  ContentComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  ColorComponentProps,\n} from '../../utils';\nimport { ToolbarCustomItem, ToolbarCustomItemProps } from './ToolbarCustomItem';\nimport { ToolbarDivider, ToolbarDividerProps } from './ToolbarDivider';\nimport { ToolbarItem, ToolbarItemProps } from './ToolbarItem';\nimport { ToolbarItemWrapper } from './ToolbarItemWrapper';\nimport { ToolbarItemIcon } from './ToolbarItemIcon';\nimport { ToolbarMenu, ToolbarMenuProps } from './ToolbarMenu';\nimport { ToolbarMenuDivider } from './ToolbarMenuDivider';\nimport { ToolbarMenuItem } from './ToolbarMenuItem';\nimport { ToolbarMenuRadioGroup, ToolbarMenuRadioGroupProps } from './ToolbarMenuRadioGroup';\nimport { ToolbarMenuRadioGroupWrapper } from './ToolbarMenuRadioGroupWrapper';\nimport { ToolbarRadioGroup } from './ToolbarRadioGroup';\nimport { ToolbarVariablesProvider } from './toolbarVariablesContext';\nimport { ToolbarMenuItemSubmenuIndicator } from './ToolbarMenuItemSubmenuIndicator';\nimport { ToolbarMenuItemIcon } from './ToolbarMenuItemIcon';\nimport { ToolbarMenuItemActiveIndicator } from './ToolbarMenuItemActiveIndicator';\nimport { ToolbarMenuContextProvider } from './toolbarMenuContext';\nimport { PopperShorthandProps } from '../../utils/positioner';\nimport { BoxProps, Box } from '../Box/Box';\n\nexport type ToolbarItemShorthandKinds = {\n  item: ToolbarItemProps;\n  divider: ToolbarDividerProps;\n  group: ToolbarMenuRadioGroupProps;\n  toggle: ToolbarItemProps;\n  custom: ToolbarCustomItemProps;\n};\n\ntype PositionOffset = {\n  vertical: number;\n  horizontal: number;\n};\n\nconst WAS_FOCUSABLE_ATTRIBUTE = 'data-was-focusable';\n\ntype ToolbarOverflowItemProps = Omit<ToolbarItemProps, 'menu'> & {\n  menu?: ObjectShorthandValue<ToolbarMenuProps & { popper?: PopperShorthandProps }>;\n};\n\nexport interface ToolbarProps\n  extends UIComponentProps,\n    ContentComponentProps,\n    ChildrenComponentProps,\n    ColorComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ToolbarBehaviorProps>;\n\n  /** Shorthand array of props for Toolbar. */\n  items?: ShorthandCollection<ToolbarItemProps, ToolbarItemShorthandKinds>;\n\n  /**\n   *  Automatically move overflow items to overflow menu.\n   *  For automatic overflow to work correctly, toolbar items including overflowMenuItem\n   *  must NOT change their size! If you need to change item's size, rerender the Toolbar.\n   */\n  overflow?: boolean;\n\n  /** Indicates if the overflow menu is open. Only valid if `overflow` is enabled and regular items do not fit. */\n  overflowOpen?: boolean;\n\n  /**\n   * Shorthand for the overflow item which is displayed when `overflow` is enabled and regular toolbar items do not fit.\n   * Do not set any menu on this item, Toolbar overrides it.\n   */\n  overflowItem?: ShorthandValue<ToolbarOverflowItemProps>;\n\n  /**\n   * Renders a sentinel node when the overflow menu is open to stop the width of the toolbar changing\n   * Only needed if the container hosting the toolbar does not have a fixed/min width\n   *\n   * @default null\n   */\n  overflowSentinel?: ShorthandValue<BoxProps>;\n\n  /**\n   * Called when overflow is recomputed (after render, update or window resize). Even if all items fit.\n   * @param itemsVisible - number of items visible\n   */\n  onOverflow?: (itemsVisible: number) => void;\n\n  /**\n   * Event for request to change 'overflowOpen' value.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onOverflowOpenChange?: ComponentEventHandler<ToolbarProps>;\n\n  /**\n   * Callback to get items to be rendered in overflow menu.\n   * Called when overflow menu is rendered opened.\n   * @param startIndex - Index of the first item to be displayed in the overflow menu (the first item which does not fit the toolbar).\n   */\n  getOverflowItems?: (startIndex: number) => ToolbarItemProps['menu'];\n}\n\nexport type ToolbarStylesProps = Pick<ToolbarProps, 'overflowOpen'>;\n\nexport const toolbarClassName = 'ui-toolbar';\n\n/**\n * A Toolbar is a container for grouping a set of controls, often action controls (e.g. buttons) or input controls (e.g. checkboxes).\n *\n * @accessibility\n *  * Implements [ARIA Toolbar](https://www.w3.org/TR/wai-aria-practices-1.1/#toolbar) design pattern.\n * @accessibilityIssues\n * [Issue 988424: VoiceOver narrates selected for button in toolbar](https://bugs.chromium.org/p/chromium/issues/detail?id=988424)\n * [In toolbars that can toggle items in a menu, VoiceOver narrates \"1\" for menuitemcheckbox/radio when checked.](https://github.com/microsoft/fluentui/issues/14064)\n * [NVDA could narrate \"checked\" stated for radiogroup in toolbar #12678](https://github.com/nvaccess/nvda/issues/12678)\n * [JAWS narrates wrong instruction message for radiogroup in toolbar #556](https://github.com/FreedomScientific/VFO-standards-support/issues/556)\n * [JAWS could narrate \"checked\" stated for radiogroup in toolbar #557](https://github.com/FreedomScientific/VFO-standards-support/issues/557)\n */\nexport const Toolbar = compose<'div', ToolbarProps, ToolbarStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const {\n      accessibility,\n      className,\n      children,\n      design,\n      getOverflowItems,\n      items,\n      overflow,\n      overflowItem,\n      overflowOpen,\n      overflowSentinel,\n      styles,\n      variables,\n    } = props;\n\n    const overflowContainerRef = React.useRef<HTMLDivElement>();\n    const overflowItemWrapperRef = React.useRef<HTMLElement>();\n    const overflowSentinelRef = React.useRef<HTMLDivElement>();\n    const offsetMeasureRef = React.useRef<HTMLDivElement>();\n    const containerRef = React.useRef<HTMLElement>();\n\n    // index of the last visible item in Toolbar, the rest goes to overflow menu\n    const lastVisibleItemIndex = React.useRef<number>();\n    const animationFrameId = React.useRef<number>();\n\n    const getA11Props = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      rtl: context.rtl,\n    });\n    const { classes } = useStyles<ToolbarStylesProps>(composeOptions.displayName, {\n      className: toolbarClassName,\n      composeOptions,\n      mapPropsToStyles: () => ({\n        overflowOpen,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const ElementType = getElementType(props);\n    const slotProps = composeOptions.resolveSlotProps<ToolbarProps>(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const hide = (el: HTMLElement) => {\n      if (el.style.visibility === 'hidden') {\n        return;\n      }\n\n      if (context.target.activeElement === el || el.contains(context.target.activeElement)) {\n        if (containerRef.current) {\n          const firstFocusableItem = getFirstFocusable(\n            containerRef.current,\n            containerRef.current.firstElementChild as HTMLElement,\n          );\n\n          if (firstFocusableItem) {\n            firstFocusableItem.focus();\n          }\n        }\n      }\n\n      el.style.visibility = 'hidden';\n      const wasFocusable = el.getAttribute(IS_FOCUSABLE_ATTRIBUTE);\n      if (wasFocusable) {\n        el.setAttribute(WAS_FOCUSABLE_ATTRIBUTE, wasFocusable);\n      }\n      el.setAttribute(IS_FOCUSABLE_ATTRIBUTE, 'false');\n    };\n\n    const show = (el: HTMLElement) => {\n      if (el.style.visibility !== 'hidden') {\n        return false;\n      }\n\n      el.style.visibility = '';\n      const wasFocusable = el.getAttribute(WAS_FOCUSABLE_ATTRIBUTE);\n      if (wasFocusable) {\n        el.setAttribute(IS_FOCUSABLE_ATTRIBUTE, wasFocusable);\n        el.removeAttribute(WAS_FOCUSABLE_ATTRIBUTE);\n      } else {\n        el.removeAttribute(IS_FOCUSABLE_ATTRIBUTE);\n      }\n\n      return true;\n    };\n\n    /**\n     * Checks if `item` overflows a `container`.\n     * TODO: check and fix all margin combination\n     */\n    const isItemOverflowing = (itemBoundingRect: ClientRect, containerBoundingRect: ClientRect) => {\n      return itemBoundingRect.right > containerBoundingRect.right || itemBoundingRect.left < containerBoundingRect.left;\n    };\n\n    /**\n     * Checks if `item` would collide with eventual position of `overflowItem`.\n     */\n    const wouldItemCollide = (\n      $item: Element,\n      itemBoundingRect: ClientRect,\n      overflowItemBoundingRect: ClientRect,\n      containerBoundingRect: ClientRect,\n    ) => {\n      const actualWindow: Window = context.target.defaultView;\n      let wouldCollide;\n\n      if (context.rtl) {\n        const itemLeftMargin = parseFloat(actualWindow.getComputedStyle($item).marginLeft) || 0;\n        wouldCollide =\n          itemBoundingRect.left - overflowItemBoundingRect.width - itemLeftMargin < containerBoundingRect.left;\n\n        // console.log('Collision [RTL]', {\n        //   wouldCollide,\n        //   'itemBoundingRect.left': itemBoundingRect.left,\n        //   'overflowItemBoundingRect.width': overflowItemBoundingRect.width,\n        //   itemRightMargin: itemLeftMargin,\n        //   sum: itemBoundingRect.left - overflowItemBoundingRect.width - itemLeftMargin,\n        //   'overflowContainerBoundingRect.left': containerBoundingRect.left,\n        // })\n      } else {\n        const itemRightMargin = parseFloat(actualWindow.getComputedStyle($item).marginRight) || 0;\n        wouldCollide =\n          itemBoundingRect.right + overflowItemBoundingRect.width + itemRightMargin > containerBoundingRect.right;\n\n        // console.log('Collision', {\n        //   wouldCollide,\n        //   'itemBoundingRect.right': itemBoundingRect.right,\n        //   'overflowItemBoundingRect.width': overflowItemBoundingRect.width,\n        //   itemRightMargin,\n        //   sum: itemBoundingRect.right + overflowItemBoundingRect.width + itemRightMargin,\n        //   'overflowContainerBoundingRect.right': containerBoundingRect.right,\n        // })\n      }\n\n      return wouldCollide;\n    };\n\n    /**\n     * Positions overflowItem next to lastVisible item\n     * TODO: consider overflowItem margin\n     */\n    const setOverflowPosition = (\n      $overflowItem: HTMLElement,\n      $lastVisibleItem: HTMLElement | undefined,\n      lastVisibleItemRect: ClientRect | undefined,\n      containerBoundingRect: ClientRect,\n      absolutePositioningOffset: PositionOffset,\n    ) => {\n      const actualWindow: Window = context.target.defaultView;\n\n      if ($lastVisibleItem) {\n        if (context.rtl) {\n          const lastVisibleItemMarginLeft = parseFloat(actualWindow.getComputedStyle($lastVisibleItem).marginLeft) || 0;\n\n          $overflowItem.style.right = `${\n            containerBoundingRect.right -\n            lastVisibleItemRect.left +\n            lastVisibleItemMarginLeft +\n            absolutePositioningOffset.horizontal\n          }px`;\n        } else {\n          const lastVisibleItemRightMargin =\n            parseFloat(actualWindow.getComputedStyle($lastVisibleItem).marginRight) || 0;\n\n          $overflowItem.style.left = `${\n            lastVisibleItemRect.right -\n            containerBoundingRect.left +\n            lastVisibleItemRightMargin +\n            absolutePositioningOffset.horizontal\n          }px`;\n        }\n      } else {\n        // there is no last visible item -> position the overflow as the first item\n        lastVisibleItemIndex.current = -1;\n        if (context.rtl) {\n          $overflowItem.style.right = `${absolutePositioningOffset.horizontal}px`;\n        } else {\n          $overflowItem.style.left = `${absolutePositioningOffset.horizontal}px`;\n        }\n      }\n    };\n\n    const hideOverflowItems = () => {\n      const $overflowContainer = overflowContainerRef.current;\n      const $overflowItem = overflowItemWrapperRef.current;\n      const $overflowSentinel = overflowSentinelRef.current;\n      const $offsetMeasure = offsetMeasureRef.current;\n      if (!$overflowContainer || !$overflowItem || !$offsetMeasure) {\n        return;\n      }\n\n      // workaround: when resizing window with popup opened the container contents scroll for some reason\n      if (context.rtl) {\n        $overflowContainer.scrollTo(Number.MAX_SAFE_INTEGER, 0);\n      } else {\n        $overflowContainer.scrollTop = 0;\n        $overflowContainer.scrollLeft = 0;\n      }\n\n      const $items = $overflowContainer.children;\n\n      const overflowContainerBoundingRect = $overflowContainer.getBoundingClientRect();\n      const overflowItemBoundingRect = $overflowItem.getBoundingClientRect();\n      const offsetMeasureBoundingRect = $offsetMeasure.getBoundingClientRect();\n\n      // Absolute positioning offset\n      // Overflow menu is absolutely positioned relative to root slot\n      // If there is padding set on the root slot boundingClientRect computations use inner content box,\n      // but absolute position is relative to root slot's PADDING box.\n      // We compute absolute positioning offset\n      // By measuring position of an offsetMeasure element absolutely positioned to 0,0.\n      // TODO: replace by getComputedStyle('padding')\n      const absolutePositioningOffset: PositionOffset = {\n        horizontal: context.rtl\n          ? offsetMeasureBoundingRect.right - overflowContainerBoundingRect.right\n          : overflowContainerBoundingRect.left - offsetMeasureBoundingRect.left,\n        vertical: overflowContainerBoundingRect.top - offsetMeasureBoundingRect.top,\n      };\n\n      let isOverflowing = false;\n      let $lastVisibleItem;\n      let lastVisibleItemRect;\n\n      // check all items from the last one back\n      _.forEachRight($items, ($item: HTMLElement, i: number) => {\n        if ($item === $overflowItem || $item === $overflowSentinel) {\n          return true;\n        }\n\n        const itemBoundingRect = $item.getBoundingClientRect();\n\n        // if the item is out of the crop rectangle, hide it\n        if (isItemOverflowing(itemBoundingRect, overflowContainerBoundingRect)) {\n          isOverflowing = true;\n          // console.log('Overflow', i, {\n          //   item: [itemBoundingRect.left, itemBoundingRect.right],\n          //   crop: [\n          //     overflowContainerBoundingRect.left,\n          //     overflowContainerBoundingRect.right,\n          //     overflowContainerBoundingRect.width,\n          //   ],\n          //   container: $overflowContainer,\n          // })\n          hide($item);\n          return true;\n        }\n\n        // if there is an overflow, check collision of remaining items with eventual overflow position\n        if (\n          isOverflowing &&\n          !$lastVisibleItem &&\n          wouldItemCollide($item, itemBoundingRect, overflowItemBoundingRect, overflowContainerBoundingRect)\n        ) {\n          hide($item);\n          return true;\n        }\n\n        // Remember the last visible item\n        if (!$lastVisibleItem) {\n          $lastVisibleItem = $item;\n          lastVisibleItemRect = itemBoundingRect;\n          lastVisibleItemIndex.current = i;\n        }\n\n        return show($item); // exit the loop when first visible item is found\n      });\n\n      // if there is an overflow,  position and show overflow item, otherwise hide it\n      if (isOverflowing || overflowOpen) {\n        $overflowItem.style.position = 'absolute';\n        setOverflowPosition(\n          $overflowItem,\n          $lastVisibleItem,\n          lastVisibleItemRect,\n          overflowContainerBoundingRect,\n          absolutePositioningOffset,\n        );\n        show($overflowItem);\n      } else {\n        lastVisibleItemIndex.current = items.length - 1;\n        hide($overflowItem);\n      }\n\n      _.invoke(props, 'onOverflow', lastVisibleItemIndex.current + 1);\n    };\n\n    const collectOverflowItems = (): ToolbarItemProps['menu'] => {\n      // console.log('getOverflowItems()', items.slice(lastVisibleItemIndex.current + 1))\n      return getOverflowItems\n        ? getOverflowItems(lastVisibleItemIndex.current + 1)\n        : items.slice(lastVisibleItemIndex.current + 1);\n    };\n\n    const getVisibleItems = () => {\n      // console.log('allItems()', items)\n      const end = overflowOpen ? lastVisibleItemIndex.current + 1 : items.length;\n      // console.log('getVisibleItems()', items.slice(0, end))\n      return items.slice(0, end);\n    };\n\n    const handleWindowResize = _.debounce((e: UIEvent) => {\n      hideOverflowItems();\n\n      if (overflowOpen) {\n        _.invoke(props, 'onOverflowOpenChange', e, { ...props, overflowOpen: false });\n      }\n    }, 16);\n\n    const renderItems = (items: ToolbarProps['items']) =>\n      _.map(items, item => {\n        const kind = _.get(item, 'kind', 'item');\n\n        switch (kind) {\n          case 'divider':\n            return createShorthand(composeOptions.slots.divider, item, {\n              defaultProps: () => slotProps.divider,\n            });\n          case 'group':\n            return createShorthand(composeOptions.slots.group, item, {\n              defaultProps: () => slotProps.group,\n            });\n          case 'toggle':\n            return createShorthand(composeOptions.slots.toggle, item, {\n              defaultProps: () => slotProps.toggle,\n            });\n          case 'custom':\n            return createShorthand(composeOptions.slots.customItem, item, {\n              defaultProps: () => slotProps.customItem,\n            });\n          default:\n            return createShorthand(composeOptions.slots.item, item, {\n              defaultProps: () => slotProps.item,\n            });\n        }\n      });\n\n    const renderOverflowItem = overflowItem =>\n      createShorthand(composeOptions.slots.overflowItem, overflowItem, {\n        defaultProps: () => slotProps.overflowItem,\n        overrideProps: (predefinedProps: ToolbarOverflowItemProps) => ({\n          menu: {\n            items: overflowOpen ? (collectOverflowItems() as ToolbarMenuProps['items']) : [],\n            popper: { positionFixed: true, ...predefinedProps.menu?.popper },\n          },\n          menuOpen: overflowOpen,\n          onMenuOpenChange: (e, { menuOpen }) => {\n            _.invoke(props, 'onOverflowOpenChange', e, { ...props, overflowOpen: menuOpen });\n          },\n          wrapper: {\n            ref: overflowItemWrapperRef,\n          },\n        }),\n      });\n\n    // renders a sentinel div that maintains the toolbar dimensions when the the overflow menu is open\n    // hidden elements are removed from the DOM\n    const renderOverflowSentinel = () => (\n      <Ref\n        innerRef={(element: HTMLDivElement) => {\n          overflowSentinelRef.current = element;\n        }}\n      >\n        {Box.create(overflowSentinel, {\n          defaultProps: () => ({\n            id: 'sentinel',\n            className: classes.overflowSentinel,\n          }),\n        })}\n      </Ref>\n    );\n\n    React.useEffect(() => {\n      const actualWindow: Window = context.target.defaultView;\n\n      actualWindow.cancelAnimationFrame(animationFrameId.current);\n      // Heads up! There are cases (like opening a portal and rendering the Toolbar there immediately) when rAF is necessary\n      animationFrameId.current = actualWindow.requestAnimationFrame(() => {\n        hideOverflowItems();\n      });\n\n      return () => {\n        if (animationFrameId.current !== undefined) {\n          context.target.defaultView?.cancelAnimationFrame(animationFrameId.current);\n          animationFrameId.current = undefined;\n        }\n      };\n    });\n\n    const element = overflow ? (\n      <>\n        <Ref\n          innerRef={(node: HTMLDivElement) => {\n            containerRef.current = node;\n            handleRef(ref, node);\n          }}\n        >\n          {getA11Props.unstable_wrapWithFocusZone(\n            <ElementType {...getA11Props('root', { className: classes.root, ...unhandledProps })}>\n              <div className={classes.overflowContainer} ref={overflowContainerRef}>\n                <ToolbarMenuContextProvider value={{ slots: { menu: composeOptions.slots.menu } }}>\n                  <ToolbarVariablesProvider value={variables}>\n                    {childrenExist(children) ? children : renderItems(getVisibleItems())}\n                    {overflowSentinel && renderOverflowSentinel()}\n                    {renderOverflowItem(overflowItem)}\n                  </ToolbarVariablesProvider>\n                </ToolbarMenuContextProvider>\n              </div>\n              <div className={classes.offsetMeasure} ref={offsetMeasureRef} />\n            </ElementType>,\n          )}\n        </Ref>\n        <EventListener listener={handleWindowResize} target={context.target.defaultView} type=\"resize\" />\n      </>\n    ) : (\n      <Ref\n        innerRef={(node: HTMLDivElement) => {\n          containerRef.current = node;\n          handleRef(ref, node);\n        }}\n      >\n        {getA11Props.unstable_wrapWithFocusZone(\n          <ElementType {...getA11Props('root', { className: classes.root, ...unhandledProps })}>\n            <ToolbarMenuContextProvider value={{ slots: { menu: composeOptions.slots.menu } }}>\n              <ToolbarVariablesProvider value={variables}>\n                {childrenExist(children) ? children : renderItems(items)}\n              </ToolbarVariablesProvider>\n            </ToolbarMenuContextProvider>\n          </ElementType>,\n        )}\n      </Ref>\n    );\n    setEnd();\n\n    return element;\n  },\n  {\n    className: toolbarClassName,\n    displayName: 'Toolbar',\n\n    slots: {\n      customItem: ToolbarCustomItem,\n      divider: ToolbarDivider,\n      item: ToolbarItem,\n      group: ToolbarRadioGroup,\n      toggle: ToolbarItem,\n      overflowItem: ToolbarItem,\n      menu: ToolbarMenu,\n    },\n    slotProps: () => ({\n      toggle: {\n        accessibility: toggleButtonBehavior,\n      },\n      overflowItem: {\n        icon: <MoreIcon outline />,\n      },\n    }),\n\n    shorthandConfig: { mappedProp: 'content' },\n    handledProps: [\n      'accessibility',\n      'as',\n      'children',\n      'className',\n      'content',\n      'design',\n      'getOverflowItems',\n      'items',\n      'onOverflow',\n      'onOverflowOpenChange',\n      'overflow',\n      'overflowItem',\n      'overflowOpen',\n      'overflowSentinel',\n      'styles',\n      'variables',\n    ],\n  },\n) as ComponentWithAs<'div', ToolbarProps> & {\n  CustomItem: typeof ToolbarCustomItem;\n  Divider: typeof ToolbarDivider;\n  Item: typeof ToolbarItem;\n  ItemWrapper: typeof ToolbarItemWrapper;\n  ItemIcon: typeof ToolbarItemIcon;\n  Menu: typeof ToolbarMenu;\n  MenuDivider: typeof ToolbarMenuDivider;\n  MenuItem: typeof ToolbarMenuItem;\n  MenuItemIcon: typeof ToolbarMenuItemIcon;\n  MenuItemSubmenuIndicator: typeof ToolbarMenuItemSubmenuIndicator;\n  MenuItemActiveIndicator: typeof ToolbarMenuItemActiveIndicator;\n  MenuRadioGroup: typeof ToolbarMenuRadioGroup;\n  MenuRadioGroupWrapper: typeof ToolbarMenuRadioGroupWrapper;\n  RadioGroup: typeof ToolbarRadioGroup;\n};\n\nToolbar.propTypes = {\n  ...commonPropTypes.createCommon(),\n  items: customPropTypes.collectionShorthandWithKindProp(['divider', 'item', 'group', 'toggle', 'custom']),\n  overflow: PropTypes.bool,\n  overflowOpen: PropTypes.bool,\n  overflowSentinel: customPropTypes.shorthandAllowingChildren,\n  overflowItem: customPropTypes.shorthandAllowingChildren,\n  onOverflow: PropTypes.func,\n  onOverflowOpenChange: PropTypes.func,\n  getOverflowItems: PropTypes.func,\n};\nToolbar.defaultProps = {\n  accessibility: toolbarBehavior,\n  items: [],\n  overflowItem: {},\n  overflowSentinel: {},\n};\n\nToolbar.CustomItem = ToolbarCustomItem;\nToolbar.Divider = ToolbarDivider;\nToolbar.Item = ToolbarItem;\nToolbar.ItemWrapper = ToolbarItemWrapper;\nToolbar.ItemIcon = ToolbarItemIcon;\nToolbar.Menu = ToolbarMenu;\nToolbar.MenuDivider = ToolbarMenuDivider;\nToolbar.MenuItem = ToolbarMenuItem;\nToolbar.MenuItemIcon = ToolbarMenuItemIcon;\nToolbar.MenuItemSubmenuIndicator = ToolbarMenuItemSubmenuIndicator;\nToolbar.MenuItemActiveIndicator = ToolbarMenuItemActiveIndicator;\nToolbar.MenuRadioGroup = ToolbarMenuRadioGroup;\nToolbar.MenuRadioGroupWrapper = ToolbarMenuRadioGroupWrapper;\nToolbar.RadioGroup = ToolbarRadioGroup;\n"],"mappings":"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"}