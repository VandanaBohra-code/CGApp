{"version":3,"file":"SplitButtonToggle.js","names":["_accessibility","require","customPropTypes","_interopRequireWildcard","PropTypes","React","_utils","_reactBindings","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","splitButtonToggleClassName","exports","SplitButtonToggle","forwardRef","props","ref","context","useFluentContext","_useTelemetry","useTelemetry","displayName","telemetry","setStart","setEnd","accessibility","as","children","content","disabled","primary","className","size","flat","styles","variables","design","hasChildren","childrenExist","getA11Props","useAccessibility","debugName","mapPropsToBehavior","String","actionHandlers","performClick","event","preventDefault","handleClick","rtl","_useStyles","useStyles","mapPropsToStyles","mapPropsToInlineStyles","classes","unhandledProps","useUnhandledProps","handledProps","ElementType","getElementType","e","_invoke2","result","createElement","_extends2","rtlTextContainer","getAttributes","forElements","assign","onClick","root","defaultProps","buttonBehavior","propTypes","commonPropTypes","createCommon","bool","func","every","disallow","secondary","keys","create","createShorthandFactory","Component","mappedProp"],"sources":["components/SplitButton/SplitButtonToggle.tsx"],"sourcesContent":["import { Accessibility, buttonBehavior, ButtonBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  ContentComponentProps,\n  SizeValue,\n} from '../../utils';\n\nimport { ComponentEventHandler, FluentComponentStaticProps } from '../../types';\nimport {\n  ForwardRefWithAs,\n  getElementType,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\n\nexport interface SplitButtonToggleProps extends UIComponentProps, ContentComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ButtonBehaviorProps>;\n\n  /** A split button toggle can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /**\n   * Called after a user clicks the button.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<SplitButtonToggleProps>;\n\n  /** A split button toggle can emphasize that it represents the primary action. */\n  primary?: boolean;\n\n  /** A split button toggle can emphasize that it represents an alternative action. */\n  secondary?: boolean;\n\n  /** A split button toggle can be sized */\n  size?: SizeValue;\n\n  /** A split button toggle can be elevated or flat. */\n  flat?: boolean;\n}\n\nexport type SplitButtonToggleStylesProps = Pick<SplitButtonToggleProps, 'primary' | 'disabled' | 'size' | 'flat'>;\nexport const splitButtonToggleClassName = 'ui-splitbutton__toggle';\n\n/**\n * A SplitToggleButton allows users to customize the toggle button inside the SplitButton.\n *\n * @accessibility\n * Implements [ARIA Button](https://www.w3.org/TR/wai-aria-practices-1.1/#button) design pattern.\n */\n\nexport const SplitButtonToggle = React.forwardRef<HTMLButtonElement, SplitButtonToggleProps & { as: React.ReactNode }>(\n  (props, ref) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(SplitButtonToggle.displayName, context.telemetry);\n    setStart();\n\n    const {\n      accessibility,\n      as,\n      children,\n      content,\n      disabled,\n      primary,\n      className,\n      size,\n      flat,\n      styles,\n      variables,\n      design,\n    } = props;\n\n    const hasChildren = childrenExist(children);\n\n    const getA11Props = useAccessibility(accessibility, {\n      debugName: SplitButtonToggle.displayName,\n      mapPropsToBehavior: () => ({\n        as: String(as),\n        disabled,\n      }),\n      actionHandlers: {\n        performClick: event => {\n          event.preventDefault();\n          handleClick(event);\n        },\n      },\n      rtl: context.rtl,\n    });\n    const { classes } = useStyles<SplitButtonToggleStylesProps>(SplitButtonToggle.displayName, {\n      className: splitButtonToggleClassName,\n      mapPropsToStyles: () => ({\n        primary,\n        disabled,\n        size,\n        flat,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n    });\n\n    const unhandledProps = useUnhandledProps(SplitButtonToggle.handledProps, props);\n    const ElementType = getElementType(props);\n\n    const handleClick = (e: React.SyntheticEvent) => {\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      _.invoke(props, 'onClick', e, props);\n    };\n\n    const result = (\n      <ElementType\n        {...rtlTextContainer.getAttributes({ forElements: [children] })}\n        {...getA11Props('root', {\n          onClick: handleClick,\n          disabled,\n          className: classes.root,\n          ref,\n          ...unhandledProps,\n        })}\n      >\n        {hasChildren ? children : content}\n      </ElementType>\n    );\n\n    setEnd();\n\n    return result;\n  },\n) as unknown as ForwardRefWithAs<'button', HTMLButtonElement, SplitButtonToggleProps> &\n  FluentComponentStaticProps<SplitButtonToggleProps>;\n\nSplitButtonToggle.defaultProps = {\n  as: 'button',\n  accessibility: buttonBehavior,\n};\n\nSplitButtonToggle.displayName = 'SplitButtonToggle';\n\nSplitButtonToggle.propTypes = {\n  ...commonPropTypes.createCommon({}),\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  size: customPropTypes.size,\n  flat: PropTypes.bool,\n};\n\nSplitButtonToggle.handledProps = Object.keys(SplitButtonToggle.propTypes) as any;\n\nSplitButtonToggle.create = createShorthandFactory({ Component: SplitButtonToggle, mappedProp: 'content' });\n"],"mappings":";;;;;;;AAAA,IAAAA,cAAA,GAAAC,OAAA;AACA,IAAAC,eAAA,GAAAC,uBAAA,CAAAF,OAAA;AACA,IAAAG,SAAA,GAAAD,uBAAA,CAAAF,OAAA;AACA,IAAAI,KAAA,GAAAF,uBAAA,CAAAF,OAAA;AAGA,IAAAK,MAAA,GAAAL,OAAA;AAYA,IAAAM,cAAA,GAAAN,OAAA;AAQkC,SAAAO,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAN,wBAAAU,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AA8B3B,IAAMW,0BAA0B,GAAG,wBAAwB;;AAElE;AACA;AACA;AACA;AACA;AACA;AALAC,OAAA,CAAAD,0BAAA,GAAAA,0BAAA;AAOO,IAAME,iBAAiB,gBAAG3B,KAAK,CAAC4B,UAAU,CAC/C,UAACC,KAAK,EAAEC,GAAG,EAAK;EACd,IAAMC,OAAO,GAAG,IAAAC,+BAAgB,EAAC,CAAC;EAClC,IAAAC,aAAA,GAA6B,IAAAC,2BAAY,EAACP,iBAAiB,CAACQ,WAAW,EAAEJ,OAAO,CAACK,SAAS,CAAC;IAAnFC,QAAQ,GAAAJ,aAAA,CAARI,QAAQ;IAAEC,MAAM,GAAAL,aAAA,CAANK,MAAM;EACxBD,QAAQ,CAAC,CAAC;EAEV,IACEE,aAAa,GAYXV,KAAK,CAZPU,aAAa;IACbC,EAAE,GAWAX,KAAK,CAXPW,EAAE;IACFC,QAAQ,GAUNZ,KAAK,CAVPY,QAAQ;IACRC,OAAO,GASLb,KAAK,CATPa,OAAO;IACPC,QAAQ,GAQNd,KAAK,CARPc,QAAQ;IACRC,OAAO,GAOLf,KAAK,CAPPe,OAAO;IACPC,SAAS,GAMPhB,KAAK,CANPgB,SAAS;IACTC,IAAI,GAKFjB,KAAK,CALPiB,IAAI;IACJC,IAAI,GAIFlB,KAAK,CAJPkB,IAAI;IACJC,MAAM,GAGJnB,KAAK,CAHPmB,MAAM;IACNC,SAAS,GAEPpB,KAAK,CAFPoB,SAAS;IACTC,MAAM,GACJrB,KAAK,CADPqB,MAAM;EAGR,IAAMC,WAAW,GAAG,IAAAC,oBAAa,EAACX,QAAQ,CAAC;EAE3C,IAAMY,WAAW,GAAG,IAAAC,+BAAgB,EAACf,aAAa,EAAE;IAClDgB,SAAS,EAAE5B,iBAAiB,CAACQ,WAAW;IACxCqB,kBAAkB,EAAE,SAAAA,mBAAA;MAAA,OAAO;QACzBhB,EAAE,EAAEiB,MAAM,CAACjB,EAAE,CAAC;QACdG,QAAQ,EAARA;MACF,CAAC;IAAA,CAAC;IACFe,cAAc,EAAE;MACdC,YAAY,EAAE,SAAAA,aAAAC,KAAK,EAAI;QACrBA,KAAK,CAACC,cAAc,CAAC,CAAC;QACtBC,WAAW,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IACDG,GAAG,EAAEhC,OAAO,CAACgC;EACf,CAAC,CAAC;EACF,IAAAC,UAAA,GAAoB,IAAAC,wBAAS,EAA+BtC,iBAAiB,CAACQ,WAAW,EAAE;MACzFU,SAAS,EAAEpB,0BAA0B;MACrCyC,gBAAgB,EAAE,SAAAA,iBAAA;QAAA,OAAO;UACvBtB,OAAO,EAAPA,OAAO;UACPD,QAAQ,EAARA,QAAQ;UACRG,IAAI,EAAJA,IAAI;UACJC,IAAI,EAAJA;QACF,CAAC;MAAA,CAAC;MACFoB,sBAAsB,EAAE,SAAAA,uBAAA;QAAA,OAAO;UAC7BtB,SAAS,EAATA,SAAS;UACTK,MAAM,EAANA,MAAM;UACNF,MAAM,EAANA,MAAM;UACNC,SAAS,EAATA;QACF,CAAC;MAAA,CAAC;MACFc,GAAG,EAAEhC,OAAO,CAACgC;IACf,CAAC,CAAC;IAfMK,OAAO,GAAAJ,UAAA,CAAPI,OAAO;EAiBf,IAAMC,cAAc,GAAG,IAAAC,gCAAiB,EAAC3C,iBAAiB,CAAC4C,YAAY,EAAE1C,KAAK,CAAC;EAC/E,IAAM2C,WAAW,GAAG,IAAAC,6BAAc,EAAC5C,KAAK,CAAC;EAEzC,IAAMiC,WAAW,GAAG,SAAdA,WAAWA,CAAIY,CAAuB,EAAK;IAC/C,IAAI/B,QAAQ,EAAE;MACZ+B,CAAC,CAACb,cAAc,CAAC,CAAC;MAClB;IACF;IAEA,IAAAc,QAAA,CAAAjE,OAAA,EAASmB,KAAK,EAAE,SAAS,EAAE6C,CAAC,EAAE7C,KAAK,CAAC;EACtC,CAAC;EAED,IAAM+C,MAAM,gBACV5E,KAAA,CAAA6E,aAAA,CAACL,WAAW,MAAAM,SAAA,CAAApE,OAAA,MACNqE,uBAAgB,CAACC,aAAa,CAAC;IAAEC,WAAW,EAAE,CAACxC,QAAQ;EAAE,CAAC,CAAC,EAC3DY,WAAW,CAAC,MAAM,EAAArC,MAAA,CAAAkE,MAAA;IACpBC,OAAO,EAAErB,WAAW;IACpBnB,QAAQ,EAARA,QAAQ;IACRE,SAAS,EAAEuB,OAAO,CAACgB,IAAI;IACvBtD,GAAG,EAAHA;EAAG,GACAuC,cAAc,CAClB,CAAC,GAEDlB,WAAW,GAAGV,QAAQ,GAAGC,OACf,CACd;EAEDJ,MAAM,CAAC,CAAC;EAER,OAAOsC,MAAM;AACf,CACF,CACoD;AAAClD,OAAA,CAAAC,iBAAA,GAAAA,iBAAA;AAErDA,iBAAiB,CAAC0D,YAAY,GAAG;EAC/B7C,EAAE,EAAE,QAAQ;EACZD,aAAa,EAAE+C;AACjB,CAAC;AAED3D,iBAAiB,CAACQ,WAAW,GAAG,mBAAmB;AAEnDR,iBAAiB,CAAC4D,SAAS,GAAAvE,MAAA,CAAAkE,MAAA,KACtBM,sBAAe,CAACC,YAAY,CAAC,CAAC,CAAC,CAAC;EACnC9C,QAAQ,EAAE5C,SAAS,CAAC2F,IAAI;EACxBP,OAAO,EAAEpF,SAAS,CAAC4F,IAAI;EACvB/C,OAAO,EAAE/C,eAAe,CAAC+F,KAAK,CAAC,CAAC/F,eAAe,CAACgG,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE9F,SAAS,CAAC2F,IAAI,CAAC,CAAC;EACzFI,SAAS,EAAEjG,eAAe,CAAC+F,KAAK,CAAC,CAAC/F,eAAe,CAACgG,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE9F,SAAS,CAAC2F,IAAI,CAAC,CAAC;EACzF5C,IAAI,EAAEjD,eAAe,CAACiD,IAAI;EAC1BC,IAAI,EAAEhD,SAAS,CAAC2F;AAAI,EACrB;AAED/D,iBAAiB,CAAC4C,YAAY,GAAGvD,MAAM,CAAC+E,IAAI,CAACpE,iBAAiB,CAAC4D,SAAS,CAAQ;AAEhF5D,iBAAiB,CAACqE,MAAM,GAAG,IAAAC,6BAAsB,EAAC;EAAEC,SAAS,EAAEvE,iBAAiB;EAAEwE,UAAU,EAAE;AAAU,CAAC,CAAC"}