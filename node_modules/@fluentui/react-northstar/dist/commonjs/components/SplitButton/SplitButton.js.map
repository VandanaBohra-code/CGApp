{"version":3,"file":"SplitButton.js","names":["_accessibility","require","customPropTypes","_interopRequireWildcard","PropTypes","React","_positioner","_utils","_SplitButtonToggle","_Button","_MenuButton","_SplitButtonDivider","_reactComponentRef","_reactBindings","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","splitButtonClassName","exports","SplitButton","forwardRef","props","ref","context","useFluentContext","_useTelemetry","useTelemetry","displayName","telemetry","setStart","setEnd","button","disabled","menu","primary","secondary","toggleButton","size","position","align","flipBoundary","flat","overflowBoundary","popperRef","positionFixed","offset","unstable_disableTether","unstable_pinned","autoSize","className","design","styles","accessibility","variables","targetRef","useRef","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","_useAutoControlled","useAutoControlled","defaultValue","defaultOpen","value","open","initialValue","setOpen","_React$useState","useState","isFromKeyboard","setIsFromKeyboard","getA11yProps","useAccessibility","debugName","mapPropsToBehavior","rtl","_useStyles","useStyles","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","handleMenuButtonOverrides","predefinedProps","onMenuItemClick","e","menuItemProps","_invoke2","assign","onOpenChange","popupProps","stopPropagation","handleMenuButtonTriggerOverrides","onClick","buttonProps","onFocus","checkIsFromKeyboard","element","createElement","Ref","innerRef","root","MenuButton","create","defaultProps","on","trigger","createShorthand","Button","menuButton","overrideProps","target","current","SplitButtonDivider","SplitButtonToggle","isOpen","Toggle","propTypes","commonPropTypes","createCommon","content","itemShorthand","bool","oneOfType","arrayOf","itemShorthandWithoutJSX","onMainButtonClick","func","every","disallow","oneOf","POSITIONS","ALIGNMENTS","object","number","AUTOSIZES","splitButtonBehavior","keys","createShorthandFactory","Component"],"sources":["components/SplitButton/SplitButton.tsx"],"sourcesContent":["import { Accessibility, splitButtonBehavior, SplitButtonBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\nimport { ALIGNMENTS, POSITIONS, AUTOSIZES } from '../../utils/positioner';\nimport { ComponentEventHandler, ShorthandValue, ShorthandCollection, FluentComponentStaticProps } from '../../types';\nimport {\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  isFromKeyboard as checkIsFromKeyboard,\n  commonPropTypes,\n  SizeValue,\n  createShorthand,\n  createShorthandFactory,\n} from '../../utils';\nimport { SplitButtonToggle, SplitButtonToggleProps } from './SplitButtonToggle';\nimport { Button, ButtonProps } from '../Button/Button';\nimport { MenuButton, MenuButtonProps } from '../MenuButton/MenuButton';\nimport { MenuProps } from '../Menu/Menu';\nimport { MenuItemProps } from '../Menu/MenuItem';\nimport { PopupProps } from '../Popup/Popup';\nimport { SplitButtonDivider } from './SplitButtonDivider';\nimport { Ref } from '@fluentui/react-component-ref';\nimport { PositioningProps, AutoSize } from '../../utils/positioner/types';\n\nimport {\n  useTelemetry,\n  useAutoControlled,\n  useAccessibility,\n  getElementType,\n  useFluentContext,\n  useUnhandledProps,\n  useStyles,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface SplitButtonProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ContentComponentProps,\n    PositioningProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<SplitButtonBehaviorProps>;\n\n  /** Shorthand for the main button. */\n  button?: ShorthandValue<ButtonProps>;\n\n  /** Initial value for 'open'. */\n  defaultOpen?: boolean;\n\n  /** A split button can be disabled. */\n  disabled?: boolean;\n\n  /** Shorthand for the menu. */\n  menu?: ShorthandValue<MenuProps> | ShorthandCollection<MenuItemProps>;\n\n  /**\n   * Called after user's click on the main button.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMainButtonClick?: ComponentEventHandler<ButtonProps>;\n\n  /**\n   * Called after user's click on a menu item.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMenuItemClick?: ComponentEventHandler<MenuItemProps>;\n\n  /**\n   * Event for request to change 'open' value.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onOpenChange?: ComponentEventHandler<SplitButtonProps>;\n\n  /** Defines whether menu is displayed. */\n  open?: boolean;\n\n  /** A split button can be formatted to show different levels of emphasis. */\n  primary?: boolean;\n\n  /** A split button can be formatted to show different levels of emphasis. */\n  secondary?: boolean;\n\n  /** A split button can be sized */\n  size?: SizeValue;\n\n  /** A button can be elevated or flat. */\n  flat?: boolean;\n\n  /** Shorthand for the toggle button. */\n  toggleButton?: ShorthandValue<SplitButtonToggleProps>;\n}\n\nexport const splitButtonClassName = 'ui-splitbutton';\n\nexport type SplitButtonStylesProps = Required<Pick<SplitButtonProps, 'size'>> & {\n  flat: boolean;\n  isFromKeyboard: boolean;\n};\n\n/**\n * A SplitButton enables users to take one of several related actions, one being dominant and rest being displayed in a menu.\n */\nexport const SplitButton = React.forwardRef<HTMLDivElement, SplitButtonProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(SplitButton.displayName, context.telemetry);\n  setStart();\n\n  const {\n    button,\n    disabled,\n    menu,\n    primary,\n    secondary,\n    toggleButton,\n    size,\n    position,\n    align,\n    flipBoundary,\n    flat,\n    overflowBoundary,\n    popperRef,\n    positionFixed,\n    offset,\n    unstable_disableTether,\n    unstable_pinned,\n    autoSize,\n    className,\n    design,\n    styles,\n    accessibility,\n    variables,\n  } = props;\n\n  const targetRef = React.useRef<HTMLDivElement>();\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(SplitButton.handledProps, props);\n  const [open, setOpen] = useAutoControlled({\n    defaultValue: props.defaultOpen,\n    value: props.open,\n    initialValue: false,\n  });\n\n  const [isFromKeyboard, setIsFromKeyboard] = React.useState<boolean>(false);\n\n  const getA11yProps = useAccessibility<SplitButtonBehaviorProps>(accessibility, {\n    debugName: SplitButton.displayName,\n    mapPropsToBehavior: () => ({\n      open,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<SplitButtonStylesProps>(SplitButton.displayName, {\n    className: splitButtonClassName,\n    mapPropsToStyles: () => ({\n      isFromKeyboard,\n      size,\n      flat,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleMenuButtonOverrides = (predefinedProps: MenuButtonProps) => ({\n    onMenuItemClick: (e: React.SyntheticEvent, menuItemProps: MenuItemProps) => {\n      setOpen(false);\n      _.invoke(props, 'onOpenChange', e, { ...props, open: false });\n\n      _.invoke(predefinedProps, 'onMenuItemClick', e, menuItemProps);\n      _.invoke(props, 'onMenuItemClick', e, menuItemProps);\n    },\n    onOpenChange: (e: React.SyntheticEvent, popupProps: PopupProps) => {\n      e.stopPropagation();\n      setOpen(popupProps.open);\n      _.invoke(props, 'onOpenChange', e, { ...props, open: popupProps.open });\n    },\n  });\n\n  const handleMenuButtonTriggerOverrides = (predefinedProps: ButtonProps) => ({\n    onClick: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n      _.invoke(predefinedProps, 'onClick', e, buttonProps);\n      _.invoke(props, 'onMainButtonClick', e, buttonProps);\n    },\n    onFocus: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n      _.invoke(predefinedProps, 'onFocus', e, buttonProps);\n      setIsFromKeyboard(checkIsFromKeyboard());\n    },\n  });\n\n  const element = (\n    <Ref innerRef={targetRef}>\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          ref,\n          ...unhandledProps,\n        })}\n      >\n        {MenuButton.create(\n          {},\n          {\n            defaultProps: () =>\n              getA11yProps('menuButton', {\n                menu,\n                on: [],\n                open,\n                trigger: createShorthand(Button, button, {\n                  defaultProps: () => ({\n                    styles: resolvedStyles.menuButton,\n                    primary,\n                    secondary,\n                    disabled,\n                  }),\n                  overrideProps: handleMenuButtonTriggerOverrides,\n                }),\n                target: targetRef.current,\n                position,\n                align,\n                flipBoundary,\n                overflowBoundary,\n                popperRef,\n                positionFixed,\n                offset,\n                unstable_disableTether,\n                unstable_pinned,\n                autoSize,\n              }),\n            overrideProps: handleMenuButtonOverrides,\n          },\n        )}\n\n        {createShorthand(\n          SplitButtonDivider,\n          {},\n          {\n            defaultProps: () =>\n              getA11yProps('divider', {\n                primary,\n              }),\n          },\n        )}\n        {SplitButtonToggle.create(toggleButton, {\n          defaultProps: () =>\n            getA11yProps('toggleButton', {\n              disabled,\n              primary,\n              secondary,\n              size,\n              flat,\n            }),\n          overrideProps: (predefinedProps: ButtonProps) => ({\n            onClick: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n              _.invoke(predefinedProps, 'onClick', e, buttonProps);\n\n              setOpen(isOpen => {\n                const open = !isOpen;\n                _.invoke(props, 'onOpenChange', e, { ...props, open });\n                return open;\n              });\n            },\n          }),\n        })}\n      </ElementType>\n    </Ref>\n  );\n\n  setEnd();\n  return element;\n}) as unknown as ForwardRefWithAs<'div', HTMLDivElement, SplitButtonProps> &\n  FluentComponentStaticProps<SplitButtonProps> & {\n    Toggle: typeof SplitButtonToggle;\n  };\n\nSplitButton.displayName = 'SplitButton';\n\nSplitButton.Toggle = SplitButtonToggle;\n\nSplitButton.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  button: customPropTypes.itemShorthand,\n  defaultOpen: PropTypes.bool,\n  menu: PropTypes.oneOfType([\n    customPropTypes.itemShorthand,\n    PropTypes.arrayOf(customPropTypes.itemShorthandWithoutJSX),\n  ]),\n  onMainButtonClick: PropTypes.func,\n  onMenuItemClick: PropTypes.func,\n  onOpenChange: PropTypes.func,\n  open: PropTypes.bool,\n  size: customPropTypes.size,\n  flat: PropTypes.bool,\n  popperRef: customPropTypes.ref,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  toggleButton: customPropTypes.itemShorthand,\n  position: PropTypes.oneOf(POSITIONS),\n  align: PropTypes.oneOf(ALIGNMENTS),\n  flipBoundary: PropTypes.oneOfType([\n    PropTypes.object as PropTypes.Requireable<HTMLElement>,\n    PropTypes.arrayOf(PropTypes.object) as PropTypes.Requireable<HTMLElement[]>,\n    PropTypes.oneOf<'clippingParents' | 'window' | 'scrollParent'>(['clippingParents', 'window', 'scrollParent']),\n  ]),\n  overflowBoundary: PropTypes.oneOfType([\n    PropTypes.object as PropTypes.Requireable<HTMLElement>,\n    PropTypes.arrayOf(PropTypes.object) as PropTypes.Requireable<HTMLElement[]>,\n    PropTypes.oneOf<'clippingParents' | 'window' | 'scrollParent'>(['clippingParents', 'window', 'scrollParent']),\n  ]),\n  positionFixed: PropTypes.bool,\n  offset: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.arrayOf(PropTypes.number) as PropTypes.Requireable<[number, number]>,\n  ]),\n  unstable_disableTether: PropTypes.oneOf([true, false, 'all']),\n  unstable_pinned: PropTypes.bool,\n  autoSize: PropTypes.oneOf<AutoSize>(AUTOSIZES),\n};\n\nSplitButton.defaultProps = {\n  accessibility: splitButtonBehavior,\n  toggleButton: {},\n  position: 'below',\n  align: 'start',\n};\n\nSplitButton.handledProps = Object.keys(SplitButton.propTypes) as any;\n\nSplitButton.create = createShorthandFactory({\n  Component: SplitButton,\n});\n"],"mappings":"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"}