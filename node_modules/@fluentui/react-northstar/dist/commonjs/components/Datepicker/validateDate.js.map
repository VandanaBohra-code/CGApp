{"version":3,"file":"validateDate.js","names":["_dateTimeUtilities","require","validateDate","futureSelectedDate","futureFormattedDate","calendarOptions","dateFormatting","required","isNaN","getTime","isRestrictedDate","isOutOfBoundsErrorMessage","invalidInputErrorMessage","isRequiredErrorMessage","exports"],"sources":["components/Datepicker/validateDate.tsx"],"sourcesContent":["import { isRestrictedDate, IRestrictedDatesOptions, ICalendarStrings } from '../../utils/date-time-utilities';\n\nexport const validateDate = (\n  futureSelectedDate: Date,\n  futureFormattedDate: string,\n  calendarOptions: IRestrictedDatesOptions,\n  dateFormatting: ICalendarStrings,\n  required: boolean,\n): string => {\n  if (futureSelectedDate && !isNaN(futureSelectedDate.getTime())) {\n    if (isRestrictedDate(futureSelectedDate, calendarOptions)) {\n      return dateFormatting.isOutOfBoundsErrorMessage;\n    }\n  } else if (futureFormattedDate) {\n    return dateFormatting.invalidInputErrorMessage;\n  } else if (required && !futureSelectedDate) {\n    return dateFormatting.isRequiredErrorMessage;\n  }\n  return '';\n};\n"],"mappings":";;;;AAAA,IAAAA,kBAAA,GAAAC,OAAA;AAEO,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CACvBC,kBAAwB,EACxBC,mBAA2B,EAC3BC,eAAwC,EACxCC,cAAgC,EAChCC,QAAiB,EACN;EACX,IAAIJ,kBAAkB,IAAI,CAACK,KAAK,CAACL,kBAAkB,CAACM,OAAO,CAAC,CAAC,CAAC,EAAE;IAC9D,IAAI,IAAAC,mCAAgB,EAACP,kBAAkB,EAAEE,eAAe,CAAC,EAAE;MACzD,OAAOC,cAAc,CAACK,yBAAyB;IACjD;EACF,CAAC,MAAM,IAAIP,mBAAmB,EAAE;IAC9B,OAAOE,cAAc,CAACM,wBAAwB;EAChD,CAAC,MAAM,IAAIL,QAAQ,IAAI,CAACJ,kBAAkB,EAAE;IAC1C,OAAOG,cAAc,CAACO,sBAAsB;EAC9C;EACA,OAAO,EAAE;AACX,CAAC;AAACC,OAAA,CAAAZ,YAAA,GAAAA,YAAA"}