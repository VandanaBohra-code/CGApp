{"version":3,"file":"ChatMessage.js","names":["_accessibility","require","_reactBindings","_reactComponentRef","customPropTypes","_interopRequireWildcard","_classnames","_interopRequireDefault","PropTypes","React","_utils","_positioner","_Box","_Flex","_Label","_Menu","_PortalInner","_Reaction","_Text","_chatContext","_chatItemContext","_ChatMessageDetails","_ChatMessageHeader","_ChatMessageReadStatus","_ChatMessageContent","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","chatMessageClassName","exports","chatMessageSlotClassNames","actionMenu","author","badge","bar","body","bubble","bubbleInset","compactBody","reactionGroup","timestamp","partitionActionMenuPropsFromShorthand","value","Array","isArray","_ref","inline","showActionMenu","props","_objectWithoutPropertiesLoose2","ChatMessage","forwardRef","inputProps","ref","context","useFluentContext","_useTelemetry","useTelemetry","displayName","telemetry","setStart","setEnd","parentAttached","useContextSelector","ChatItemContext","v","attached","chatProps","useChatContextSelectors","density","accessibility","behaviors","message","assign","undefined","chatMessageBehavior","_props$attached","badgePosition","children","className","content","design","details","header","mine","positionActionMenu","reactionGroupPosition","readStatus","styles","overflow","unstable_overflow","_props$unstable_layou","unstable_layout","layout","variables","failed","bubbleInsetContent","headerContent","isRefreshComfyLayout","_partitionPopperProps","partitionPopperPropsFromShorthand","actionMenuOptions","positioningProps","_partitionActionMenuP","inlineActionMenu","controlledShowActionMenu","_useAutoControlled","useAutoControlled","defaultValue","setShowActionMenu","hasActionMenu","_isNil2","hasHeaderReactionGroup","actionMenuId","useRef","current","getOrGenerateIdFromShorthand","modifiers","useCallback","target","container","name","options","fallbackPlacements","boundary","getScrollParent","popperRef","_usePopper","usePopper","align","rtl","position","positionFixed","enabled","useMergedRefs","actionsMenuTargetRef","targetRef","actionsMenuRef","containerRef","_React$useState","useState","focused","setFocused","getA11Props","useAccessibility","actionHandlers","preventDefault","event","currentTarget","focus","stopPropagation","debugName","mapPropsToBehavior","_useStyles","useStyles","mapPropsToStyles","hasBadge","hasReactions","mapPropsToInlineStyles","classes","resolvedStyles","handleFocus","e","_popperRef$current","updatePosition","_invoke2","handleBlur","shouldPreserveFocusState","relatedTarget","handleMouseEnter","_popperRef$current2","handleMouseLeave","renderActionMenu","actionMenuElement","Menu","create","defaultProps","_ref2","IS_FOCUSABLE_ATTRIBUTE","menuAsToolbarBehavior","overrideProps","id","createElement","Ref","innerRef","PortalInner","handleKeyDown","_actionsMenuRef$curre","_actionsMenuRef$curre2","_actionsMenuRef$curre3","toFocusItemInActionMenu","querySelector","querySelectorAll","keyCode","keyboardKey","Enter","Tab","isShift","shiftKey","focusableElementsInsideMessage","firstFocusableInsideMessage","lastFocusableInsideMessage","length","boundaryElementInsideMessage","childrenPropExists","childrenExist","rootClasses","cx","root","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","badgeElement","Label","reactionGroupElement","Reaction","Group","authorElement","Text","size","timestampElement","messageContent","createShorthand","ChatMessageContent","predefinedProps","mergeVariablesOverrides","detailsElement","ChatMessageDetails","readStatusElement","ChatMessageReadStatus","elements","Fragment","headerElement","ChatMessageHeader","bodyElement","Box","Flex","Item","grow","bubbleElement","onMouseEnter","_popperRef$current3","onMouseLeave","bubbleInsetElement","as","element","unstable_wrapWithFocusZone","onBlur","onFocus","onKeyDown","rtlTextContainer","getAttributes","forElements","propTypes","commonPropTypes","createCommon","oneOfType","itemShorthand","collectionShorthand","bool","oneOf","func","node","keys","createShorthandFactory","Component","mappedProp"],"sources":["components/Chat/ChatMessage.tsx"],"sourcesContent":["import {\n  Accessibility,\n  chatMessageBehavior,\n  ChatMessageBehaviorProps,\n  IS_FOCUSABLE_ATTRIBUTE,\n  keyboardKey,\n  menuAsToolbarBehavior,\n} from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useAccessibility,\n  useAutoControlled,\n  useContextSelector,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n  useMergedRefs,\n  ForwardRefWithAs,\n  mergeVariablesOverrides,\n} from '@fluentui/react-bindings';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  ComponentEventHandler,\n  ComponentKeyboardEventHandler,\n  FluentComponentStaticProps,\n  ObjectShorthandValue,\n  ShorthandCollection,\n  ShorthandValue,\n} from '../../types';\nimport {\n  ChildrenComponentProps,\n  childrenExist,\n  commonPropTypes,\n  ContentComponentProps,\n  createShorthand,\n  createShorthandFactory,\n  getOrGenerateIdFromShorthand,\n  rtlTextContainer,\n  UIComponentProps,\n} from '../../utils';\nimport {\n  getScrollParent,\n  partitionPopperPropsFromShorthand,\n  PopperModifiersFn,\n  PopperRefHandle,\n  PopperShorthandProps,\n  usePopper,\n} from '../../utils/positioner';\nimport { Box, BoxProps } from '../Box/Box';\nimport { Flex } from '../Flex/Flex';\nimport { Label, LabelProps } from '../Label/Label';\nimport { Menu, MenuProps } from '../Menu/Menu';\nimport { MenuItemProps } from '../Menu/MenuItem';\nimport { PortalInner } from '../Portal/PortalInner';\nimport { Reaction, ReactionProps } from '../Reaction/Reaction';\nimport { ReactionGroupProps } from '../Reaction/ReactionGroup';\nimport { Text, TextProps } from '../Text/Text';\nimport { useChatContextSelectors } from './chatContext';\nimport { ChatDensity } from './chatDensity';\nimport { ChatItemContext } from './chatItemContext';\nimport { ChatMessageDetails, ChatMessageDetailsProps } from './ChatMessageDetails';\nimport { ChatMessageHeader, ChatMessageHeaderProps } from './ChatMessageHeader';\nimport { ChatMessageReadStatus, ChatMessageReadStatusProps } from './ChatMessageReadStatus';\nimport { ChatMessageContent } from './ChatMessageContent';\n\nexport interface ChatMessageSlotClassNames {\n  actionMenu: string;\n  author: string;\n  badge: string;\n  bar: string;\n  bubble: string;\n  bubbleInset: string;\n  body: string;\n  compactBody: string;\n  reactionGroup: string;\n  timestamp: string;\n}\n\nexport type ChatMessageLayout = 'default' | 'refresh';\n\nexport interface ChatMessageProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>> {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ChatMessageBehaviorProps>;\n\n  /**\n   * Menu with actions of the message.\n   * popper: alters the action menu positioning.\n   * inline: whether the action menu should be rendered inline with the chat message, or in the body. It's true by default.\n   * showActionMenu: controls if the action menu is visible or not.\n   */\n  actionMenu?:\n    | ShorthandValue<MenuProps & { popper?: PopperShorthandProps; inline?: boolean; showActionMenu?: boolean }>\n    | ShorthandCollection<MenuItemProps & { inline?: boolean; showActionMenu?: boolean }>;\n\n  /** Controls messages's relation to other chat messages. Is automatically set by the ChatItem. */\n  attached?: boolean | 'top' | 'bottom';\n\n  /** Author of the message. */\n  author?: ShorthandValue<TextProps>;\n\n  /** Badge attached to the message. */\n  badge?: ShorthandValue<LabelProps>;\n\n  /** A message can format the badge to appear at the start or the end of the message. */\n  badgePosition?: 'start' | 'end';\n\n  /** A message can have a custom body. Only rendered in compact density. */\n  compactBody?: ShorthandValue<BoxProps>;\n\n  /** Chat density. Is automatically set by the Chat. */\n  density?: ChatDensity;\n\n  /** Message details info slot. Displayed in the header or body in comfy and compact density respectively. */\n  details?: ShorthandValue<ChatMessageDetailsProps>;\n\n  /** A message can have a custom header. */\n  header?: ShorthandValue<ChatMessageHeaderProps>;\n\n  /** Optional slot for inserting content into the default header. */\n  headerContent?: React.ReactNode;\n\n  /** Indicates whether message belongs to the current user. */\n  mine?: boolean;\n\n  /**\n   * Called after user's blur.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onBlur?: ComponentEventHandler<ChatMessageProps>;\n\n  /**\n   * Called after user's focus.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<ChatMessageProps>;\n\n  /**\n   * Called on chat message item key down.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onKeyDown?: ComponentKeyboardEventHandler<ChatMessageProps>;\n\n  /**\n   * Called after user enters by mouse.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMouseEnter?: ComponentEventHandler<ChatMessageProps>;\n\n  /**\n   * Called after user leaves by mouse.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMouseLeave?: ComponentEventHandler<ChatMessageProps>;\n\n  /** Allows suppression of action menu positioning for performance reasons. */\n  positionActionMenu?: boolean;\n\n  /** Reaction group applied to the message. */\n  reactionGroup?: ShorthandValue<ReactionGroupProps> | ShorthandCollection<ReactionProps>;\n\n  /** A message can format the reactions group to appear at the start or the end of the message. */\n  reactionGroupPosition?: 'start' | 'end';\n\n  /** Message read status indicator. */\n  readStatus?: ShorthandValue<ChatMessageReadStatusProps>;\n\n  /** Timestamp of the message. */\n  timestamp?: ShorthandValue<TextProps>;\n\n  /** Positions an actionMenu slot in \"fixed\" mode. */\n  unstable_overflow?: boolean;\n\n  /** A message can render with different layouts. */\n  unstable_layout?: ChatMessageLayout;\n\n  /** Indicates whether the message is in a failed state. */\n  failed?: boolean;\n\n  /** A message can have a custom body element (only applicable to \"refresh\" layout). */\n  body?: ShorthandValue<BoxProps>;\n\n  /** A message can have a custom bubble element (only applicable to \"refresh\" layout). */\n  bubble?: ShorthandValue<BoxProps>;\n\n  /** A message can have a custom bubble inset element which sits next to the bubble (only applicable to \"refresh\" layout). */\n  bubbleInset?: ShorthandValue<BoxProps>;\n\n  /** Optional override for the content in the default bubble inset (only applicable to \"refresh\" layout). */\n  bubbleInsetContent?: React.ReactNode;\n}\n\nexport type ChatMessageStylesProps = Pick<ChatMessageProps, 'attached' | 'badgePosition' | 'density' | 'mine'> & {\n  hasBadge: boolean;\n  hasHeaderReactionGroup: boolean;\n  hasReactions: boolean;\n  layout: ChatMessageLayout;\n  failed: boolean;\n\n  // focused, hasActionMenu and showActionMenu controls the visibility of action menu\n  focused: boolean;\n  hasActionMenu: boolean;\n  showActionMenu: boolean;\n};\n\nexport const chatMessageClassName = 'ui-chat__message';\nexport const chatMessageSlotClassNames: ChatMessageSlotClassNames = {\n  actionMenu: `${chatMessageClassName}__actions`,\n  author: `${chatMessageClassName}__author`,\n  badge: `${chatMessageClassName}__badge`,\n  bar: `${chatMessageClassName}__bar`,\n  body: `${chatMessageClassName}__body`,\n  bubble: `${chatMessageClassName}__bubble`,\n  bubbleInset: `${chatMessageClassName}__bubble-inset`,\n  compactBody: `${chatMessageClassName}__compact-body`,\n  reactionGroup: `${chatMessageClassName}__reactions`,\n  timestamp: `${chatMessageClassName}__timestamp`,\n};\n\nfunction partitionActionMenuPropsFromShorthand<P>(\n  value: ShorthandValue<P & { inline?: boolean; showActionMenu?: boolean }>,\n): [ShorthandValue<P> | ObjectShorthandValue<P>, boolean | undefined, boolean | undefined] {\n  if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\n    const { inline, showActionMenu, ...props } = value as ObjectShorthandValue<P> & {\n      inline?: boolean;\n      showActionMenu?: boolean;\n    };\n\n    return [props as ObjectShorthandValue<P>, inline ?? true, showActionMenu];\n  }\n\n  return [value, true, false];\n}\n\n/**\n * A ChatMessage represents a single message in chat.\n */\nexport const ChatMessage = React.forwardRef<HTMLDivElement, ChatMessageProps>((inputProps, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(ChatMessage.displayName, context.telemetry);\n  setStart();\n\n  const parentAttached = useContextSelector(ChatItemContext, v => v.attached);\n  const chatProps = useChatContextSelectors({\n    density: v => v.density,\n    accessibility: v => v.behaviors.message,\n  });\n\n  const props = {\n    ...inputProps,\n    density: inputProps.density === undefined ? chatProps.density : inputProps.density,\n    accessibility:\n      inputProps.accessibility === undefined\n        ? chatProps.accessibility || chatMessageBehavior\n        : inputProps.accessibility,\n  };\n  const {\n    accessibility,\n    attached = parentAttached,\n    author,\n    badge,\n    badgePosition,\n    children,\n    className,\n    compactBody,\n    content,\n    density,\n    design,\n    details,\n    header,\n    mine,\n    positionActionMenu,\n    reactionGroup,\n    reactionGroupPosition,\n    readStatus,\n    styles,\n    timestamp,\n    unstable_overflow: overflow,\n    unstable_layout: layout = 'default',\n    variables,\n    failed,\n    bubble,\n    body,\n    bubbleInset,\n    bubbleInsetContent,\n    headerContent,\n  } = props;\n\n  const isRefreshComfyLayout = layout === 'refresh' && density === 'comfy';\n\n  const [actionMenuOptions, positioningProps] = partitionPopperPropsFromShorthand(props.actionMenu);\n  const [actionMenu, inlineActionMenu, controlledShowActionMenu] =\n    partitionActionMenuPropsFromShorthand(actionMenuOptions);\n  const [showActionMenu, setShowActionMenu] = useAutoControlled<boolean>({\n    defaultValue: false,\n    value: controlledShowActionMenu,\n  });\n  const hasActionMenu = !_.isNil(actionMenu);\n  const hasHeaderReactionGroup = !!reactionGroup && reactionGroupPosition === 'start';\n\n  const actionMenuId = React.useRef<string>();\n  actionMenuId.current = getOrGenerateIdFromShorthand(`${chatMessageClassName}-`, actionMenu, actionMenuId.current);\n\n  const modifiers = React.useCallback<PopperModifiersFn>(\n    (target, container) => {\n      return (\n        positionActionMenu && [\n          // https://popper.js.org/docs/v2/modifiers/flip/\n          // Forces to flip only in \"top-*\" positions\n          { name: 'flip', options: { fallbackPlacements: ['top'] } },\n          overflow && {\n            name: 'preventOverflow',\n            options: { boundary: getScrollParent(container) },\n          },\n        ]\n      );\n    },\n    [positionActionMenu, overflow],\n  );\n\n  const popperRef = React.useRef<PopperRefHandle>();\n  const { targetRef: actionsMenuTargetRef, containerRef: actionsMenuRef } = usePopper({\n    align: 'end',\n    rtl: context.rtl,\n    position: 'above',\n    positionFixed: overflow,\n\n    enabled: hasActionMenu && positionActionMenu,\n    modifiers,\n\n    ...positioningProps,\n    popperRef: useMergedRefs(positioningProps?.popperRef, popperRef),\n  });\n\n  // `focused` state is used for show/hide actionMenu\n  const [focused, setFocused] = React.useState<boolean>(false);\n\n  const getA11Props = useAccessibility(accessibility, {\n    actionHandlers: {\n      // prevents default FocusZone behavior, e.g., in ChatMessageBehavior, it prevents FocusZone from using arrow keys\n      // as navigation (only Tab key should work)\n      preventDefault: event => {\n        // preventDefault only if event coming from inside the message\n        if (event.currentTarget !== event.target) {\n          event.preventDefault();\n        }\n      },\n\n      focus: event => {\n        const target = actionsMenuTargetRef.current;\n        if (target) {\n          target.focus();\n          event.stopPropagation();\n        }\n      },\n    },\n    debugName: ChatMessage.displayName,\n    mapPropsToBehavior: () => ({\n      hasActionMenu,\n      inlineActionMenu,\n      actionMenuId: actionMenuId.current,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<ChatMessageStylesProps>(ChatMessage.displayName, {\n    className: chatMessageClassName,\n    mapPropsToStyles: () => ({\n      attached,\n      badgePosition,\n      density,\n      focused,\n      hasActionMenu,\n      hasBadge: !!badge,\n      hasHeaderReactionGroup,\n      mine,\n      showActionMenu,\n      hasReactions: !!reactionGroup,\n      failed,\n      layout,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleFocus = (e: React.SyntheticEvent) => {\n    popperRef.current?.updatePosition();\n\n    // react onFocus is called even when nested component receives focus (i.e. it bubbles)\n    // so when focus moves within actionMenu, the `focus` state in chatMessage remains true, and keeps actionMenu visible\n    setFocused(true);\n    _.invoke(props, 'onFocus', e, props);\n  };\n\n  const handleBlur = (e: React.SyntheticEvent) => {\n    // `focused` controls is focused the whole `ChatMessage` or any of its children. When we're navigating\n    // with keyboard the focused element will be changed and there is no way to use `:focus` selector\n    const shouldPreserveFocusState = _.invoke(e, 'currentTarget.contains', (e as any).relatedTarget);\n\n    setFocused(shouldPreserveFocusState);\n    setShowActionMenu(false);\n\n    _.invoke(props, 'onBlur', e, props);\n  };\n\n  const handleMouseEnter = (e: React.SyntheticEvent) => {\n    popperRef.current?.updatePosition();\n    if (hasActionMenu && !inlineActionMenu) {\n      setShowActionMenu(true);\n    }\n    _.invoke(props, 'onMouseEnter', e, props);\n  };\n\n  const handleMouseLeave = (e: React.SyntheticEvent) => {\n    if (!focused && hasActionMenu && !inlineActionMenu) {\n      setShowActionMenu(false);\n    }\n    _.invoke(props, 'onMouseLeave', e, props);\n  };\n\n  const renderActionMenu = () => {\n    const actionMenuElement = Menu.create(actionMenu, {\n      defaultProps: () => ({\n        [IS_FOCUSABLE_ATTRIBUTE]: true,\n        accessibility: menuAsToolbarBehavior,\n        className: chatMessageSlotClassNames.actionMenu,\n        styles: resolvedStyles.actionMenu,\n      }),\n      overrideProps: {\n        id: actionMenuId.current,\n      },\n    });\n\n    const content = actionMenuElement ? <Ref innerRef={actionsMenuRef}>{actionMenuElement}</Ref> : actionMenuElement;\n\n    return inlineActionMenu || !content ? content : <PortalInner>{content}</PortalInner>;\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (hasActionMenu && !inlineActionMenu) {\n      // reference: https://github.com/microsoft/fluentui/pull/17329\n\n      const toFocusItemInActionMenu =\n        actionsMenuRef.current?.querySelector('[tabindex=\"0\"]') ??\n        actionsMenuRef.current?.querySelectorAll('[tabindex=\"-1\"]:not([data-is-focusable=\"false\"])')[0];\n\n      if (e.keyCode === keyboardKey.Enter) {\n        toFocusItemInActionMenu?.focus();\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      if (e.keyCode === keyboardKey.Tab) {\n        // TAB/SHIFT+TAB cycles focus among actionMenu and focusable elements within chat message\n        const isShift = !!e.shiftKey;\n\n        const focusableElementsInsideMessage: NodeListOf<HTMLElement> = e.currentTarget.querySelectorAll(\n          '[tabindex=\"-1\"]:not([data-is-focusable=\"false\"])',\n        );\n        const firstFocusableInsideMessage = focusableElementsInsideMessage[0];\n        const lastFocusableInsideMessage = focusableElementsInsideMessage[focusableElementsInsideMessage.length - 1];\n\n        if (e.target === toFocusItemInActionMenu) {\n          // focus is now inside action menu\n          // cycle focus into the first/last focusable element inside chat message\n          if (isShift) {\n            lastFocusableInsideMessage?.focus();\n          } else {\n            firstFocusableInsideMessage?.focus();\n          }\n          e.stopPropagation();\n          e.preventDefault();\n        } else {\n          const boundaryElementInsideMessage = isShift ? firstFocusableInsideMessage : lastFocusableInsideMessage;\n          if (e.target === boundaryElementInsideMessage) {\n            // focus is now on the first/last focusable element inside chat message\n            toFocusItemInActionMenu.focus(); // cycle focus back into action Menu\n            e.stopPropagation();\n            e.preventDefault();\n          }\n        }\n      }\n    }\n    _.invoke(props, 'onKeyDown', e, props);\n  };\n\n  const childrenPropExists = childrenExist(children);\n  const rootClasses = childrenPropExists ? cx(classes.root, classes.content) : classes.root;\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(ChatMessage.handledProps, props);\n\n  const badgeElement = Label.create(badge, {\n    defaultProps: () => ({\n      className: chatMessageSlotClassNames.badge,\n      styles: resolvedStyles.badge,\n    }),\n  });\n\n  const reactionGroupElement = Reaction.Group.create(reactionGroup, {\n    defaultProps: () => ({\n      className: chatMessageSlotClassNames.reactionGroup,\n      styles: resolvedStyles.reactionGroup,\n    }),\n  });\n\n  const actionMenuElement = renderActionMenu();\n\n  const authorElement = Text.create(author, {\n    defaultProps: () => ({\n      size: density === 'comfy' ? 'small' : undefined,\n      styles: resolvedStyles.author,\n      className: chatMessageSlotClassNames.author,\n    }),\n  });\n\n  const timestampElement = Text.create(timestamp, {\n    defaultProps: () => ({\n      size: 'small',\n      styles: resolvedStyles.timestamp,\n      timestamp: true,\n      className: chatMessageSlotClassNames.timestamp,\n    }),\n  });\n\n  const messageContent = createShorthand(ChatMessageContent, content, {\n    defaultProps: () => ({ badgePosition, density, failed, hasBadge: !!badge, mine, unstable_layout: layout }),\n    overrideProps: predefinedProps => ({\n      variables: mergeVariablesOverrides(variables, predefinedProps.variables),\n    }),\n  });\n\n  const detailsElement = createShorthand(ChatMessageDetails, details, {\n    defaultProps: () => ({ attached, density, hasHeaderReactionGroup, mine }),\n  });\n\n  const readStatusElement = createShorthand(ChatMessageReadStatus, readStatus, {\n    defaultProps: () => ({ density }),\n  });\n\n  let elements = <></>;\n  if (density === 'compact') {\n    const headerElement = createShorthand(ChatMessageHeader, header);\n\n    const bodyElement = Box.create(compactBody || {}, {\n      defaultProps: () =>\n        getA11Props('compactBody', {\n          className: chatMessageSlotClassNames.compactBody,\n          styles: resolvedStyles.compactBody,\n        }),\n      overrideProps: () => ({\n        content: (\n          <>\n            <Flex.Item grow={1}>\n              <div>\n                {authorElement}\n                {messageContent}\n              </div>\n            </Flex.Item>\n            {timestampElement}\n            {detailsElement}\n            {badgeElement}\n          </>\n        ),\n      }),\n    });\n\n    elements = (\n      <>\n        {actionMenuElement}\n        <div className={chatMessageSlotClassNames.bar} />\n        {headerElement}\n        {bodyElement}\n        {reactionGroupElement}\n        {readStatusElement}\n      </>\n    );\n  } else if (isRefreshComfyLayout) {\n    const headerElement = createShorthand(ChatMessageHeader, header || {}, {\n      defaultProps: () => ({\n        styles: resolvedStyles.header,\n        content: (\n          <>\n            {authorElement}\n            {headerContent}\n            {detailsElement}\n          </>\n        ),\n      }),\n    });\n\n    const bubbleElement = Box.create(bubble || {}, {\n      defaultProps: () =>\n        getA11Props('bubble', {\n          className: chatMessageSlotClassNames.bubble,\n          styles: resolvedStyles.bubble,\n        }),\n      overrideProps: () => ({\n        ref: actionsMenuTargetRef,\n        content: (\n          <>\n            {actionMenuElement}\n            {messageContent}\n            {reactionGroupElement}\n            {readStatusElement}\n          </>\n        ),\n        onMouseEnter(e: React.SyntheticEvent) {\n          popperRef.current?.updatePosition();\n          handleMouseEnter(e);\n        },\n        onMouseLeave(e: React.SyntheticEvent) {\n          handleMouseLeave(e);\n        },\n      }),\n    });\n\n    const bubbleInsetElement = Box.create(bubbleInset || {}, {\n      defaultProps: () => ({\n        as: 'span',\n        className: chatMessageSlotClassNames.bubbleInset,\n        styles: resolvedStyles.bubbleInset,\n      }),\n      overrideProps: () => ({\n        content: (\n          <>\n            {badgeElement}\n            {bubbleInsetContent}\n            {timestampElement}\n          </>\n        ),\n      }),\n    });\n\n    const bodyElement = Box.create(body || {}, {\n      defaultProps: () =>\n        getA11Props('body', {\n          className: chatMessageSlotClassNames.body,\n          styles: resolvedStyles.body,\n        }),\n      overrideProps: () => ({\n        content: (\n          <>\n            {bubbleElement}\n            {bubbleInsetElement}\n          </>\n        ),\n      }),\n    });\n\n    elements = (\n      <>\n        {headerElement}\n        {bodyElement}\n      </>\n    );\n  } else {\n    const headerElement = createShorthand(ChatMessageHeader, header || {}, {\n      overrideProps: () => ({\n        content: (\n          <>\n            {authorElement}\n            {timestampElement}\n            {detailsElement}\n            {reactionGroupPosition === 'start' && reactionGroupElement}\n          </>\n        ),\n      }),\n    });\n\n    elements = (\n      <>\n        {actionMenuElement}\n        <div className={chatMessageSlotClassNames.bar} />\n        {badgePosition === 'start' && badgeElement}\n        {headerElement}\n        {messageContent}\n        {reactionGroupPosition === 'end' && reactionGroupElement}\n        {badgePosition === 'end' && badgeElement}\n        {readStatusElement}\n      </>\n    );\n  }\n\n  const element = (\n    <Ref innerRef={!isRefreshComfyLayout && actionsMenuTargetRef}>\n      {getA11Props.unstable_wrapWithFocusZone(\n        <ElementType\n          {...getA11Props('root', {\n            className: rootClasses,\n            onBlur: handleBlur,\n            onFocus: handleFocus,\n            onMouseEnter: handleMouseEnter,\n            onMouseLeave: handleMouseLeave,\n            onKeyDown: handleKeyDown,\n            ref,\n            ...rtlTextContainer.getAttributes({ forElements: [children] }),\n            ...unhandledProps,\n          })}\n        >\n          {childrenPropExists ? children : elements}\n        </ElementType>,\n      )}\n    </Ref>\n  );\n  setEnd();\n\n  return element;\n}) as unknown as ForwardRefWithAs<'div', HTMLDivElement, ChatMessageProps> &\n  FluentComponentStaticProps<ChatMessageProps>;\n\nChatMessage.displayName = 'ChatMessage';\n\nChatMessage.defaultProps = {\n  badgePosition: 'end',\n  positionActionMenu: true,\n  reactionGroupPosition: 'start',\n};\n\nChatMessage.propTypes = {\n  ...commonPropTypes.createCommon({ content: 'shorthand' }),\n  actionMenu: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf<'top' | 'bottom'>(['top', 'bottom'])]),\n  author: customPropTypes.itemShorthand,\n  badge: customPropTypes.itemShorthand,\n  badgePosition: PropTypes.oneOf(['start', 'end']),\n  compactBody: customPropTypes.itemShorthand,\n  density: PropTypes.oneOf<ChatDensity>(['comfy', 'compact']),\n  details: customPropTypes.itemShorthand,\n  header: customPropTypes.itemShorthand,\n  mine: PropTypes.bool,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  positionActionMenu: PropTypes.bool,\n  reactionGroup: PropTypes.oneOfType([customPropTypes.collectionShorthand, customPropTypes.itemShorthand]),\n  reactionGroupPosition: PropTypes.oneOf(['start', 'end']),\n  readStatus: customPropTypes.itemShorthand,\n  timestamp: customPropTypes.itemShorthand,\n  unstable_overflow: PropTypes.bool,\n  unstable_layout: PropTypes.oneOf(['default', 'refresh']),\n  failed: PropTypes.bool,\n  headerContent: PropTypes.node,\n  body: customPropTypes.itemShorthand,\n  bubble: customPropTypes.itemShorthand,\n  bubbleInset: customPropTypes.itemShorthand,\n  bubbleInsetContent: PropTypes.node,\n};\n\nChatMessage.handledProps = Object.keys(ChatMessage.propTypes) as any;\n\nChatMessage.create = createShorthandFactory({ Component: ChatMessage, mappedProp: 'content' });\n"],"mappings":"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"}