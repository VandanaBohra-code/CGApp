{"version":3,"file":"formFieldBase.js","names":["_accessibility","require","customPropTypes","_interopRequireWildcard","PropTypes","React","_utils","_Box","_reactBindings","_FormLabel","_FormMessage","_formFieldBaseContext","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","formFieldBaseClassName","exports","_FormFieldBase","compose","props","ref","composeOptions","context","useFluentContext","_useTelemetry","useTelemetry","displayName","telemetry","setStart","setEnd","message","inline","errorMessage","control","label","className","design","styles","variables","slotProps","resolveSlotProps","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","messageId","useRef","current","getOrGenerateIdFromShorthand","labelId","_useStyles","useStyles","mapPropsToInlineStyles","rtl","unstable_props","classes","getA11yProps","useAccessibility","accessibility","debugName","mapPropsToBehavior","hasErrorMessage","childProps","useMemo","element","createElement","root","createShorthand","slots","defaultProps","assign","id","FormFieldBaseProvider","value","error","FormLabel","FormMessage","Box","shorthandConfig","mappedProp","propTypes","commonPropTypes","createCommon","children","bool","itemShorthand","formFieldBehavior"],"sources":["components/Form/utils/formFieldBase.tsx"],"sourcesContent":["import { Accessibility, FormFieldBehaviorProps, formFieldBehavior } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { UIComponentProps, commonPropTypes, getOrGenerateIdFromShorthand, createShorthand } from '../../../utils';\nimport { ShorthandValue } from '../../../types';\nimport { Box, BoxProps } from '../../Box/Box';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useTelemetry,\n  useAccessibility,\n  useFluentContext,\n  compose,\n  useStyles,\n} from '@fluentui/react-bindings';\nimport { FormLabel, FormLabelProps } from '../FormLabel';\nimport { FormMessage, FormMessageProps } from '../FormMessage';\nimport { FormFieldBaseValue, FormFieldBaseProvider } from './formFieldBaseContext';\n\nexport interface FormFieldBaseProps extends UIComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<FormFieldBehaviorProps>;\n\n  /** A field can have its label next to instead of above it. */\n  inline?: boolean;\n\n  /** A control for the form field. */\n  control?: ShorthandValue<BoxProps>;\n\n  /** A label for the form field. */\n  label?: ShorthandValue<FormLabelProps>;\n\n  /** Text message that will be displayed below the control (can be used for error, warning, success messages). */\n  message?: ShorthandValue<FormMessageProps>;\n\n  /** Message to be shown when input has error */\n  errorMessage?: ShorthandValue<FormMessageProps>;\n}\n\nexport const formFieldBaseClassName = 'ui-form__field__base';\nexport type FormFieldBaseStylesProps = never;\n\n/**\n * A FormFiedBase represents a Form element containing a label and an input.\n */\nexport const _FormFieldBase = compose<'div', FormFieldBaseProps, {}, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const { message, inline, errorMessage, control, label, className, design, styles, variables } = props;\n\n    const slotProps = composeOptions.resolveSlotProps<FormFieldBaseProps>(props);\n    const ElementType = getElementType(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n    const messageId = React.useRef<string>();\n    messageId.current = getOrGenerateIdFromShorthand('error-message-', errorMessage || message, messageId.current);\n    const labelId = React.useRef<string>();\n    labelId.current = getOrGenerateIdFromShorthand('form-label-', label, labelId.current);\n\n    const { classes } = useStyles<FormFieldBaseStylesProps>(_FormFieldBase.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const getA11yProps = useAccessibility<FormFieldBehaviorProps>(props.accessibility, {\n      debugName: composeOptions.displayName,\n      mapPropsToBehavior: () => ({\n        hasErrorMessage: !!errorMessage,\n        messageId: messageId.current,\n        labelId: labelId.current,\n      }),\n      rtl: context.rtl,\n    });\n\n    const childProps: FormFieldBaseValue = React.useMemo(\n      () => ({\n        labelId: labelId.current,\n      }),\n      // TODO: create hooks for id to avoid disbaling esling for accessing the value of refs\n      // eslint-disable-next-line\n      [labelId.current],\n    );\n\n    const element = (\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n        })}\n      >\n        {createShorthand(composeOptions.slots.label, label, {\n          defaultProps: () =>\n            getA11yProps('label', {\n              id: labelId.current,\n              inline,\n              ...slotProps.label,\n            }),\n        })}\n        {/**\n         * When there's a message for the input the labelId and messageId should be consistent in the\n         * aria-labelledby attribute (aria-labelledby=\"labelID messageID\") therefore we need to pass it down\n         * for components like input that are generating its own label internally\n         */}\n        <FormFieldBaseProvider value={childProps}>\n          {createShorthand(composeOptions.slots.control, control || {}, {\n            defaultProps: () =>\n              getA11yProps('control', {\n                error: !!errorMessage || null,\n                ref,\n                ...unhandledProps,\n                ...slotProps.control,\n              }),\n          })}\n        </FormFieldBaseProvider>\n        {createShorthand(composeOptions.slots.message, errorMessage || message, {\n          defaultProps: () =>\n            getA11yProps('message', {\n              id: messageId.current,\n              ...slotProps.message,\n            }),\n        })}\n      </ElementType>\n    );\n    setEnd();\n    return element;\n  },\n  {\n    className: formFieldBaseClassName,\n    displayName: 'FormFieldBase',\n    slots: {\n      label: FormLabel,\n      message: FormMessage,\n      control: Box,\n    },\n    handledProps: [\n      'as',\n      'accessibility',\n      'className',\n      'variables',\n      'design',\n      'styles',\n      'inline',\n      'errorMessage',\n      'message',\n    ],\n    shorthandConfig: {\n      mappedProp: 'control',\n    },\n  },\n);\n\n_FormFieldBase.propTypes = {\n  ...commonPropTypes.createCommon({ children: false }),\n  inline: PropTypes.bool,\n  message: customPropTypes.itemShorthand,\n  errorMessage: customPropTypes.itemShorthand,\n};\n\n_FormFieldBase.defaultProps = {\n  accessibility: formFieldBehavior,\n};\n"],"mappings":"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"}