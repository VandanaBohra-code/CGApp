{"version":3,"file":"Tree.js","names":["_accessibility","require","_reactBindings","customPropTypes","_interopRequireWildcard","PropTypes","React","_TreeItem","_TreeTitle","_utils","_useTree2","_context","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","treeClassName","exports","Tree","forwardRef","props","ref","context","useFluentContext","_useTelemetry","useTelemetry","displayName","telemetry","setStart","setEnd","selectable","children","renderedItems","className","design","styles","variables","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","getA11yProps","useAccessibility","accessibility","debugName","rtl","mapPropsToBehavior","_useStyles","useStyles","mapPropsToInlineStyles","unstyled","classes","_useTree","useTree","visibleItemIds","getItemById","registerItemRef","toggleItemActive","focusItemById","expandSiblings","toggleItemSelect","getToFocusIDByFirstCharacter","contextValue","useMemo","renderContent","map","id","item","expanded","parent","level","index","treeSize","TreeItem","create","defaultProps","renderItemTitle","overrideProps","element","createElement","TreeContext","Provider","value","unstable_wrapWithFocusZone","assign","root","rtlTextContainer","getAttributes","forElements","childrenExist","propTypes","commonPropTypes","createCommon","content","activeItemIds","collectionShorthand","selectedItemIds","defaultActiveItemIds","defaultSelectedItemIds","exclusive","bool","items","collectionObjectShorthand","onActiveItemIdsChange","func","onSelectedItemIdsChange","Item","Title","TreeTitle","treeBehavior","keys","createShorthandFactory","Component","mappedArrayProp"],"sources":["components/Tree/Tree.tsx"],"sourcesContent":["import { Accessibility, treeBehavior, TreeBehaviorProps } from '@fluentui/accessibility';\nimport {\n  useTelemetry,\n  useUnhandledProps,\n  getElementType,\n  useAccessibility,\n  useStyles,\n  useFluentContext,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { TreeItem, TreeItemProps } from './TreeItem';\nimport { TreeTitle, TreeTitleProps } from './TreeTitle';\nimport {\n  childrenExist,\n  commonPropTypes,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  rtlTextContainer,\n} from '../../utils';\nimport {\n  ComponentEventHandler,\n  ObjectShorthandCollection,\n  FluentComponentStaticProps,\n  ShorthandRenderFunction,\n} from '../../types';\nimport { useTree } from './hooks/useTree';\nimport { TreeContext, TreeRenderContextValue } from './context';\n\nexport interface TreeProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<TreeBehaviorProps>;\n\n  /** Ids of expanded items. */\n  activeItemIds?: string[];\n\n  /** Ids of selected leaf items. */\n  selectedItemIds?: string[];\n\n  /** Initial activeItemIds value. */\n  defaultActiveItemIds?: string[];\n\n  /** Initial selectedItemIds value. */\n  defaultSelectedItemIds?: string[];\n\n  /** Only allow one subtree to be expanded at a time. */\n  exclusive?: boolean;\n\n  /** Shorthand array of props for Tree. */\n  items?: ObjectShorthandCollection<TreeItemProps>;\n\n  /**\n   * A custom render function for the title slot.\n   *\n   * @param Component - The computed component for this slot.\n   * @param props - The computed props for this slot.\n   * @param children - The computed children for this slot.\n   */\n  renderItemTitle?: ShorthandRenderFunction<TreeTitleProps>;\n\n  /**\n   * Called when active item ids change.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props, with `activeItemIds` reflecting the new state.\n   */\n  onActiveItemIdsChange?: ComponentEventHandler<TreeProps>;\n\n  /**\n   * Called when tree item selection state is changed.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props, with `selectedItemIds` reflecting the new state.\n   */\n  onSelectedItemIdsChange?: ComponentEventHandler<TreeProps>;\n\n  /**\n   * Callback that provides rendered tree items to be used by react-virtualized for instance.\n   * Acts as a render prop, with the rendered tree items being the re-used logic.\n   *\n   * @param renderedItem - The array of rendered items.\n   * @returns The render prop result.\n   */\n  renderedItems?: (renderedItems: React.ReactElement[]) => React.ReactNode;\n\n  /** Whether or not tree items are selectable. */\n  selectable?: boolean;\n\n  unstyled?: boolean;\n}\n\nexport const treeClassName = 'ui-tree';\n\nexport type TreeStylesProps = never;\n\n/**\n * A Tree displays data organised in tree hierarchy.\n *\n * @accessibility\n * Implements [ARIA TreeView](https://www.w3.org/TR/wai-aria-practices-1.1/#TreeView) design pattern.\n * @accessibilityIssues\n * [Treeview - JAWS doesn't narrate position for each tree item](https://github.com/FreedomScientific/VFO-standards-support/issues/338)\n * [Aria-selected and aria-checked are not output correctly for trees #432](https://github.com/FreedomScientific/VFO-standards-support/issues/432)\n * [Aria compliant trees are read as empty tables](https://bugs.chromium.org/p/chromium/issues/detail?id=1048770)\n * [VoiceOver narrates \"selected false\" for DOM with role=option and no aria-selected attribute](http://www.openradar.me/FB8050959)\n * [VoiceOver does not support Aria 1.2 listbox role owning unselectable group role](http://www.openradar.me/FB8050958)\n * [Tree as table in Mac > VoiceOver narrates \" no selection \" when user navigates to tree/table](https://bugs.chromium.org/p/chromium/issues/detail?id=1273538)\n * [Tree as table in Mac > VoiceOver narrates \" 0 items enclosed \" when user navigates to expaded treeitem](https://bugs.chromium.org/p/chromium/issues/detail?id=1273540)\n * [Tree as table in Mac > VoiceOver doesn't narrate aria-labelledby element on treeitem](https://bugs.chromium.org/p/chromium/issues/detail?id=1273544)\n */\nexport const Tree = React.forwardRef<HTMLDivElement, TreeProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Tree.displayName, context.telemetry);\n  setStart();\n\n  const { selectable, children, renderedItems, className, design, styles, variables } = props;\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Tree.handledProps, props);\n\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: Tree.displayName,\n    rtl: context.rtl,\n    mapPropsToBehavior: () => ({\n      selectable,\n    }),\n  });\n\n  const { classes } = useStyles<TreeStylesProps>(Tree.displayName, {\n    className: treeClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n    unstyled: props.unstyled,\n  });\n\n  const {\n    visibleItemIds,\n    getItemById,\n    registerItemRef,\n    toggleItemActive,\n    focusItemById,\n    expandSiblings,\n    toggleItemSelect,\n    getToFocusIDByFirstCharacter,\n  } = useTree(props);\n\n  const contextValue: TreeRenderContextValue = React.useMemo(\n    () => ({\n      getItemById,\n      registerItemRef,\n      toggleItemActive,\n      expandSiblings,\n      focusItemById,\n      toggleItemSelect,\n      getToFocusIDByFirstCharacter,\n    }),\n    [\n      getItemById,\n      registerItemRef,\n      toggleItemActive,\n      focusItemById,\n      expandSiblings,\n      toggleItemSelect,\n      getToFocusIDByFirstCharacter,\n    ],\n  );\n\n  const renderContent = (): React.ReactElement[] => {\n    return visibleItemIds.map(id => {\n      const item = getItemById(id);\n      const { expanded, parent, level, index, treeSize } = item;\n      return TreeItem.create(item.item, {\n        defaultProps: () =>\n          getA11yProps('item', {\n            renderItemTitle: props.renderItemTitle,\n          }),\n        overrideProps: {\n          expanded,\n          parent,\n          key: id,\n          level,\n          index,\n          treeSize,\n          selectable: selectable ? item.item.selectable : false,\n        },\n      });\n    });\n  };\n\n  const element = (\n    <TreeContext.Provider value={contextValue}>\n      {getA11yProps.unstable_wrapWithFocusZone(\n        <ElementType\n          {...getA11yProps('root', {\n            className: classes.root,\n            ref,\n            ...rtlTextContainer.getAttributes({ forElements: [children] }),\n            ...unhandledProps,\n          })}\n        >\n          {childrenExist(children) ? children : renderedItems ? renderedItems(renderContent()) : renderContent()}\n        </ElementType>,\n      )}\n    </TreeContext.Provider>\n  );\n  setEnd();\n  return element;\n}) as unknown as ForwardRefWithAs<'div', HTMLDivElement, TreeProps> &\n  FluentComponentStaticProps<TreeProps> & {\n    Item: typeof TreeItem;\n    Title: typeof TreeTitle;\n  };\n\nTree.displayName = 'Tree';\n\nTree.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  activeItemIds: customPropTypes.collectionShorthand,\n  selectedItemIds: customPropTypes.collectionShorthand,\n  defaultActiveItemIds: customPropTypes.collectionShorthand,\n  defaultSelectedItemIds: customPropTypes.collectionShorthand,\n  exclusive: PropTypes.bool,\n  selectable: PropTypes.bool,\n  unstyled: PropTypes.bool,\n  items: customPropTypes.collectionObjectShorthand,\n  onActiveItemIdsChange: PropTypes.func,\n  onSelectedItemIdsChange: PropTypes.func,\n  renderItemTitle: PropTypes.func,\n  renderedItems: PropTypes.func,\n};\n\nTree.Item = TreeItem;\nTree.Title = TreeTitle;\n\nTree.defaultProps = {\n  accessibility: treeBehavior,\n};\n\nTree.handledProps = Object.keys(Tree.propTypes) as any;\n\nTree.create = createShorthandFactory({\n  Component: Tree,\n  mappedArrayProp: 'items',\n});\n"],"mappings":"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"}