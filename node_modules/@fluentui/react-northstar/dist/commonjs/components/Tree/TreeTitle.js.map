{"version":3,"file":"TreeTitle.js","names":["_accessibility","require","_reactBindings","_Box","customPropTypes","_interopRequireWildcard","PropTypes","React","_utils","_context","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","treeTitleClassName","exports","treeTitleSlotClassNames","indicator","TreeTitle","forwardRef","props","ref","context","useFluentContext","_useTelemetry","useTelemetry","displayName","telemetry","setStart","setEnd","_React$useContext","useContext","TreeContext","focusItemById","toggleItemActive","toggleItemSelect","accessibility","id","children","className","content","design","hasSubtree","level","index","styles","treeSize","variables","selectionIndicator","disabled","selected","selectable","expanded","indeterminate","getA11Props","useAccessibility","debugName","actionHandlers","performClick","e","shouldPreventDefaultOnKeyDown","preventDefault","stopPropagation","handleClick","focusParent","parent","mapPropsToBehavior","rtl","_useStyles","useStyles","mapPropsToStyles","showIndicator","mapPropsToInlineStyles","unstyled","classes","resolvedStyles","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","_invoke2","selectionIndicatorOverrideProps","predefinedProps","onClick","selectionIndicatorElement","Box","create","defaultProps","assign","as","overrideProps","element","createElement","root","rtlTextContainer","getAttributes","forElements","childrenExist","propTypes","commonPropTypes","createCommon","string","bool","number","func","shorthandAllowingChildren","treeTitleBehavior","keys","createShorthandFactory","Component","mappedProp"],"sources":["components/Tree/TreeTitle.tsx"],"sourcesContent":["import { Accessibility, treeTitleBehavior, TreeTitleBehaviorProps } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  useFluentContext,\n  useTelemetry,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport { Box, BoxProps } from '../Box/Box';\nimport { SupportedIntrinsicInputProps } from '../../utils/htmlPropsUtils';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  commonPropTypes,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  rtlTextContainer,\n  shouldPreventDefaultOnKeyDown,\n} from '../../utils';\nimport { ComponentEventHandler, FluentComponentStaticProps, ShorthandValue } from '../../types';\nimport { TreeContext } from './context';\n\nexport interface TreeTitleSlotClassNames {\n  indicator: string;\n}\n\nexport interface TreeTitleProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<TreeTitleBehaviorProps>;\n\n  /** Internal usage only -  Id needed to identify this item inside the Tree, passed down from TreeItem */\n  id?: string;\n\n  /** Whether or not the title has a subtree. */\n  hasSubtree?: boolean;\n\n  /** The index of the title among its siblings. Count starts at 1. */\n  index?: number;\n\n  /** Level of the tree/subtree that contains this title. */\n  level?: number;\n\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<TreeTitleProps>;\n\n  /** Whether or not the subtree of the title is in the open state. */\n  expanded?: boolean;\n\n  /** Size of the tree containing this title without any children. */\n  treeSize?: number;\n\n  /** A selection indicator icon can be customized. */\n  selectionIndicator?: ShorthandValue<BoxProps>;\n\n  /** A selection indicator can appear disabled and be unable to change states. */\n  disabled?: SupportedIntrinsicInputProps['disabled'];\n\n  /** A state of selection indicator. */\n  selected?: boolean;\n\n  /** Whether or not tree title is selectable. */\n  selectable?: boolean;\n\n  /** For selectable parents define if all nested children are checked */\n  indeterminate?: boolean;\n\n  /** The id of the parent tree title, if any. */\n  parent?: string;\n\n  unstyled?: boolean;\n}\n\nexport type TreeTitleStylesProps = Pick<\n  TreeTitleProps,\n  'selected' | 'selectable' | 'disabled' | 'indeterminate' | 'level'\n> & {\n  showIndicator: boolean;\n};\n\nexport const treeTitleClassName = 'ui-tree__title';\n\nexport const treeTitleSlotClassNames = {\n  indicator: `${treeTitleClassName}__selection-indicator`,\n};\n\n/**\n * A TreeTitle renders a title of TreeItem.\n */\nexport const TreeTitle = React.forwardRef<HTMLAnchorElement, TreeTitleProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(TreeTitle.displayName, context.telemetry);\n  setStart();\n  const { focusItemById, toggleItemActive, toggleItemSelect } = React.useContext(TreeContext);\n  const {\n    accessibility,\n    id,\n    children,\n    className,\n    content,\n    design,\n    hasSubtree,\n    level,\n    index,\n    styles,\n    treeSize,\n    variables,\n    selectionIndicator,\n    disabled,\n    selected,\n    selectable,\n    expanded,\n    indeterminate,\n  } = props;\n\n  const getA11Props = useAccessibility<TreeTitleBehaviorProps>(accessibility, {\n    debugName: TreeTitle.displayName,\n    actionHandlers: {\n      performClick: e => {\n        if (shouldPreventDefaultOnKeyDown(e)) {\n          e.preventDefault();\n        }\n        e.stopPropagation();\n        handleClick(e);\n      },\n      focusParent: e => {\n        // allow bubbling up to parent treeItem\n        focusItemById(props.parent);\n      },\n    },\n    mapPropsToBehavior: () => ({\n      hasSubtree,\n      level,\n      index,\n      treeSize,\n      selected,\n      selectable,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<TreeTitleStylesProps>(TreeTitle.displayName, {\n    className: treeTitleClassName,\n    mapPropsToStyles: () => ({\n      selected,\n      disabled,\n      selectable,\n      indeterminate,\n      level,\n      showIndicator: selectable && ((hasSubtree && expanded) || selected || indeterminate),\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n    unstyled: props.unstyled,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(TreeTitle.handledProps, props);\n\n  const handleClick = e => {\n    if (hasSubtree) {\n      toggleItemActive(e, id);\n    } else {\n      toggleItemSelect(e, id);\n    }\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const selectionIndicatorOverrideProps = (predefinedProps: BoxProps) => ({\n    onClick: (e: React.SyntheticEvent) => {\n      e.stopPropagation(); // otherwise onClick on title will also be executed\n      if (selectable) {\n        toggleItemSelect(e, id);\n      }\n\n      _.invoke(predefinedProps, 'onClick', e);\n    },\n  });\n\n  const selectionIndicatorElement =\n    selectable &&\n    Box.create(selectionIndicator, {\n      defaultProps: () => ({\n        as: 'span',\n        selected,\n        ...getA11Props('indicator', {\n          className: treeTitleSlotClassNames.indicator,\n          styles: resolvedStyles.selectionIndicator,\n        }),\n      }),\n      overrideProps: selectionIndicatorOverrideProps,\n    });\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        onClick: handleClick,\n        selected,\n        ref,\n        ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : content}\n      {selectionIndicatorElement}\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown as ForwardRefWithAs<'a', HTMLAnchorElement, TreeTitleProps> & FluentComponentStaticProps<TreeTitleProps>;\n\nTreeTitle.displayName = 'TreeTitle';\n\nTreeTitle.propTypes = {\n  ...commonPropTypes.createCommon(),\n  id: PropTypes.string,\n  hasSubtree: PropTypes.bool,\n  index: PropTypes.number,\n  level: PropTypes.number,\n  onClick: PropTypes.func,\n  expanded: PropTypes.bool,\n  selected: PropTypes.bool,\n  selectable: PropTypes.bool,\n  treeSize: PropTypes.number,\n  selectionIndicator: customPropTypes.shorthandAllowingChildren,\n  unstyled: PropTypes.bool,\n  indeterminate: PropTypes.bool,\n  parent: PropTypes.string,\n};\nTreeTitle.defaultProps = {\n  as: 'a' as const,\n  selectionIndicator: {},\n  accessibility: treeTitleBehavior,\n};\nTreeTitle.handledProps = Object.keys(TreeTitle.propTypes) as any;\n\nTreeTitle.create = createShorthandFactory({\n  Component: TreeTitle,\n  mappedProp: 'content',\n});\n"],"mappings":";;;;;;AAAA,IAAAA,cAAA,GAAAC,OAAA;AACA,IAAAC,cAAA,GAAAD,OAAA;AASA,IAAAE,IAAA,GAAAF,OAAA;AAEA,IAAAG,eAAA,GAAAC,uBAAA,CAAAJ,OAAA;AAEA,IAAAK,SAAA,GAAAD,uBAAA,CAAAJ,OAAA;AACA,IAAAM,KAAA,GAAAF,uBAAA,CAAAJ,OAAA;AAEA,IAAAO,MAAA,GAAAP,OAAA;AAWA,IAAAQ,QAAA,GAAAR,OAAA;AAAwC,SAAAS,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAN,wBAAAU,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAgEjC,IAAMW,kBAAkB,GAAG,gBAAgB;AAACC,OAAA,CAAAD,kBAAA,GAAAA,kBAAA;AAE5C,IAAME,uBAAuB,GAAG;EACrCC,SAAS,EAAKH,kBAAkB;AAClC,CAAC;;AAED;AACA;AACA;AAFAC,OAAA,CAAAC,uBAAA,GAAAA,uBAAA;AAGO,IAAME,SAAS,gBAAG7B,KAAK,CAAC8B,UAAU,CAAoC,UAACC,KAAK,EAAEC,GAAG,EAAK;EAC3F,IAAMC,OAAO,GAAG,IAAAC,+BAAgB,EAAC,CAAC;EAClC,IAAAC,aAAA,GAA6B,IAAAC,2BAAY,EAACP,SAAS,CAACQ,WAAW,EAAEJ,OAAO,CAACK,SAAS,CAAC;IAA3EC,QAAQ,GAAAJ,aAAA,CAARI,QAAQ;IAAEC,MAAM,GAAAL,aAAA,CAANK,MAAM;EACxBD,QAAQ,CAAC,CAAC;EACV,IAAAE,iBAAA,GAA8DzC,KAAK,CAAC0C,UAAU,CAACC,oBAAW,CAAC;IAAnFC,aAAa,GAAAH,iBAAA,CAAbG,aAAa;IAAEC,gBAAgB,GAAAJ,iBAAA,CAAhBI,gBAAgB;IAAEC,gBAAgB,GAAAL,iBAAA,CAAhBK,gBAAgB;EACzD,IACEC,aAAa,GAkBXhB,KAAK,CAlBPgB,aAAa;IACbC,EAAE,GAiBAjB,KAAK,CAjBPiB,EAAE;IACFC,QAAQ,GAgBNlB,KAAK,CAhBPkB,QAAQ;IACRC,SAAS,GAePnB,KAAK,CAfPmB,SAAS;IACTC,OAAO,GAcLpB,KAAK,CAdPoB,OAAO;IACPC,MAAM,GAaJrB,KAAK,CAbPqB,MAAM;IACNC,UAAU,GAYRtB,KAAK,CAZPsB,UAAU;IACVC,KAAK,GAWHvB,KAAK,CAXPuB,KAAK;IACLC,KAAK,GAUHxB,KAAK,CAVPwB,KAAK;IACLC,MAAM,GASJzB,KAAK,CATPyB,MAAM;IACNC,QAAQ,GAQN1B,KAAK,CARP0B,QAAQ;IACRC,SAAS,GAOP3B,KAAK,CAPP2B,SAAS;IACTC,kBAAkB,GAMhB5B,KAAK,CANP4B,kBAAkB;IAClBC,QAAQ,GAKN7B,KAAK,CALP6B,QAAQ;IACRC,QAAQ,GAIN9B,KAAK,CAJP8B,QAAQ;IACRC,UAAU,GAGR/B,KAAK,CAHP+B,UAAU;IACVC,QAAQ,GAENhC,KAAK,CAFPgC,QAAQ;IACRC,aAAa,GACXjC,KAAK,CADPiC,aAAa;EAGf,IAAMC,WAAW,GAAG,IAAAC,+BAAgB,EAAyBnB,aAAa,EAAE;IAC1EoB,SAAS,EAAEtC,SAAS,CAACQ,WAAW;IAChC+B,cAAc,EAAE;MACdC,YAAY,EAAE,SAAAA,aAAAC,CAAC,EAAI;QACjB,IAAI,IAAAC,oCAA6B,EAACD,CAAC,CAAC,EAAE;UACpCA,CAAC,CAACE,cAAc,CAAC,CAAC;QACpB;QACAF,CAAC,CAACG,eAAe,CAAC,CAAC;QACnBC,WAAW,CAACJ,CAAC,CAAC;MAChB,CAAC;MACDK,WAAW,EAAE,SAAAA,YAAAL,CAAC,EAAI;QAChB;QACA1B,aAAa,CAACb,KAAK,CAAC6C,MAAM,CAAC;MAC7B;IACF,CAAC;IACDC,kBAAkB,EAAE,SAAAA,mBAAA;MAAA,OAAO;QACzBxB,UAAU,EAAVA,UAAU;QACVC,KAAK,EAALA,KAAK;QACLC,KAAK,EAALA,KAAK;QACLE,QAAQ,EAARA,QAAQ;QACRI,QAAQ,EAARA,QAAQ;QACRC,UAAU,EAAVA;MACF,CAAC;IAAA,CAAC;IACFgB,GAAG,EAAE7C,OAAO,CAAC6C;EACf,CAAC,CAAC;EAEF,IAAAC,UAAA,GAA4C,IAAAC,wBAAS,EAAuBnD,SAAS,CAACQ,WAAW,EAAE;MACjGa,SAAS,EAAEzB,kBAAkB;MAC7BwD,gBAAgB,EAAE,SAAAA,iBAAA;QAAA,OAAO;UACvBpB,QAAQ,EAARA,QAAQ;UACRD,QAAQ,EAARA,QAAQ;UACRE,UAAU,EAAVA,UAAU;UACVE,aAAa,EAAbA,aAAa;UACbV,KAAK,EAALA,KAAK;UACL4B,aAAa,EAAEpB,UAAU,KAAMT,UAAU,IAAIU,QAAQ,IAAKF,QAAQ,IAAIG,aAAa;QACrF,CAAC;MAAA,CAAC;MACFmB,sBAAsB,EAAE,SAAAA,uBAAA;QAAA,OAAO;UAC7BjC,SAAS,EAATA,SAAS;UACTE,MAAM,EAANA,MAAM;UACNI,MAAM,EAANA,MAAM;UACNE,SAAS,EAATA;QACF,CAAC;MAAA,CAAC;MACFoB,GAAG,EAAE7C,OAAO,CAAC6C,GAAG;MAChBM,QAAQ,EAAErD,KAAK,CAACqD;IAClB,CAAC,CAAC;IAlBMC,OAAO,GAAAN,UAAA,CAAPM,OAAO;IAAUC,cAAc,GAAAP,UAAA,CAAtBvB,MAAM;EAoBvB,IAAM+B,WAAW,GAAG,IAAAC,6BAAc,EAACzD,KAAK,CAAC;EACzC,IAAM0D,cAAc,GAAG,IAAAC,gCAAiB,EAAC7D,SAAS,CAAC8D,YAAY,EAAE5D,KAAK,CAAC;EAEvE,IAAM2C,WAAW,GAAG,SAAdA,WAAWA,CAAGJ,CAAC,EAAI;IACvB,IAAIjB,UAAU,EAAE;MACdR,gBAAgB,CAACyB,CAAC,EAAEtB,EAAE,CAAC;IACzB,CAAC,MAAM;MACLF,gBAAgB,CAACwB,CAAC,EAAEtB,EAAE,CAAC;IACzB;IACA,IAAA4C,QAAA,CAAAlF,OAAA,EAASqB,KAAK,EAAE,SAAS,EAAEuC,CAAC,EAAEvC,KAAK,CAAC;EACtC,CAAC;EAED,IAAM8D,+BAA+B,GAAG,SAAlCA,+BAA+BA,CAAIC,eAAyB;IAAA,OAAM;MACtEC,OAAO,EAAE,SAAAA,QAACzB,CAAuB,EAAK;QACpCA,CAAC,CAACG,eAAe,CAAC,CAAC,CAAC,CAAC;QACrB,IAAIX,UAAU,EAAE;UACdhB,gBAAgB,CAACwB,CAAC,EAAEtB,EAAE,CAAC;QACzB;QAEA,IAAA4C,QAAA,CAAAlF,OAAA,EAASoF,eAAe,EAAE,SAAS,EAAExB,CAAC,CAAC;MACzC;IACF,CAAC;EAAA,CAAC;EAEF,IAAM0B,yBAAyB,GAC7BlC,UAAU,IACVmC,QAAG,CAACC,MAAM,CAACvC,kBAAkB,EAAE;IAC7BwC,YAAY,EAAE,SAAAA,aAAA;MAAA,OAAAnF,MAAA,CAAAoF,MAAA;QACZC,EAAE,EAAE,MAAM;QACVxC,QAAQ,EAARA;MAAQ,GACLI,WAAW,CAAC,WAAW,EAAE;QAC1Bf,SAAS,EAAEvB,uBAAuB,CAACC,SAAS;QAC5C4B,MAAM,EAAE8B,cAAc,CAAC3B;MACzB,CAAC,CAAC;IAAA,CACF;IACF2C,aAAa,EAAET;EACjB,CAAC,CAAC;EAEJ,IAAMU,OAAO,gBACXvG,KAAA,CAAAwG,aAAA,CAACjB,WAAW,EACNtB,WAAW,CAAC,MAAM,EAAAjD,MAAA,CAAAoF,MAAA;IACpBlD,SAAS,EAAEmC,OAAO,CAACoB,IAAI;IACvBV,OAAO,EAAErB,WAAW;IACpBb,QAAQ,EAARA,QAAQ;IACR7B,GAAG,EAAHA;EAAG,GACA0E,uBAAgB,CAACC,aAAa,CAAC;IAAEC,WAAW,EAAE,CAAC3D,QAAQ,EAAEE,OAAO;EAAE,CAAC,CAAC,EACpEsC,cAAc,CAClB,CAAC,EAED,IAAAoB,oBAAa,EAAC5D,QAAQ,CAAC,GAAGA,QAAQ,GAAGE,OAAO,EAC5C6C,yBACU,CACd;EACDxD,MAAM,CAAC,CAAC;EAER,OAAO+D,OAAO;AAChB,CAAC,CAAqH;AAAC7E,OAAA,CAAAG,SAAA,GAAAA,SAAA;AAEvHA,SAAS,CAACQ,WAAW,GAAG,WAAW;AAEnCR,SAAS,CAACiF,SAAS,GAAA9F,MAAA,CAAAoF,MAAA,KACdW,sBAAe,CAACC,YAAY,CAAC,CAAC;EACjChE,EAAE,EAAEjD,SAAS,CAACkH,MAAM;EACpB5D,UAAU,EAAEtD,SAAS,CAACmH,IAAI;EAC1B3D,KAAK,EAAExD,SAAS,CAACoH,MAAM;EACvB7D,KAAK,EAAEvD,SAAS,CAACoH,MAAM;EACvBpB,OAAO,EAAEhG,SAAS,CAACqH,IAAI;EACvBrD,QAAQ,EAAEhE,SAAS,CAACmH,IAAI;EACxBrD,QAAQ,EAAE9D,SAAS,CAACmH,IAAI;EACxBpD,UAAU,EAAE/D,SAAS,CAACmH,IAAI;EAC1BzD,QAAQ,EAAE1D,SAAS,CAACoH,MAAM;EAC1BxD,kBAAkB,EAAE9D,eAAe,CAACwH,yBAAyB;EAC7DjC,QAAQ,EAAErF,SAAS,CAACmH,IAAI;EACxBlD,aAAa,EAAEjE,SAAS,CAACmH,IAAI;EAC7BtC,MAAM,EAAE7E,SAAS,CAACkH;AAAM,EACzB;AACDpF,SAAS,CAACsE,YAAY,GAAG;EACvBE,EAAE,EAAE,GAAY;EAChB1C,kBAAkB,EAAE,CAAC,CAAC;EACtBZ,aAAa,EAAEuE;AACjB,CAAC;AACDzF,SAAS,CAAC8D,YAAY,GAAG3E,MAAM,CAACuG,IAAI,CAAC1F,SAAS,CAACiF,SAAS,CAAQ;AAEhEjF,SAAS,CAACqE,MAAM,GAAG,IAAAsB,6BAAsB,EAAC;EACxCC,SAAS,EAAE5F,SAAS;EACpB6F,UAAU,EAAE;AACd,CAAC,CAAC"}