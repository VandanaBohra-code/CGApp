{"version":3,"file":"SkeletonShape.js","names":["PropTypes","_interopRequireWildcard","require","_reactBindings","_utils","_Box","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","skeletonShapeClassName","exports","SkeletonShape","compose","Box","className","displayName","overrideStyles","shorthandConfig","handledProps","mapPropsToStylesProps","_ref","width","height","round","propTypes","assign","commonPropTypes","createCommon","string","bool","defaultProps","as"],"sources":["components/Skeleton/SkeletonShape.tsx"],"sourcesContent":["import * as PropTypes from 'prop-types';\nimport { compose } from '@fluentui/react-bindings';\nimport { commonPropTypes } from '../../utils';\nimport { Box, BoxProps, BoxStylesProps } from '../Box/Box';\n\nexport interface SkeletonShapeOwnProps {\n  width?: string;\n  height?: string;\n  round?: boolean;\n}\nexport interface SkeletonShapeProps extends SkeletonShapeOwnProps, BoxProps {}\n\nexport type SkeletonShapeStylesProps = Required<Pick<SkeletonShapeOwnProps, 'width' | 'height' | 'round'>>;\nexport const skeletonShapeClassName = 'ui-skeleton__shape';\n\n/**\n * A SkeletonShape represents a shape (Image/Button/etc...) that will be loaded\n */\nexport const SkeletonShape = compose<'span', SkeletonShapeOwnProps, SkeletonShapeStylesProps, BoxProps, BoxStylesProps>(\n  Box,\n  {\n    className: skeletonShapeClassName,\n    displayName: 'SkeletonShape',\n    overrideStyles: true,\n    shorthandConfig: {},\n    handledProps: ['round', 'width', 'height'],\n    mapPropsToStylesProps: ({ width, height, round }) => ({ width, height, round }),\n  },\n);\n\nSkeletonShape.propTypes = {\n  ...commonPropTypes.createCommon(),\n  width: PropTypes.string,\n  height: PropTypes.string,\n  round: PropTypes.bool,\n};\n\nSkeletonShape.defaultProps = {\n  as: 'span',\n  width: '100px',\n  height: '100px',\n  round: false,\n};\n"],"mappings":";;;;AAAA,IAAAA,SAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,cAAA,GAAAD,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AACA,IAAAG,IAAA,GAAAH,OAAA;AAA2D,SAAAI,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAN,wBAAAU,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAUpD,IAAMW,sBAAsB,GAAG,oBAAoB;;AAE1D;AACA;AACA;AAFAC,OAAA,CAAAD,sBAAA,GAAAA,sBAAA;AAGO,IAAME,aAAa,GAAG,IAAAC,sBAAO,EAClCC,QAAG,EACH;EACEC,SAAS,EAAEL,sBAAsB;EACjCM,WAAW,EAAE,eAAe;EAC5BC,cAAc,EAAE,IAAI;EACpBC,eAAe,EAAE,CAAC,CAAC;EACnBC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,CAAC;EAC1CC,qBAAqB,EAAE,SAAAA,sBAAAC,IAAA;IAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;MAAEC,MAAM,GAAAF,IAAA,CAANE,MAAM;MAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;IAAA,OAAQ;MAAEF,KAAK,EAALA,KAAK;MAAEC,MAAM,EAANA,MAAM;MAAEC,KAAK,EAALA;IAAM,CAAC;EAAA;AAChF,CACF,CAAC;AAACb,OAAA,CAAAC,aAAA,GAAAA,aAAA;AAEFA,aAAa,CAACa,SAAS,GAAAxB,MAAA,CAAAyB,MAAA,KAClBC,sBAAe,CAACC,YAAY,CAAC,CAAC;EACjCN,KAAK,EAAExC,SAAS,CAAC+C,MAAM;EACvBN,MAAM,EAAEzC,SAAS,CAAC+C,MAAM;EACxBL,KAAK,EAAE1C,SAAS,CAACgD;AAAI,EACtB;AAEDlB,aAAa,CAACmB,YAAY,GAAG;EAC3BC,EAAE,EAAE,MAAM;EACVV,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE,OAAO;EACfC,KAAK,EAAE;AACT,CAAC"}