{"version":3,"file":"SkeletonText.js","names":["customPropTypes","_interopRequireWildcard","require","_reactBindings","_utils","_SkeletonLine","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","skeletonTextClassName","exports","SkeletonText","compose","SkeletonLine","className","displayName","overrideStyles","shorthandConfig","handledProps","mapPropsToStylesProps","_ref","size","propTypes","assign","commonPropTypes","createCommon","defaultProps","as"],"sources":["components/Skeleton/SkeletonText.tsx"],"sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport { compose } from '@fluentui/react-bindings';\nimport { commonPropTypes, SizeValue } from '../../utils';\nimport { SkeletonLineProps, SkeletonLine, SkeletonLineStylesProps } from './SkeletonLine';\n\nexport interface SkeletonTextOwnProps {\n  /** A skeleton text can be sized. */\n  size?: SizeValue;\n}\nexport interface SkeletonTextProps extends SkeletonTextOwnProps, SkeletonLineProps {}\n\nexport type SkeletonTextStylesProps = Required<Pick<SkeletonTextOwnProps, 'size'>>;\nexport const skeletonTextClassName = 'ui-skeleton__text';\n\n/**\n * An SkeletonText represents a text component that will be loaded\n */\nexport const SkeletonText = compose<\n  'span',\n  SkeletonTextOwnProps,\n  SkeletonTextStylesProps,\n  SkeletonLineProps,\n  SkeletonLineStylesProps\n>(SkeletonLine, {\n  className: skeletonTextClassName,\n  displayName: 'SkeletonText',\n  overrideStyles: true,\n  shorthandConfig: {},\n  handledProps: ['size'],\n  mapPropsToStylesProps: ({ size }) => ({\n    size,\n  }),\n});\n\nSkeletonText.propTypes = {\n  ...commonPropTypes.createCommon(),\n  size: customPropTypes.size,\n};\n\nSkeletonText.defaultProps = {\n  as: 'span',\n  size: 'medium',\n};\n"],"mappings":";;;;AAAA,IAAAA,eAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,cAAA,GAAAD,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AACA,IAAAG,aAAA,GAAAH,OAAA;AAA0F,SAAAI,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAN,wBAAAU,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AASnF,IAAMW,qBAAqB,GAAG,mBAAmB;;AAExD;AACA;AACA;AAFAC,OAAA,CAAAD,qBAAA,GAAAA,qBAAA;AAGO,IAAME,YAAY,GAAG,IAAAC,sBAAO,EAMjCC,0BAAY,EAAE;EACdC,SAAS,EAAEL,qBAAqB;EAChCM,WAAW,EAAE,cAAc;EAC3BC,cAAc,EAAE,IAAI;EACpBC,eAAe,EAAE,CAAC,CAAC;EACnBC,YAAY,EAAE,CAAC,MAAM,CAAC;EACtBC,qBAAqB,EAAE,SAAAA,sBAAAC,IAAA;IAAA,IAAGC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAA,OAAQ;MACpCA,IAAI,EAAJA;IACF,CAAC;EAAA;AACH,CAAC,CAAC;AAACX,OAAA,CAAAC,YAAA,GAAAA,YAAA;AAEHA,YAAY,CAACW,SAAS,GAAAtB,MAAA,CAAAuB,MAAA,KACjBC,sBAAe,CAACC,YAAY,CAAC,CAAC;EACjCJ,IAAI,EAAExC,eAAe,CAACwC;AAAI,EAC3B;AAEDV,YAAY,CAACe,YAAY,GAAG;EAC1BC,EAAE,EAAE,MAAM;EACVN,IAAI,EAAE;AACR,CAAC"}