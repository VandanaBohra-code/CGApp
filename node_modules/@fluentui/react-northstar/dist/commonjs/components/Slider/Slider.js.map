{"version":3,"file":"Slider.js","names":["_accessibility","require","_reactBindings","_reactComponentRef","customPropTypes","_interopRequireWildcard","_state","_classnames","_interopRequireDefault","PropTypes","React","_utils","_Box","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","processInputValues","p","min","_toNumber2","max","value","isNaN","Number","Slider","defaultProps","Math","valueAsPercentage","sliderClassName","exports","sliderSlotClassNames","input","inputWrapper","rail","thumb","track","forwardRef","props","ref","_ref","context","useFluentContext","_useTelemetry","useTelemetry","displayName","telemetry","setStart","setEnd","accessibility","getA11yValueMessageOnChange","defaultValue","userInputRef","inputRef","step","className","styles","variables","design","fluid","vertical","disabled","useRef","_useStateManager","useStateManager","createSliderManager","mapPropsToInitialState","mapPropsToState","state","actions","_processInputValues","numericMin","numericMax","numericValue","getA11Props","useAccessibility","debugName","rtl","mapPropsToBehavior","_useStyles","useStyles","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","handleInputOverrides","onChange","e","_get2","_invoke2","assign","change","onMouseDown","setWhatInputSource","target","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","_partitionHTMLProps","partitionHTMLProps","htmlInputProps","restProps","type","inputElement","Box","create","as","overrideProps","element","createElement","root","cx","_extends2","style","width","Ref","innerRef","handleRef","sliderBehavior","_ref2","String","propTypes","commonPropTypes","createCommon","content","oneOfType","string","number","bool","func","itemShorthand","keys","createShorthandFactory","Component","mappedProp"],"sources":["components/Slider/Slider.tsx"],"sourcesContent":["import { Accessibility, sliderBehavior, SliderBehaviorProps } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStateManager,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport { handleRef, Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { createSliderManager } from '@fluentui/state';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  ChildrenComponentProps,\n  commonPropTypes,\n  partitionHTMLProps,\n  UIComponentProps,\n  setWhatInputSource,\n  createShorthandFactory,\n} from '../../utils';\nimport { ComponentEventHandler, ShorthandValue, FluentComponentStaticProps } from '../../types';\nimport { SupportedIntrinsicInputProps } from '../../utils/htmlPropsUtils';\nimport { Box, BoxProps } from '../Box/Box';\n\nconst processInputValues = (\n  p: Pick<SliderProps, 'min' | 'max'> & { value: string },\n): { min: number; max: number; value: number; valueAsPercentage: string } => {\n  let min = _.toNumber(p.min);\n  let max = _.toNumber(p.max);\n  let value = _.toNumber(p.value);\n\n  if (isNaN(min)) min = Number(Slider.defaultProps.min);\n  if (isNaN(max)) max = Number(Slider.defaultProps.max);\n  value = isNaN(value) ? min + (max - min) / 2 : Math.min(max, Math.max(min, value));\n  const valueAsPercentage = `${(100 * (value - min)) / (max - min)}%`;\n\n  return { min, max, value, valueAsPercentage };\n};\n\nexport interface SliderSlotClassNames {\n  input: string;\n  inputWrapper: string;\n  rail: string;\n  thumb: string;\n  track: string;\n}\n\nexport interface SliderProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    Omit<SupportedIntrinsicInputProps, 'defaultValue'> {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<SliderBehaviorProps>;\n\n  /** The default value of the slider. */\n  defaultValue?: string | number;\n\n  /** A slider can be read-only and unable to change states. */\n  disabled?: SupportedIntrinsicInputProps['disabled'];\n\n  /** A slider can take the width of its container. */\n  fluid?: boolean;\n\n  /**\n   * Callback that creates custom accessibility message a screen reader narrates when the value changes.\n   * @param props - Slider props.\n   */\n  getA11yValueMessageOnChange?: (props: SliderProps) => string;\n\n  /** Shorthand for the input component. */\n  input?: ShorthandValue<BoxProps>;\n\n  /** Ref for input DOM node. */\n  inputRef?: React.Ref<HTMLElement>;\n\n  /** The maximum value of the slider. */\n  max?: SupportedIntrinsicInputProps['max'];\n\n  /** The minimum value of the slider. */\n  min?: SupportedIntrinsicInputProps['min'];\n\n  /**\n   * Called after item checked state is changed.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onChange?: ComponentEventHandler<SliderProps & { value: string }>;\n\n  /**\n   * A number that specifies the granularity that the value must adhere to, or the special value 'any'.\n   * A string value of any means that no stepping is implied, and any value is allowed\n   * (barring other constraints, such as min and max).\n   */\n  step?: SupportedIntrinsicInputProps['step'];\n\n  /** The value of the slider. */\n  value?: string | number;\n\n  /** A slider can be displayed vertically. */\n  vertical?: boolean;\n}\n\nexport type SliderStylesProps = Pick<SliderProps, 'fluid' | 'disabled' | 'vertical'>;\nexport const sliderClassName = 'ui-slider';\nexport const sliderSlotClassNames: SliderSlotClassNames = {\n  input: `${sliderClassName}__input`,\n  inputWrapper: `${sliderClassName}__input-wrapper`,\n  rail: `${sliderClassName}__rail`,\n  thumb: `${sliderClassName}__thumb`,\n  track: `${sliderClassName}__track`,\n};\n\n/**\n * A Slider represents an input that allows user to choose a value from within a specific range.\n *\n * @accessibility\n * Implements [ARIA Slider](https://www.w3.org/TR/wai-aria-practices-1.1/#slider) design pattern.\n * @accessibilityIssues\n * [Slider - JAWS narrates slider value twice when using PageUp / PageDown](https://github.com/FreedomScientific/VFO-standards-support/issues/220)\n * [Slider - JAWS narrates current and new value in vertical slider](https://github.com/FreedomScientific/VFO-standards-support/issues/219)\n */\nexport const Slider = React.forwardRef<HTMLInputElement, SliderProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Slider.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    min,\n    max,\n    value,\n    getA11yValueMessageOnChange,\n    defaultValue,\n    input,\n    inputRef: userInputRef,\n    step,\n    className,\n    styles,\n    variables,\n    design,\n    fluid,\n    vertical,\n    disabled,\n  } = props;\n  const inputRef = React.useRef<HTMLElement>();\n\n  const { state, actions } = useStateManager(createSliderManager, {\n    mapPropsToInitialState: () => ({\n      value: defaultValue as string,\n    }),\n    mapPropsToState: () => ({\n      value: value as string,\n    }),\n  });\n  const {\n    min: numericMin,\n    max: numericMax,\n    value: numericValue,\n    valueAsPercentage,\n  } = processInputValues({\n    min,\n    max,\n    value: state.value || '',\n  });\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: Slider.displayName,\n    rtl: context.rtl,\n    mapPropsToBehavior: () => ({\n      disabled,\n      getA11yValueMessageOnChange,\n      max: numericMax,\n      min: numericMax,\n      value: numericValue,\n      vertical,\n    }),\n  });\n  const { classes, styles: resolvedStyles } = useStyles<SliderStylesProps>(Slider.displayName, {\n    className: sliderClassName,\n    mapPropsToStyles: () => ({\n      fluid,\n      vertical,\n      disabled,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      styles,\n      variables,\n      design,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleInputOverrides = () => ({\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => {\n      const value = _.get(e, 'target.value');\n      _.invoke(props, 'onChange', e, { ...props, value });\n      actions.change(value);\n    },\n    onMouseDown: (e: React.MouseEvent<HTMLInputElement>) => {\n      setWhatInputSource(context.target, 'mouse');\n      _.invoke(props, 'onMouseDown', e, props);\n    },\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Slider.handledProps, props);\n  const [htmlInputProps, restProps] = partitionHTMLProps(unhandledProps);\n  const type = 'range';\n\n  // we need 2 wrappers around the slider rail, track, input and thumb slots to achieve correct component sizes\n\n  const inputElement = Box.create(input || type, {\n    defaultProps: () =>\n      getA11Props('input', {\n        ...htmlInputProps,\n        as: 'input',\n        className: sliderSlotClassNames.input,\n        min: numericMin,\n        max: numericMax,\n        step,\n        styles: resolvedStyles.input,\n        type,\n        value: numericValue,\n      }),\n    overrideProps: handleInputOverrides,\n  });\n\n  const element = (\n    <ElementType {...getA11Props('root', { className: classes.root, ref, ...restProps })}>\n      <div\n        {...getA11Props('inputWrapper', {\n          className: cx(sliderSlotClassNames.inputWrapper, classes.inputWrapper),\n        })}\n      >\n        <span {...getA11Props('rail', { className: cx(sliderSlotClassNames.rail, classes.rail) })} />\n        <span\n          {...getA11Props('track', { className: cx(sliderSlotClassNames.track, classes.track) })}\n          style={{ width: valueAsPercentage }}\n        />\n        <Ref\n          innerRef={(inputElement: HTMLElement) => {\n            handleRef(inputRef, inputElement);\n            handleRef(userInputRef, inputElement);\n          }}\n        >\n          {inputElement}\n        </Ref>\n        {/* the thumb slot needs to appear after the input slot */}\n        <span\n          {...getA11Props('thumb', { className: cx(sliderSlotClassNames.thumb, classes.thumb) })}\n          style={{ [context.rtl ? 'right' : 'left']: valueAsPercentage }}\n        />\n      </div>\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown as ForwardRefWithAs<'input', HTMLInputElement, SliderProps> & FluentComponentStaticProps;\n\nSlider.displayName = 'Slider';\n\nSlider.defaultProps = {\n  accessibility: sliderBehavior,\n  getA11yValueMessageOnChange: ({ value }) => String(value),\n  max: 100,\n  min: 0,\n  step: 1,\n};\nSlider.propTypes = {\n  ...commonPropTypes.createCommon({ content: false }),\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fluid: PropTypes.bool,\n  getA11yValueMessageOnChange: PropTypes.func,\n  input: customPropTypes.itemShorthand,\n  inputRef: customPropTypes.ref,\n  max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  min: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onChange: PropTypes.func,\n  step: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  vertical: PropTypes.bool,\n};\nSlider.handledProps = Object.keys(Slider.propTypes) as any;\n\nSlider.create = createShorthandFactory({ Component: Slider, mappedProp: 'value' });\n"],"mappings":";;;;;;;;;AAAA,IAAAA,cAAA,GAAAC,OAAA;AACA,IAAAC,cAAA,GAAAD,OAAA;AAUA,IAAAE,kBAAA,GAAAF,OAAA;AACA,IAAAG,eAAA,GAAAC,uBAAA,CAAAJ,OAAA;AACA,IAAAK,MAAA,GAAAL,OAAA;AACA,IAAAM,WAAA,GAAAC,sBAAA,CAAAP,OAAA;AAEA,IAAAQ,SAAA,GAAAJ,uBAAA,CAAAJ,OAAA;AACA,IAAAS,KAAA,GAAAL,uBAAA,CAAAJ,OAAA;AAEA,IAAAU,MAAA,GAAAV,OAAA;AAUA,IAAAW,IAAA,GAAAX,OAAA;AAA2C,SAAAY,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAT,wBAAAa,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAE3C,IAAMW,kBAAkB,GAAG,SAArBA,kBAAkBA,CACtBC,CAAuD,EACoB;EAC3E,IAAIC,GAAG,GAAG,IAAAC,UAAA,CAAAlB,OAAA,EAAWgB,CAAC,CAACC,GAAG,CAAC;EAC3B,IAAIE,GAAG,GAAG,IAAAD,UAAA,CAAAlB,OAAA,EAAWgB,CAAC,CAACG,GAAG,CAAC;EAC3B,IAAIC,KAAK,GAAG,IAAAF,UAAA,CAAAlB,OAAA,EAAWgB,CAAC,CAACI,KAAK,CAAC;EAE/B,IAAIC,KAAK,CAACJ,GAAG,CAAC,EAAEA,GAAG,GAAGK,MAAM,CAACC,MAAM,CAACC,YAAY,CAACP,GAAG,CAAC;EACrD,IAAII,KAAK,CAACF,GAAG,CAAC,EAAEA,GAAG,GAAGG,MAAM,CAACC,MAAM,CAACC,YAAY,CAACL,GAAG,CAAC;EACrDC,KAAK,GAAGC,KAAK,CAACD,KAAK,CAAC,GAAGH,GAAG,GAAG,CAACE,GAAG,GAAGF,GAAG,IAAI,CAAC,GAAGQ,IAAI,CAACR,GAAG,CAACE,GAAG,EAAEM,IAAI,CAACN,GAAG,CAACF,GAAG,EAAEG,KAAK,CAAC,CAAC;EAClF,IAAMM,iBAAiB,GAAO,GAAG,IAAIN,KAAK,GAAGH,GAAG,CAAC,IAAKE,GAAG,GAAGF,GAAG,CAAC,MAAG;EAEnE,OAAO;IAAEA,GAAG,EAAHA,GAAG;IAAEE,GAAG,EAAHA,GAAG;IAAEC,KAAK,EAALA,KAAK;IAAEM,iBAAiB,EAAjBA;EAAkB,CAAC;AAC/C,CAAC;AAkEM,IAAMC,eAAe,GAAG,WAAW;AAACC,OAAA,CAAAD,eAAA,GAAAA,eAAA;AACpC,IAAME,oBAA0C,GAAG;EACxDC,KAAK,EAAKH,eAAe,YAAS;EAClCI,YAAY,EAAKJ,eAAe,oBAAiB;EACjDK,IAAI,EAAKL,eAAe,WAAQ;EAChCM,KAAK,EAAKN,eAAe,YAAS;EAClCO,KAAK,EAAKP,eAAe;AAC3B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARAC,OAAA,CAAAC,oBAAA,GAAAA,oBAAA;AASO,IAAMN,MAAM,gBAAGjC,KAAK,CAAC6C,UAAU,CAAgC,UAACC,KAAK,EAAEC,GAAG,EAAK;EAAA,IAAAC,IAAA;EACpF,IAAMC,OAAO,GAAG,IAAAC,+BAAgB,EAAC,CAAC;EAClC,IAAAC,aAAA,GAA6B,IAAAC,2BAAY,EAACnB,MAAM,CAACoB,WAAW,EAAEJ,OAAO,CAACK,SAAS,CAAC;IAAxEC,QAAQ,GAAAJ,aAAA,CAARI,QAAQ;IAAEC,MAAM,GAAAL,aAAA,CAANK,MAAM;EACxBD,QAAQ,CAAC,CAAC;EAEV,IACEE,aAAa,GAgBXX,KAAK,CAhBPW,aAAa;IACb9B,GAAG,GAeDmB,KAAK,CAfPnB,GAAG;IACHE,GAAG,GAcDiB,KAAK,CAdPjB,GAAG;IACHC,KAAK,GAaHgB,KAAK,CAbPhB,KAAK;IACL4B,2BAA2B,GAYzBZ,KAAK,CAZPY,2BAA2B;IAC3BC,YAAY,GAWVb,KAAK,CAXPa,YAAY;IACZnB,KAAK,GAUHM,KAAK,CAVPN,KAAK;IACKoB,YAAY,GASpBd,KAAK,CATPe,QAAQ;IACRC,IAAI,GAQFhB,KAAK,CARPgB,IAAI;IACJC,SAAS,GAOPjB,KAAK,CAPPiB,SAAS;IACTC,MAAM,GAMJlB,KAAK,CANPkB,MAAM;IACNC,SAAS,GAKPnB,KAAK,CALPmB,SAAS;IACTC,MAAM,GAIJpB,KAAK,CAJPoB,MAAM;IACNC,KAAK,GAGHrB,KAAK,CAHPqB,KAAK;IACLC,QAAQ,GAENtB,KAAK,CAFPsB,QAAQ;IACRC,QAAQ,GACNvB,KAAK,CADPuB,QAAQ;EAEV,IAAMR,QAAQ,GAAG7D,KAAK,CAACsE,MAAM,CAAc,CAAC;EAE5C,IAAAC,gBAAA,GAA2B,IAAAC,8BAAe,EAACC,0BAAmB,EAAE;MAC9DC,sBAAsB,EAAE,SAAAA,uBAAA;QAAA,OAAO;UAC7B5C,KAAK,EAAE6B;QACT,CAAC;MAAA,CAAC;MACFgB,eAAe,EAAE,SAAAA,gBAAA;QAAA,OAAO;UACtB7C,KAAK,EAAEA;QACT,CAAC;MAAA;IACH,CAAC,CAAC;IAPM8C,KAAK,GAAAL,gBAAA,CAALK,KAAK;IAAEC,OAAO,GAAAN,gBAAA,CAAPM,OAAO;EAQtB,IAAAC,mBAAA,GAKIrD,kBAAkB,CAAC;MACrBE,GAAG,EAAHA,GAAG;MACHE,GAAG,EAAHA,GAAG;MACHC,KAAK,EAAE8C,KAAK,CAAC9C,KAAK,IAAI;IACxB,CAAC,CAAC;IARKiD,UAAU,GAAAD,mBAAA,CAAfnD,GAAG;IACEqD,UAAU,GAAAF,mBAAA,CAAfjD,GAAG;IACIoD,YAAY,GAAAH,mBAAA,CAAnBhD,KAAK;IACLM,iBAAiB,GAAA0C,mBAAA,CAAjB1C,iBAAiB;EAOnB,IAAM8C,WAAW,GAAG,IAAAC,+BAAgB,EAAC1B,aAAa,EAAE;IAClD2B,SAAS,EAAEnD,MAAM,CAACoB,WAAW;IAC7BgC,GAAG,EAAEpC,OAAO,CAACoC,GAAG;IAChBC,kBAAkB,EAAE,SAAAA,mBAAA;MAAA,OAAO;QACzBjB,QAAQ,EAARA,QAAQ;QACRX,2BAA2B,EAA3BA,2BAA2B;QAC3B7B,GAAG,EAAEmD,UAAU;QACfrD,GAAG,EAAEqD,UAAU;QACflD,KAAK,EAAEmD,YAAY;QACnBb,QAAQ,EAARA;MACF,CAAC;IAAA;EACH,CAAC,CAAC;EACF,IAAAmB,UAAA,GAA4C,IAAAC,wBAAS,EAAoBvD,MAAM,CAACoB,WAAW,EAAE;MAC3FU,SAAS,EAAE1B,eAAe;MAC1BoD,gBAAgB,EAAE,SAAAA,iBAAA;QAAA,OAAO;UACvBtB,KAAK,EAALA,KAAK;UACLC,QAAQ,EAARA,QAAQ;UACRC,QAAQ,EAARA;QACF,CAAC;MAAA,CAAC;MACFqB,sBAAsB,EAAE,SAAAA,uBAAA;QAAA,OAAO;UAC7B3B,SAAS,EAATA,SAAS;UACTC,MAAM,EAANA,MAAM;UACNC,SAAS,EAATA,SAAS;UACTC,MAAM,EAANA;QACF,CAAC;MAAA,CAAC;MACFmB,GAAG,EAAEpC,OAAO,CAACoC;IACf,CAAC,CAAC;IAdMM,OAAO,GAAAJ,UAAA,CAAPI,OAAO;IAAUC,cAAc,GAAAL,UAAA,CAAtBvB,MAAM;EAgBvB,IAAM6B,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA;IAAA,OAAU;MAClCC,QAAQ,EAAE,SAAAA,SAACC,CAAsC,EAAK;QACpD,IAAMjE,KAAK,GAAG,IAAAkE,KAAA,CAAAtF,OAAA,EAAMqF,CAAC,EAAE,cAAc,CAAC;QACtC,IAAAE,QAAA,CAAAvF,OAAA,EAASoC,KAAK,EAAE,UAAU,EAAEiD,CAAC,EAAA/E,MAAA,CAAAkF,MAAA,KAAOpD,KAAK;UAAEhB,KAAK,EAALA;QAAK,EAAE,CAAC;QACnD+C,OAAO,CAACsB,MAAM,CAACrE,KAAK,CAAC;MACvB,CAAC;MACDsE,WAAW,EAAE,SAAAA,YAACL,CAAqC,EAAK;QACtD,IAAAM,yBAAkB,EAACpD,OAAO,CAACqD,MAAM,EAAE,OAAO,CAAC;QAC3C,IAAAL,QAAA,CAAAvF,OAAA,EAASoC,KAAK,EAAE,aAAa,EAAEiD,CAAC,EAAEjD,KAAK,CAAC;MAC1C;IACF,CAAC;EAAA,CAAC;EAEF,IAAMyD,WAAW,GAAG,IAAAC,6BAAc,EAAC1D,KAAK,CAAC;EACzC,IAAM2D,cAAc,GAAG,IAAAC,gCAAiB,EAACzE,MAAM,CAAC0E,YAAY,EAAE7D,KAAK,CAAC;EACpE,IAAA8D,mBAAA,GAAoC,IAAAC,yBAAkB,EAACJ,cAAc,CAAC;IAA/DK,cAAc,GAAAF,mBAAA;IAAEG,SAAS,GAAAH,mBAAA;EAChC,IAAMI,IAAI,GAAG,OAAO;;EAEpB;;EAEA,IAAMC,YAAY,GAAGC,QAAG,CAACC,MAAM,CAAC3E,KAAK,IAAIwE,IAAI,EAAE;IAC7C9E,YAAY,EAAE,SAAAA,aAAA;MAAA,OACZgD,WAAW,CAAC,OAAO,EAAAlE,MAAA,CAAAkF,MAAA,KACdY,cAAc;QACjBM,EAAE,EAAE,OAAO;QACXrD,SAAS,EAAExB,oBAAoB,CAACC,KAAK;QACrCb,GAAG,EAAEoD,UAAU;QACflD,GAAG,EAAEmD,UAAU;QACflB,IAAI,EAAJA,IAAI;QACJE,MAAM,EAAE4B,cAAc,CAACpD,KAAK;QAC5BwE,IAAI,EAAJA,IAAI;QACJlF,KAAK,EAAEmD;MAAY,EACpB,CAAC;IAAA;IACJoC,aAAa,EAAExB;EACjB,CAAC,CAAC;EAEF,IAAMyB,OAAO,gBACXtH,KAAA,CAAAuH,aAAA,CAAChB,WAAW,EAAKrB,WAAW,CAAC,MAAM,EAAAlE,MAAA,CAAAkF,MAAA;IAAInC,SAAS,EAAE4B,OAAO,CAAC6B,IAAI;IAAEzE,GAAG,EAAHA;EAAG,GAAKgE,SAAS,CAAE,CAAC,eAClF/G,KAAA,CAAAuH,aAAA,QACMrC,WAAW,CAAC,cAAc,EAAE;IAC9BnB,SAAS,EAAE,IAAA0D,mBAAE,EAAClF,oBAAoB,CAACE,YAAY,EAAEkD,OAAO,CAAClD,YAAY;EACvE,CAAC,CAAC,eAEFzC,KAAA,CAAAuH,aAAA,SAAUrC,WAAW,CAAC,MAAM,EAAE;IAAEnB,SAAS,EAAE,IAAA0D,mBAAE,EAAClF,oBAAoB,CAACG,IAAI,EAAEiD,OAAO,CAACjD,IAAI;EAAE,CAAC,CAAI,CAAC,eAC7F1C,KAAA,CAAAuH,aAAA,aAAAG,SAAA,CAAAhH,OAAA,MACMwE,WAAW,CAAC,OAAO,EAAE;IAAEnB,SAAS,EAAE,IAAA0D,mBAAE,EAAClF,oBAAoB,CAACK,KAAK,EAAE+C,OAAO,CAAC/C,KAAK;EAAE,CAAC,CAAC;IACtF+E,KAAK,EAAE;MAAEC,KAAK,EAAExF;IAAkB;EAAE,EACrC,CAAC,eACFpC,KAAA,CAAAuH,aAAA,CAAC9H,kBAAA,CAAAoI,GAAG;IACFC,QAAQ,EAAE,SAAAA,SAACb,YAAyB,EAAK;MACvC,IAAAc,4BAAS,EAAClE,QAAQ,EAAEoD,YAAY,CAAC;MACjC,IAAAc,4BAAS,EAACnE,YAAY,EAAEqD,YAAY,CAAC;IACvC;EAAE,GAEDA,YACE,CAAC,eAENjH,KAAA,CAAAuH,aAAA,aAAAG,SAAA,CAAAhH,OAAA,MACMwE,WAAW,CAAC,OAAO,EAAE;IAAEnB,SAAS,EAAE,IAAA0D,mBAAE,EAAClF,oBAAoB,CAACI,KAAK,EAAEgD,OAAO,CAAChD,KAAK;EAAE,CAAC,CAAC;IACtFgF,KAAK,GAAA3E,IAAA,OAAAA,IAAA,CAAKC,OAAO,CAACoC,GAAG,GAAG,OAAO,GAAG,MAAM,IAAGjD,iBAAiB,EAAAY,IAAA;EAAG,EAChE,CACE,CACM,CACd;EACDQ,MAAM,CAAC,CAAC;EAER,OAAO8D,OAAO;AAChB,CAAC,CAAqG;AAAChF,OAAA,CAAAL,MAAA,GAAAA,MAAA;AAEvGA,MAAM,CAACoB,WAAW,GAAG,QAAQ;AAE7BpB,MAAM,CAACC,YAAY,GAAG;EACpBuB,aAAa,EAAEuE,6BAAc;EAC7BtE,2BAA2B,EAAE,SAAAA,4BAAAuE,KAAA;IAAA,IAAGnG,KAAK,GAAAmG,KAAA,CAALnG,KAAK;IAAA,OAAOoG,MAAM,CAACpG,KAAK,CAAC;EAAA;EACzDD,GAAG,EAAE,GAAG;EACRF,GAAG,EAAE,CAAC;EACNmC,IAAI,EAAE;AACR,CAAC;AACD7B,MAAM,CAACkG,SAAS,GAAAnH,MAAA,CAAAkF,MAAA,KACXkC,sBAAe,CAACC,YAAY,CAAC;EAAEC,OAAO,EAAE;AAAM,CAAC,CAAC;EACnD3E,YAAY,EAAE5D,SAAS,CAACwI,SAAS,CAAC,CAACxI,SAAS,CAACyI,MAAM,EAAEzI,SAAS,CAAC0I,MAAM,CAAC,CAAC;EACvEtE,KAAK,EAAEpE,SAAS,CAAC2I,IAAI;EACrBhF,2BAA2B,EAAE3D,SAAS,CAAC4I,IAAI;EAC3CnG,KAAK,EAAE9C,eAAe,CAACkJ,aAAa;EACpC/E,QAAQ,EAAEnE,eAAe,CAACqD,GAAG;EAC7BlB,GAAG,EAAE9B,SAAS,CAACwI,SAAS,CAAC,CAACxI,SAAS,CAACyI,MAAM,EAAEzI,SAAS,CAAC0I,MAAM,CAAC,CAAC;EAC9D9G,GAAG,EAAE5B,SAAS,CAACwI,SAAS,CAAC,CAACxI,SAAS,CAACyI,MAAM,EAAEzI,SAAS,CAAC0I,MAAM,CAAC,CAAC;EAC9D3C,QAAQ,EAAE/F,SAAS,CAAC4I,IAAI;EACxB7E,IAAI,EAAE/D,SAAS,CAACwI,SAAS,CAAC,CAACxI,SAAS,CAACyI,MAAM,EAAEzI,SAAS,CAAC0I,MAAM,CAAC,CAAC;EAC/D3G,KAAK,EAAE/B,SAAS,CAACwI,SAAS,CAAC,CAACxI,SAAS,CAACyI,MAAM,EAAEzI,SAAS,CAAC0I,MAAM,CAAC,CAAC;EAChErE,QAAQ,EAAErE,SAAS,CAAC2I;AAAI,EACzB;AACDzG,MAAM,CAAC0E,YAAY,GAAG3F,MAAM,CAAC6H,IAAI,CAAC5G,MAAM,CAACkG,SAAS,CAAQ;AAE1DlG,MAAM,CAACkF,MAAM,GAAG,IAAA2B,6BAAsB,EAAC;EAAEC,SAAS,EAAE9G,MAAM;EAAE+G,UAAU,EAAE;AAAQ,CAAC,CAAC"}