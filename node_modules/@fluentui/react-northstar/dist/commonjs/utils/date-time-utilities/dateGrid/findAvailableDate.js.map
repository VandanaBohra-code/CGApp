{"version":3,"file":"findAvailableDate.js","names":["_isRestrictedDate","require","_isAfterMaxDate","_isBeforeMinDate","_dateMath","_excluded","findAvailableDate","options","targetDate","initialDate","direction","restrictedDateOptions","_objectWithoutPropertiesLoose2","default","availableDate","isRestrictedDate","compareDatePart","isAfterMaxDate","isBeforeMinDate","addDays","undefined","exports"],"sources":["utils/date-time-utilities/dateGrid/findAvailableDate.ts"],"sourcesContent":["import { IAvailableDateOptions } from './dateGrid.types';\n\nimport { isRestrictedDate } from './isRestrictedDate';\n\nimport { isAfterMaxDate } from './isAfterMaxDate';\n\nimport { isBeforeMinDate } from './isBeforeMinDate';\nimport { compareDatePart, addDays } from '../dateMath/dateMath';\n\n/**\n * Returns closest available date given the restriction `options`, or undefined otherwise\n * @param options - list of search options\n */\nexport const findAvailableDate = (options: IAvailableDateOptions): Date | undefined => {\n  const { targetDate, initialDate, direction, ...restrictedDateOptions } = options;\n  let availableDate = targetDate;\n  // if the target date is available, return it immediately\n  if (!isRestrictedDate(targetDate, restrictedDateOptions)) {\n    return targetDate;\n  }\n\n  while (\n    compareDatePart(initialDate, availableDate) !== 0 &&\n    isRestrictedDate(availableDate, restrictedDateOptions) &&\n    !isAfterMaxDate(availableDate, restrictedDateOptions) &&\n    !isBeforeMinDate(availableDate, restrictedDateOptions)\n  ) {\n    availableDate = addDays(availableDate, direction);\n  }\n\n  if (compareDatePart(initialDate, availableDate) !== 0 && !isRestrictedDate(availableDate, restrictedDateOptions)) {\n    return availableDate;\n  }\n\n  return undefined;\n};\n"],"mappings":";;;;;;AAEA,IAAAA,iBAAA,GAAAC,OAAA;AAEA,IAAAC,eAAA,GAAAD,OAAA;AAEA,IAAAE,gBAAA,GAAAF,OAAA;AACA,IAAAG,SAAA,GAAAH,OAAA;AAAgE,IAAAI,SAAA;AAEhE;AACA;AACA;AACA;AACO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,OAA8B,EAAuB;EACrF,IAAQC,UAAU,GAAuDD,OAAO,CAAxEC,UAAU;IAAEC,WAAW,GAA0CF,OAAO,CAA5DE,WAAW;IAAEC,SAAS,GAA+BH,OAAO,CAA/CG,SAAS;IAAKC,qBAAqB,OAAAC,8BAAA,CAAAC,OAAA,EAAKN,OAAO,EAAAF,SAAA;EAChF,IAAIS,aAAa,GAAGN,UAAU;EAC9B;EACA,IAAI,CAAC,IAAAO,kCAAgB,EAACP,UAAU,EAAEG,qBAAqB,CAAC,EAAE;IACxD,OAAOH,UAAU;EACnB;EAEA,OACE,IAAAQ,yBAAe,EAACP,WAAW,EAAEK,aAAa,CAAC,KAAK,CAAC,IACjD,IAAAC,kCAAgB,EAACD,aAAa,EAAEH,qBAAqB,CAAC,IACtD,CAAC,IAAAM,8BAAc,EAACH,aAAa,EAAEH,qBAAqB,CAAC,IACrD,CAAC,IAAAO,gCAAe,EAACJ,aAAa,EAAEH,qBAAqB,CAAC,EACtD;IACAG,aAAa,GAAG,IAAAK,iBAAO,EAACL,aAAa,EAAEJ,SAAS,CAAC;EACnD;EAEA,IAAI,IAAAM,yBAAe,EAACP,WAAW,EAAEK,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,IAAAC,kCAAgB,EAACD,aAAa,EAAEH,qBAAqB,CAAC,EAAE;IAChH,OAAOG,aAAa;EACtB;EAEA,OAAOM,SAAS;AAClB,CAAC;AAACC,OAAA,CAAAf,iBAAA,GAAAA,iBAAA"}