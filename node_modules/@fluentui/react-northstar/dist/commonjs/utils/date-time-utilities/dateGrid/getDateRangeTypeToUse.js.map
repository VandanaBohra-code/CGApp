{"version":3,"file":"getDateRangeTypeToUse.js","names":["_dateValues","require","_isContiguous","getDateRangeTypeToUse","dateRangeType","workWeekDays","firstDayOfWeek","DateRangeType","WorkWeek","isContiguous","length","Week","exports"],"sources":["utils/date-time-utilities/dateGrid/getDateRangeTypeToUse.ts"],"sourcesContent":["import { DateRangeType, DayOfWeek } from '../dateValues/dateValues';\nimport { isContiguous } from './isContiguous';\n/**\n * Return corrected date range type, given `dateRangeType` and list of working days.\n * For non-contiguous working days and working week range type, returns general week range type.\n * For other cases returns input date range type.\n * @param dateRangeType - input type of range\n * @param workWeekDays - list of working days in a week\n */\nexport const getDateRangeTypeToUse = (\n  dateRangeType: DateRangeType,\n  workWeekDays: DayOfWeek[] | undefined,\n  firstDayOfWeek: DayOfWeek,\n): DateRangeType => {\n  if (workWeekDays && dateRangeType === DateRangeType.WorkWeek) {\n    if (!isContiguous(workWeekDays, true, firstDayOfWeek) || workWeekDays.length === 0) {\n      return DateRangeType.Week;\n    }\n  }\n\n  return dateRangeType;\n};\n"],"mappings":";;;;AAAA,IAAAA,WAAA,GAAAC,OAAA;AACA,IAAAC,aAAA,GAAAD,OAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAME,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAChCC,aAA4B,EAC5BC,YAAqC,EACrCC,cAAyB,EACP;EAClB,IAAID,YAAY,IAAID,aAAa,KAAKG,yBAAa,CAACC,QAAQ,EAAE;IAC5D,IAAI,CAAC,IAAAC,0BAAY,EAACJ,YAAY,EAAE,IAAI,EAAEC,cAAc,CAAC,IAAID,YAAY,CAACK,MAAM,KAAK,CAAC,EAAE;MAClF,OAAOH,yBAAa,CAACI,IAAI;IAC3B;EACF;EAEA,OAAOP,aAAa;AACtB,CAAC;AAACQ,OAAA,CAAAT,qBAAA,GAAAA,qBAAA"}