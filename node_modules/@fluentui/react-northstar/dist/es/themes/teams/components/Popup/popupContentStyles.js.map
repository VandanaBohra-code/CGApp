{"version":3,"file":"popupContentStyles.js","names":["getContainerStyles","getPointerStyles","popupContentStyles","root","_ref","p","props","v","variables","Object","assign","display","zIndex","pointing","pointerEvents","placement","basePlacement","padding","pointerMargin","autoSize","pointer","_ref2","rtl","backgroundColor","borderColor","borderSize","gap","pointerGap","height","pointerHeight","width","pointerWidth","content","_ref3","background","color","boxShadow","border","borderRadius","overflow"],"sources":["themes/teams/components/Popup/popupContentStyles.ts"],"sourcesContent":["import { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\n\nimport { PopupContentStylesProps } from '../../../../components/Popup/PopupContent';\nimport { PopupContentVariables } from './popupContentVariables';\nimport { getContainerStyles, getPointerStyles } from '../../getPointerStyles';\n\nexport const popupContentStyles: ComponentSlotStylesPrepared<PopupContentStylesProps, PopupContentVariables> = {\n  root: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    display: 'block',\n    zIndex: v.zIndex,\n\n    ...(p.pointing && {\n      pointerEvents: 'none',\n      ...getContainerStyles({\n        placement: p.basePlacement,\n        padding: v.pointerMargin,\n      }),\n    }),\n\n    ...(p.autoSize && {\n      // when autoSize is true, root will have inline style maxWidth and maxHeight set by popper\n      display: 'flex',\n    }),\n  }),\n\n  pointer: ({ props: p, variables: v, rtl }): ICSSInJSStyle =>\n    getPointerStyles({\n      backgroundColor: v.backgroundColor,\n      borderColor: v.borderColor,\n      borderSize: v.borderSize,\n      gap: v.pointerGap,\n      padding: v.pointerMargin,\n      height: v.pointerHeight,\n      width: v.pointerWidth,\n\n      placement: p.basePlacement,\n      rtl,\n    }),\n\n  content: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    display: 'block',\n    background: v.backgroundColor,\n    color: v.color,\n    boxShadow: v.boxShadow,\n\n    border: `${v.borderSize} solid ${v.borderColor}`,\n    borderRadius: v.borderRadius,\n\n    padding: v.padding,\n\n    ...(p.pointing && {\n      pointerEvents: 'all',\n    }),\n\n    ...(p.autoSize && {\n      overflow: 'auto',\n    }),\n  }),\n};\n"],"mappings":"AAIA,SAASA,kBAAkB,EAAEC,gBAAgB,QAAQ,wBAAwB;AAE7E,OAAO,IAAMC,kBAA+F,GAAG;EAC7GC,IAAI,EAAE,SAAAA,KAAAC,IAAA;IAAA,IAAUC,CAAC,GAAAD,IAAA,CAARE,KAAK;MAAgBC,CAAC,GAAAH,IAAA,CAAZI,SAAS;IAAA,OAAAC,MAAA,CAAAC,MAAA;MAC1BC,OAAO,EAAE,OAAO;MAChBC,MAAM,EAAEL,CAAC,CAACK;IAAM,GAEZP,CAAC,CAACQ,QAAQ,IAAAJ,MAAA,CAAAC,MAAA;MACZI,aAAa,EAAE;IAAM,GAClBd,kBAAkB,CAAC;MACpBe,SAAS,EAAEV,CAAC,CAACW,aAAa;MAC1BC,OAAO,EAAEV,CAAC,CAACW;IACb,CAAC,CAAC,CACH,EAEGb,CAAC,CAACc,QAAQ,IAAI;MAChB;MACAR,OAAO,EAAE;IACX,CAAC;EAAA,CACD;EAEFS,OAAO,EAAE,SAAAA,QAAAC,KAAA;IAAA,IAAUhB,CAAC,GAAAgB,KAAA,CAARf,KAAK;MAAgBC,CAAC,GAAAc,KAAA,CAAZb,SAAS;MAAKc,GAAG,GAAAD,KAAA,CAAHC,GAAG;IAAA,OACrCrB,gBAAgB,CAAC;MACfsB,eAAe,EAAEhB,CAAC,CAACgB,eAAe;MAClCC,WAAW,EAAEjB,CAAC,CAACiB,WAAW;MAC1BC,UAAU,EAAElB,CAAC,CAACkB,UAAU;MACxBC,GAAG,EAAEnB,CAAC,CAACoB,UAAU;MACjBV,OAAO,EAAEV,CAAC,CAACW,aAAa;MACxBU,MAAM,EAAErB,CAAC,CAACsB,aAAa;MACvBC,KAAK,EAAEvB,CAAC,CAACwB,YAAY;MAErBhB,SAAS,EAAEV,CAAC,CAACW,aAAa;MAC1BM,GAAG,EAAHA;IACF,CAAC,CAAC;EAAA;EAEJU,OAAO,EAAE,SAAAA,QAAAC,KAAA;IAAA,IAAU5B,CAAC,GAAA4B,KAAA,CAAR3B,KAAK;MAAgBC,CAAC,GAAA0B,KAAA,CAAZzB,SAAS;IAAA,OAAAC,MAAA,CAAAC,MAAA;MAC7BC,OAAO,EAAE,OAAO;MAChBuB,UAAU,EAAE3B,CAAC,CAACgB,eAAe;MAC7BY,KAAK,EAAE5B,CAAC,CAAC4B,KAAK;MACdC,SAAS,EAAE7B,CAAC,CAAC6B,SAAS;MAEtBC,MAAM,EAAK9B,CAAC,CAACkB,UAAU,eAAUlB,CAAC,CAACiB,WAAa;MAChDc,YAAY,EAAE/B,CAAC,CAAC+B,YAAY;MAE5BrB,OAAO,EAAEV,CAAC,CAACU;IAAO,GAEdZ,CAAC,CAACQ,QAAQ,IAAI;MAChBC,aAAa,EAAE;IACjB,CAAC,EAEGT,CAAC,CAACc,QAAQ,IAAI;MAChBoB,QAAQ,EAAE;IACZ,CAAC;EAAA;AAEL,CAAC"}