{"version":3,"file":"Input.js","names":["inputBehavior","handleRef","Ref","customPropTypes","React","PropTypes","partitionHTMLProps","commonPropTypes","createShorthandFactory","createShorthand","getOrGenerateIdFromShorthand","Box","useAutoControlled","getElementType","useUnhandledProps","useTelemetry","useFluentContext","useStyles","useAccessibility","compose","ExclamationCircleIcon","CheckmarkCircleIcon","CloseIcon","InputLabel","FormFieldBaseContext","inputClassName","inputSlotClassNames","input","icon","Input","props","ref","composeOptions","context","_useTelemetry","displayName","telemetry","setStart","setEnd","className","type","wrapper","disabled","fluid","inverted","inline","clearable","iconPosition","design","styles","variables","required","successIndicator","error","errorIndicator","showSuccessIndicator","label","labelPosition","inputRef","useRef","_React$useContext","useContext","labelId","inputId","current","id","ElementType","unhandledProps","handledProps","_partitionHTMLProps","htmlInputProps","restProps","_useAutoControlled","defaultValue","value","initialValue","setValue","hasValue","length","isShowSuccessIndicatorUndefined","requiredAndSuccessful","hasIcon","_isNil","_useStyles","mapPropsToStyles","mapPropsToInlineStyles","rtl","unstable_props","classes","resolvedStyles","getA11yProps","accessibility","debugName","actionHandlers","clear","e","stopPropagation","nativeEvent","handleOnClear","mapPropsToBehavior","handleIconOverrides","predefinedProps","onClick","focus","_invoke","handleChange","newValue","_get","Object","assign","computeIcon","createElement","outline","labelElement","slots","defaultProps","htmlFor","inputElement","create","children","Fragment","innerRef","control","as","onChange","overrideProps","inputContainer","element","root","propTypes","createCommon","content","bool","oneOfType","string","arrayOf","itemShorthand","oneOf","shorthandAllowingChildren","func","number","wrapperShorthand","Label","Component"],"sources":["components/Input/Input.tsx"],"sourcesContent":["import { Accessibility, inputBehavior, InputBehaviorProps } from '@fluentui/accessibility';\nimport { handleRef, Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\n\nimport {\n  partitionHTMLProps,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  createShorthandFactory,\n  ShorthandFactory,\n  createShorthand,\n  getOrGenerateIdFromShorthand,\n} from '../../utils';\nimport { SupportedIntrinsicInputProps } from '../../utils/htmlPropsUtils';\nimport { ShorthandValue, ComponentEventHandler } from '../../types';\nimport { Box, BoxProps } from '../Box/Box';\nimport {\n  useAutoControlled,\n  getElementType,\n  useUnhandledProps,\n  useTelemetry,\n  useFluentContext,\n  useStyles,\n  useAccessibility,\n  compose,\n  ComponentWithAs,\n} from '@fluentui/react-bindings';\nimport { ExclamationCircleIcon, CheckmarkCircleIcon, CloseIcon } from '@fluentui/react-icons-northstar';\nimport { InputLabel, InputLabelProps, LabelPosition } from './InputLabel';\nimport { FormFieldBaseContext } from '../Form/utils/formFieldBaseContext';\n\nexport interface InputProps extends UIComponentProps, ChildrenComponentProps, SupportedIntrinsicInputProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<InputBehaviorProps>;\n\n  /** A property that will change the icon on the input and clear the input on click on Cancel. */\n  clearable?: boolean;\n\n  /** The default value of the input. */\n  defaultValue?: string | string[];\n\n  /** An Input can be disabled. */\n  disabled?: boolean;\n\n  /** An input can take the width of its container. */\n  fluid?: boolean;\n\n  /** Optional Icon to display inside the Input. */\n  icon?: ShorthandValue<BoxProps>;\n\n  /** An Input with icon can format the icon to appear at the start or at the end of the input field. */\n  iconPosition?: 'start' | 'end';\n\n  /** An input can be used inline with text. */\n  inline?: boolean;\n\n  /** Shorthand for the input component. */\n  input?: ShorthandValue<BoxProps>;\n\n  /** An input can have inverted colors. */\n  inverted?: boolean;\n\n  /**\n   * Called on change.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onChange?: ComponentEventHandler<InputProps & { value: string }>;\n\n  /** The HTML input type. */\n  type?: string;\n\n  /** (DEPRECATED) Ref for input DOM node. */\n  inputRef?: React.Ref<HTMLElement>;\n\n  /** The value of the input. */\n  value?: string | number;\n\n  /** A label for the input. */\n  label?: ShorthandValue<InputLabelProps>;\n\n  /** Poisition for the label */\n  labelPosition?: LabelPosition;\n\n  /** Shorthand for the wrapper component. */\n  wrapper?: ShorthandValue<BoxProps>;\n\n  /** Input can be required to be valid. */\n  required?: boolean;\n\n  /** Input can have error state */\n  error?: boolean;\n\n  /** Input can have error indicator when error is true */\n  errorIndicator?: ShorthandValue<BoxProps>;\n\n  /** Optional Icon to display inside the Input if required and fulfilled. */\n  successIndicator?: ShorthandValue<BoxProps>;\n\n  /** Indicates whether the successIndicator should be visible. */\n  showSuccessIndicator?: boolean;\n}\n\nexport interface InputSlotClassNames {\n  input: string;\n  icon: string;\n}\n\nexport const inputClassName = 'ui-input';\n\nexport type InputStylesProps = Required<\n  Pick<\n    InputProps,\n    'fluid' | 'inverted' | 'inline' | 'disabled' | 'clearable' | 'iconPosition' | 'error' | 'labelPosition'\n  > & {\n    hasIcon: boolean;\n    hasValue: boolean;\n    requiredAndSuccessful: boolean;\n  }\n>;\n\nexport const inputSlotClassNames: InputSlotClassNames = {\n  input: `${inputClassName}__input`,\n  icon: `${inputClassName}__icon`,\n};\n\n/**\n * An Input is a field used to elicit an input from a user.\n *\n * @accessibility\n * For good screen reader experience set `aria-label` or `aria-labelledby` attribute for input.\n */\nexport const Input = compose<'input', InputProps, InputStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n    const {\n      className,\n      input,\n      type,\n      wrapper,\n      disabled,\n      fluid,\n      inverted,\n      inline,\n      clearable,\n      icon,\n      iconPosition,\n      design,\n      styles,\n      variables,\n      required,\n      successIndicator,\n      error,\n      errorIndicator,\n      showSuccessIndicator,\n      label,\n      labelPosition,\n    } = props;\n\n    const inputRef = React.useRef<HTMLInputElement>();\n\n    const { labelId } = React.useContext(FormFieldBaseContext);\n    const inputId = React.useRef<string>();\n    inputId.current = props.id || getOrGenerateIdFromShorthand('ui-input-', '', inputId.current);\n\n    const ElementType = getElementType(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const [htmlInputProps, restProps] = partitionHTMLProps(unhandledProps);\n    const [value, setValue] = useAutoControlled({\n      defaultValue: props.defaultValue,\n      value: props.value as string,\n      initialValue: '',\n    });\n    const hasValue: boolean = !!value && (value as string)?.length !== 0;\n\n    const isShowSuccessIndicatorUndefined = typeof showSuccessIndicator === 'undefined';\n\n    const requiredAndSuccessful = isShowSuccessIndicatorUndefined\n      ? ((required && hasValue) || showSuccessIndicator) && !error\n      : showSuccessIndicator;\n\n    const hasIcon = !!icon || showSuccessIndicator || (required && isShowSuccessIndicatorUndefined) || !_.isNil(error);\n\n    const { classes, styles: resolvedStyles } = useStyles<InputStylesProps>(composeOptions.displayName, {\n      className: inputClassName,\n      mapPropsToStyles: () => ({\n        fluid,\n        inverted,\n        inline,\n        disabled,\n        clearable,\n        hasIcon,\n        requiredAndSuccessful,\n        iconPosition,\n        hasValue,\n        labelPosition,\n        error,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n      composeOptions,\n      unstable_props: props,\n    });\n\n    const getA11yProps = useAccessibility<InputBehaviorProps>(props.accessibility, {\n      debugName: composeOptions.displayName,\n      actionHandlers: {\n        clear: e => {\n          if (clearable && value !== '') {\n            e.stopPropagation();\n            e.nativeEvent && e.nativeEvent.stopPropagation();\n            handleOnClear(e);\n          }\n        },\n      },\n      mapPropsToBehavior: () => ({\n        disabled,\n        required,\n        error,\n      }),\n      rtl: context.rtl,\n    });\n\n    const handleIconOverrides = predefinedProps => ({\n      onClick: (e: React.MouseEvent) => {\n        if (!disabled) {\n          handleOnClear(e);\n          inputRef.current.focus();\n        }\n\n        _.invoke(predefinedProps, 'onClick', e, props);\n      },\n    });\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (disabled) {\n        return;\n      }\n\n      const newValue = _.get(e, 'target.value');\n\n      _.invoke(props, 'onChange', e, { ...props, value: newValue });\n\n      setValue(newValue);\n    };\n\n    const handleOnClear = (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (clearable) {\n        _.invoke(props, 'onChange', e, { ...props, value: '' });\n        setValue('');\n      }\n    };\n\n    const computeIcon = (): ShorthandValue<BoxProps> => {\n      if (clearable && (value as string)?.length !== 0) {\n        return <CloseIcon outline />;\n      }\n      if (requiredAndSuccessful) {\n        return successIndicator;\n      }\n      if (error) {\n        return errorIndicator;\n      }\n      return icon || null;\n    };\n\n    const labelElement = createShorthand(composeOptions.slots.label, label, {\n      defaultProps: () => ({\n        labelPosition,\n        label,\n        required,\n        htmlFor: inputId.current,\n        hasValue,\n        id: labelId,\n      }),\n    });\n\n    const inputElement = Box.create(\n      {},\n      {\n        defaultProps: () => ({\n          children: (\n            <>\n              <Ref\n                innerRef={(inputElement: HTMLElement) => {\n                  handleRef(inputRef, inputElement);\n                  handleRef(props.inputRef, inputElement);\n                  handleRef(ref, inputElement);\n                }}\n              >\n                {createShorthand(composeOptions.slots.control, input || type, {\n                  defaultProps: () =>\n                    getA11yProps('input', {\n                      ...htmlInputProps,\n                      as: 'input',\n                      disabled,\n                      type,\n                      required,\n                      value: value || '',\n                      id: inputId.current,\n                      className: inputSlotClassNames.input,\n                      styles: resolvedStyles.input,\n                      onChange: handleChange,\n                    }),\n                })}\n              </Ref>\n              {createShorthand(composeOptions.slots.icon, computeIcon(), {\n                defaultProps: () =>\n                  getA11yProps('icon', {\n                    className: inputSlotClassNames.icon,\n                    styles: resolvedStyles.icon,\n                  }),\n                overrideProps: handleIconOverrides,\n              })}\n            </>\n          ),\n          styles: resolvedStyles.inputContainer,\n        }),\n      },\n    );\n\n    const element = Box.create(wrapper, {\n      defaultProps: () =>\n        getA11yProps('root', {\n          className: classes.root,\n          children: (\n            <>\n              {labelElement}\n              {inputElement}\n            </>\n          ),\n          styles: resolvedStyles.root,\n          ...restProps,\n        }),\n      overrideProps: {\n        as: (wrapper && (wrapper as any).as) || ElementType,\n      },\n    });\n    setEnd();\n    return element;\n  },\n  {\n    className: inputClassName,\n    displayName: 'Input',\n    slots: {\n      control: Box,\n      icon: Box,\n      label: InputLabel,\n    },\n    handledProps: [\n      'accessibility',\n      'as',\n      'children',\n      'className',\n      'design',\n      'styles',\n      'variables',\n      'clearable',\n      'defaultValue',\n      'disabled',\n      'fluid',\n      'icon',\n      'iconPosition',\n      'input',\n      'inputRef',\n      'inline',\n      'inverted',\n      'onChange',\n      'type',\n      'value',\n      'wrapper',\n      'required',\n      'successIndicator',\n      'error',\n      'errorIndicator',\n      'showSuccessIndicator',\n      'label',\n      'labelPosition',\n    ],\n  },\n) as ComponentWithAs<'input', InputProps> & {\n  create: ShorthandFactory<InputProps>;\n  Label: typeof InputLabel;\n};\n\nInput.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  clearable: PropTypes.bool,\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  disabled: PropTypes.bool,\n  fluid: PropTypes.bool,\n  label: customPropTypes.itemShorthand,\n  labelPosition: PropTypes.oneOf<LabelPosition>(['inline', 'above', 'inside']),\n  icon: customPropTypes.shorthandAllowingChildren,\n  iconPosition: PropTypes.oneOf(['start', 'end']),\n  input: customPropTypes.itemShorthand,\n  inputRef: customPropTypes.ref,\n  inline: PropTypes.bool,\n  inverted: PropTypes.bool,\n  onChange: PropTypes.func,\n  type: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  wrapper: customPropTypes.wrapperShorthand,\n  required: PropTypes.bool,\n  successIndicator: customPropTypes.shorthandAllowingChildren,\n  error: PropTypes.bool,\n  errorIndicator: customPropTypes.shorthandAllowingChildren,\n  showSuccessIndicator: PropTypes.bool,\n};\n\nInput.defaultProps = {\n  accessibility: inputBehavior,\n  type: 'text',\n  wrapper: {},\n  iconPosition: 'end',\n  errorIndicator: <ExclamationCircleIcon />,\n  successIndicator: <CheckmarkCircleIcon outline />,\n};\n\nInput.Label = InputLabel;\n\nInput.create = createShorthandFactory({ Component: Input });\n"],"mappings":"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"}