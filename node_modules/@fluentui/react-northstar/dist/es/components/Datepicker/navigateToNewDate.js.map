{"version":3,"file":"navigateToNewDate.js","names":["addMonths","findAvailableDate","addDays","addWeeks","isAfterMaxDate","isBeforeMinDate","contstraintNavigatedDate","initialDate","targetDate","direction","restrictedDatesOptions","navigateToDisabledDates","undefined","findAvailableDateOptions","Object","assign","newNavigatedDate","maxDate","minDate","navigateToNewDate","originalDate","kind","step","targetDayDirection"],"sources":["components/Datepicker/navigateToNewDate.tsx"],"sourcesContent":["import {\n  addMonths,\n  IAvailableDateOptions,\n  IRestrictedDatesOptions,\n  findAvailableDate,\n  addDays,\n  addWeeks,\n  isAfterMaxDate,\n  isBeforeMinDate,\n} from '../../utils/date-time-utilities';\n\nexport type NavigationKind = 'Month' | 'Week' | 'Day';\n\nexport const contstraintNavigatedDate = (\n  initialDate: Date,\n  targetDate: Date,\n  direction: number,\n  restrictedDatesOptions: IRestrictedDatesOptions,\n  navigateToDisabledDates: boolean,\n) => {\n  if (!targetDate) {\n    // if we couldn't find a target date at all, do nothing\n    return undefined;\n  }\n\n  const findAvailableDateOptions: IAvailableDateOptions = {\n    initialDate,\n    targetDate,\n    direction,\n    ...(!navigateToDisabledDates && restrictedDatesOptions),\n  };\n\n  let newNavigatedDate = findAvailableDate(findAvailableDateOptions);\n\n  if (!newNavigatedDate) {\n    // if no dates available in initial direction, try going backwards\n    findAvailableDateOptions.direction = -direction;\n    newNavigatedDate = findAvailableDate(findAvailableDateOptions);\n  }\n\n  if (!navigateToDisabledDates && isAfterMaxDate(targetDate, restrictedDatesOptions)) {\n    newNavigatedDate = restrictedDatesOptions.maxDate;\n  } else if (!navigateToDisabledDates && isBeforeMinDate(targetDate, restrictedDatesOptions)) {\n    newNavigatedDate = restrictedDatesOptions.minDate;\n  }\n\n  return newNavigatedDate;\n};\n\nexport const navigateToNewDate = (\n  originalDate: Date,\n  kind: NavigationKind,\n  step: number,\n  restrictedDatesOptions: IRestrictedDatesOptions,\n  navigateToDisabledDates: boolean,\n): Date => {\n  let targetDate: Date | null = null;\n  const targetDayDirection = step > 0 ? 1 : -1;\n\n  switch (kind) {\n    case 'Month': {\n      targetDate = addMonths(originalDate, targetDayDirection);\n      break;\n    }\n    case 'Week': {\n      targetDate = addWeeks(originalDate, targetDayDirection);\n      break;\n    }\n    case 'Day': {\n      targetDate = addDays(originalDate, targetDayDirection);\n      break;\n    }\n    default:\n      break;\n  }\n\n  return contstraintNavigatedDate(originalDate, targetDate, step, restrictedDatesOptions, navigateToDisabledDates);\n};\n"],"mappings":"AAAA,SACEA,SAAS,EAGTC,iBAAiB,EACjBC,OAAO,EACPC,QAAQ,EACRC,cAAc,EACdC,eAAe,QACV,iCAAiC;AAIxC,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAAwBA,CACnCC,WAAiB,EACjBC,UAAgB,EAChBC,SAAiB,EACjBC,sBAA+C,EAC/CC,uBAAgC,EAC7B;EACH,IAAI,CAACH,UAAU,EAAE;IACf;IACA,OAAOI,SAAS;EAClB;EAEA,IAAMC,wBAA+C,GAAAC,MAAA,CAAAC,MAAA;IACnDR,WAAW,EAAXA,WAAW;IACXC,UAAU,EAAVA,UAAU;IACVC,SAAS,EAATA;EAAS,GACL,CAACE,uBAAuB,IAAID,sBAAsB,CACvD;EAED,IAAIM,gBAAgB,GAAGf,iBAAiB,CAACY,wBAAwB,CAAC;EAElE,IAAI,CAACG,gBAAgB,EAAE;IACrB;IACAH,wBAAwB,CAACJ,SAAS,GAAG,CAACA,SAAS;IAC/CO,gBAAgB,GAAGf,iBAAiB,CAACY,wBAAwB,CAAC;EAChE;EAEA,IAAI,CAACF,uBAAuB,IAAIP,cAAc,CAACI,UAAU,EAAEE,sBAAsB,CAAC,EAAE;IAClFM,gBAAgB,GAAGN,sBAAsB,CAACO,OAAO;EACnD,CAAC,MAAM,IAAI,CAACN,uBAAuB,IAAIN,eAAe,CAACG,UAAU,EAAEE,sBAAsB,CAAC,EAAE;IAC1FM,gBAAgB,GAAGN,sBAAsB,CAACQ,OAAO;EACnD;EAEA,OAAOF,gBAAgB;AACzB,CAAC;AAED,OAAO,IAAMG,iBAAiB,GAAG,SAApBA,iBAAiBA,CAC5BC,YAAkB,EAClBC,IAAoB,EACpBC,IAAY,EACZZ,sBAA+C,EAC/CC,uBAAgC,EACvB;EACT,IAAIH,UAAuB,GAAG,IAAI;EAClC,IAAMe,kBAAkB,GAAGD,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EAE5C,QAAQD,IAAI;IACV,KAAK,OAAO;MAAE;QACZb,UAAU,GAAGR,SAAS,CAACoB,YAAY,EAAEG,kBAAkB,CAAC;QACxD;MACF;IACA,KAAK,MAAM;MAAE;QACXf,UAAU,GAAGL,QAAQ,CAACiB,YAAY,EAAEG,kBAAkB,CAAC;QACvD;MACF;IACA,KAAK,KAAK;MAAE;QACVf,UAAU,GAAGN,OAAO,CAACkB,YAAY,EAAEG,kBAAkB,CAAC;QACtD;MACF;IACA;MACE;EACJ;EAEA,OAAOjB,wBAAwB,CAACc,YAAY,EAAEZ,UAAU,EAAEc,IAAI,EAAEZ,sBAAsB,EAAEC,uBAAuB,CAAC;AAClH,CAAC"}