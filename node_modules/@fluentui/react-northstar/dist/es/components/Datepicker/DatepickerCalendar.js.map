{"version":3,"file":"DatepickerCalendar.js","names":["datepickerCalendarBehavior","DateRangeType","DayOfWeek","DAYS_IN_WEEK","FirstWeekOfYear","getDayGrid","DEFAULT_CALENDAR_STRINGS","compareDates","compareDatePart","getMonthStart","getMonthEnd","getStartDateOfWeek","getEndDateOfWeek","getElementType","useAccessibility","useFluentContext","useStyles","useTelemetry","useUnhandledProps","customPropTypes","PropTypes","React","commonPropTypes","createShorthand","DatepickerCalendarGrid","DatepickerCalendarGridRow","DatepickerCalendarHeader","DatepickerCalendarCell","DatepickerCalendarCellButton","DatepickerCalendarHeaderCell","navigateToNewDate","contstraintNavigatedDate","datepickerCalendarClassName","normalizeDateInGrid","date","result","Date","getTime","setDate","DatepickerCalendar","forwardRef","props","ref","context","_useTelemetry","displayName","telemetry","setStart","setEnd","className","design","styles","variables","calendarHeaderCell","calendarCell","calendarCellButton","calendarGrid","calendarGridRow","dateRangeType","header","selectedDate","navigatedDate","firstDayOfWeek","today","formatMonthDayYear","formatMonthYear","shortDays","days","minDate","maxDate","restrictedDates","restrictedDatesOptions","ElementType","unhandledProps","handledProps","updateNavigatedDate","shouldFocusInDayGrid","setShouldFocusInDayGrid","setGridNavigatedDate","getA11yProps","accessibility","debugName","actionHandlers","addWeek","e","preventDefault","newNavigatedDate","gridNavigatedDate","subtractWeek","addDay","subtractDay","moveToStartOfWeek","targetDate","moveToEndOfWeek","moveToStartOfColumn","_find2","targetDayOfWeek","getDay","_find","visibleGrid","day","originalDate","moveToEndOfColumn","_find3","length","rtl","_React$useState","useState","_React$useState2","normalizedGridDate","setNormalizedGridDate","_React$useState3","_useStyles","mapPropsToInlineStyles","classes","useMemo","dayGridOptions","weeksToShow","firstWeekOfYear","daysToSelectInDayView","showWeekNumbers","workWeekDays","grid","slice","useEffect","newNormalizedDate","gridContainsNavigatedDate","find","week","dateFormatting","months","shortMonths","focusDateRef","useRef","changeMonth","nextMonth","prevMonthOutOfBounds","nextMonthOutOfBounds","_focusDateRef$current","current","focus","renderCell","content","defaultProps","_props$today","key","selected","isSelected","disabled","isInBounds","quiet","isInMonth","renderCellButton","dateRange","_props$today2","overrideProps","predefinedProps","onFocus","_invoke","onClick","Object","assign","value","selectedDateRange","Day","renderWeekRow","_map","element","createElement","root","label","disabledNextButton","disabledPreviousButton","prevMonthAriaLabel","nextMonthAriaLabel","onPreviousClick","data","onNextClick","Fragment","children","_times","dayNumber","isRowSelectionActive","Week","propTypes","createCommon","itemShorthand","onDateChange","func","instanceOf","arrayOf","oneOf","keys","map","name","number","bool","formatDay","formatYear","parseDate","string","isRequiredErrorMessage","invalidInputErrorMessage","isOutOfBoundsErrorMessage","openCalendarTitle","inputPlaceholder","prevYearAriaLabel","nextYearAriaLabel","prevYearRangeAriaLabel","nextYearRangeAriaLabel","monthPickerHeaderAriaLabel","yearPickerHeaderAriaLabel","closeButtonAriaLabel","weekNumberFormatString","selectedDateFormatString","todayDateFormatString","inputAriaLabel","inputBoundedFormatString","inputMinBoundedFormatString","inputMaxBoundedFormatString","Monday","FirstDay"],"sources":["components/Datepicker/DatepickerCalendar.tsx"],"sourcesContent":["import { Accessibility, datepickerCalendarBehavior, DatepickerCalendarBehaviorProps } from '@fluentui/accessibility';\nimport {\n  DateRangeType,\n  DayOfWeek,\n  DAYS_IN_WEEK,\n  FirstWeekOfYear,\n  getDayGrid,\n  IDay,\n  DEFAULT_CALENDAR_STRINGS,\n  ICalendarStrings,\n  IDayGridOptions,\n  IDateGridStrings,\n  IRestrictedDatesOptions,\n  compareDates,\n  compareDatePart,\n  getMonthStart,\n  getMonthEnd,\n  getStartDateOfWeek,\n  getEndDateOfWeek,\n} from '../../utils/date-time-utilities';\nimport {\n  ForwardRefWithAs,\n  getElementType,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { ComponentEventHandler, FluentComponentStaticProps, ShorthandValue } from '../../types';\nimport { commonPropTypes, createShorthand, UIComponentProps } from '../../utils';\nimport { DatepickerCalendarGrid, DatepickerCalendarGridProps } from './DatepickerCalendarGrid';\nimport { DatepickerCalendarGridRow, DatepickerCalendarGridRowProps } from './DatepickerCalendarGridRow';\nimport { DatepickerCalendarHeader, DatepickerCalendarHeaderProps } from './DatepickerCalendarHeader';\nimport { DatepickerCalendarCellProps, DatepickerCalendarCell } from './DatepickerCalendarCell';\nimport { DatepickerCalendarCellButtonProps, DatepickerCalendarCellButton } from './DatepickerCalendarCellButton';\nimport { DatepickerCalendarHeaderCellProps, DatepickerCalendarHeaderCell } from './DatepickerCalendarHeaderCell';\nimport { navigateToNewDate, contstraintNavigatedDate } from './navigateToNewDate';\n\nexport interface DatepickerCalendarProps extends UIComponentProps, Partial<ICalendarStrings>, Partial<IDayGridOptions> {\n  /** Calendar can have header. */\n  header?: ShorthandValue<DatepickerCalendarHeaderProps>;\n\n  /** A render function to customize how cells are rendered in the Calendar. */\n  calendarCell?: ShorthandValue<DatepickerCalendarCellProps>;\n\n  /** A render function to customize how cell's buttons are rendered in the Calendar. */\n  calendarCellButton?: ShorthandValue<DatepickerCalendarCellButtonProps>;\n\n  /** A render function to customize how header cells are rendered in the Calendar. */\n  calendarHeaderCell?: ShorthandValue<DatepickerCalendarHeaderCellProps>;\n\n  /** A render function to customize how the calendar grid is rendered. */\n  calendarGrid?: ShorthandValue<DatepickerCalendarGridProps>;\n\n  /** A render function to customize how the calendar grid row is rendered. */\n  calendarGridRow?: ShorthandValue<DatepickerCalendarGridRowProps>;\n\n  /**\n   * The currently selected date range, currently only supports week.\n   */\n  selectedDateRange?: Date[];\n\n  /**\n   * The currently selected date.\n   */\n  selectedDate?: Date;\n  /**\n   * The currently navigated date.\n   */\n  navigatedDate?: Date;\n\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<DatepickerCalendarBehaviorProps>;\n\n  /**\n   * Called on change of the date.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onDateChange?: ComponentEventHandler<DatepickerCalendarProps & { value: IDay }>;\n}\n\nexport type DatepickerCalendarStylesProps = never;\n\nexport const datepickerCalendarClassName = 'ui-datepicker__calendar';\n\nconst normalizeDateInGrid = (date: Date): Date => {\n  const result = new Date(date.getTime());\n  result.setDate(1);\n  return result;\n};\n\n/**\n * A DatepickerCalendar is used to display dates in sematically grouped way.\n */\nexport const DatepickerCalendar = React.forwardRef<HTMLDivElement, DatepickerCalendarProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(DatepickerCalendar.displayName, context.telemetry);\n  setStart();\n\n  const {\n    className,\n    design,\n    styles,\n    variables,\n    calendarHeaderCell,\n    calendarCell,\n    calendarCellButton,\n    calendarGrid,\n    calendarGridRow,\n    dateRangeType,\n    header,\n    selectedDate,\n    navigatedDate,\n    firstDayOfWeek,\n    today,\n    formatMonthDayYear,\n    formatMonthYear,\n    shortDays,\n    days,\n    minDate,\n    maxDate,\n    restrictedDates,\n  } = props;\n\n  const restrictedDatesOptions: IRestrictedDatesOptions = {\n    minDate,\n    maxDate,\n    restrictedDates,\n  };\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(DatepickerCalendar.handledProps, props);\n\n  const updateNavigatedDate = (date: Date) => {\n    if (!!date) {\n      if (!shouldFocusInDayGrid) {\n        setShouldFocusInDayGrid(true);\n      }\n      setGridNavigatedDate(date);\n    }\n  };\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: DatepickerCalendar.displayName,\n    actionHandlers: {\n      addWeek: e => {\n        e.preventDefault();\n        const newNavigatedDate = navigateToNewDate(gridNavigatedDate, 'Week', 1, restrictedDatesOptions, true);\n        updateNavigatedDate(newNavigatedDate);\n      },\n      subtractWeek: e => {\n        e.preventDefault();\n        const newNavigatedDate = navigateToNewDate(gridNavigatedDate, 'Week', -1, restrictedDatesOptions, true);\n        updateNavigatedDate(newNavigatedDate);\n      },\n      addDay: e => {\n        e.preventDefault();\n        const newNavigatedDate = navigateToNewDate(gridNavigatedDate, 'Day', 1, restrictedDatesOptions, true);\n        updateNavigatedDate(newNavigatedDate);\n      },\n      subtractDay: e => {\n        e.preventDefault();\n        const newNavigatedDate = navigateToNewDate(gridNavigatedDate, 'Day', -1, restrictedDatesOptions, true);\n        updateNavigatedDate(newNavigatedDate);\n      },\n      moveToStartOfWeek: e => {\n        e.preventDefault();\n        const targetDate = getStartDateOfWeek(gridNavigatedDate, firstDayOfWeek);\n        const newNavigatedDate = contstraintNavigatedDate(\n          gridNavigatedDate,\n          targetDate,\n          -1,\n          restrictedDatesOptions,\n          true,\n        );\n\n        updateNavigatedDate(newNavigatedDate);\n      },\n      moveToEndOfWeek: e => {\n        e.preventDefault();\n        const targetDate = getEndDateOfWeek(gridNavigatedDate, firstDayOfWeek);\n        const newNavigatedDate = contstraintNavigatedDate(\n          gridNavigatedDate,\n          targetDate,\n          -1,\n          restrictedDatesOptions,\n          true,\n        );\n\n        updateNavigatedDate(newNavigatedDate);\n      },\n      moveToStartOfColumn: e => {\n        e.preventDefault();\n        const targetDayOfWeek = gridNavigatedDate.getDay();\n        const targetDate = _.find(visibleGrid[0], day => day.originalDate.getDay() === targetDayOfWeek)?.originalDate;\n\n        const newNavigatedDate = contstraintNavigatedDate(\n          gridNavigatedDate,\n          targetDate,\n          -1,\n          restrictedDatesOptions,\n          true,\n        );\n\n        updateNavigatedDate(newNavigatedDate);\n      },\n      moveToEndOfColumn: e => {\n        e.preventDefault();\n        const targetDayOfWeek = gridNavigatedDate.getDay();\n        const targetDate = _.find(\n          visibleGrid[visibleGrid.length - 1],\n          day => day.originalDate.getDay() === targetDayOfWeek,\n        )?.originalDate;\n\n        const newNavigatedDate = contstraintNavigatedDate(\n          gridNavigatedDate,\n          targetDate,\n          -1,\n          restrictedDatesOptions,\n          true,\n        );\n\n        updateNavigatedDate(newNavigatedDate);\n      },\n    },\n    rtl: context.rtl,\n  });\n\n  const [gridNavigatedDate, setGridNavigatedDate] = React.useState<Date>(\n    () => new Date((navigatedDate || today || new Date()).getTime()),\n  );\n  const [normalizedGridDate, setNormalizedGridDate] = React.useState<Date>(() =>\n    normalizeDateInGrid(gridNavigatedDate),\n  );\n\n  const [shouldFocusInDayGrid, setShouldFocusInDayGrid] = React.useState<boolean>(true);\n\n  const { classes } = useStyles<DatepickerCalendarStylesProps>(DatepickerCalendar.displayName, {\n    className: datepickerCalendarClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const visibleGrid = React.useMemo<IDay[][]>(() => {\n    const dayGridOptions: IDayGridOptions = {\n      selectedDate,\n      navigatedDate: normalizedGridDate,\n      weeksToShow: props.weeksToShow,\n      firstDayOfWeek: props.firstDayOfWeek,\n      firstWeekOfYear: props.firstWeekOfYear,\n      dateRangeType: props.dateRangeType,\n      daysToSelectInDayView: props.daysToSelectInDayView,\n      today: props.today,\n      showWeekNumbers: props.showWeekNumbers,\n      workWeekDays: props.workWeekDays,\n      minDate: props.minDate,\n      maxDate: props.maxDate,\n      restrictedDates: props.restrictedDates,\n    };\n    const grid = getDayGrid(dayGridOptions);\n    return grid.slice(1, grid.length - 1); // slicing off first and last weeks, cause we don't use them for transitions\n  }, [selectedDate, normalizedGridDate, props]);\n\n  React.useEffect(() => {\n    const newNormalizedDate = normalizeDateInGrid(gridNavigatedDate);\n\n    if (compareDatePart(newNormalizedDate, normalizedGridDate)) {\n      // Do not change the grid immediately the month changes but only once the date stops being visible.\n      const gridContainsNavigatedDate = visibleGrid.find(week =>\n        week.find(day => compareDatePart(day.originalDate, gridNavigatedDate) === 0),\n      );\n      if (!gridContainsNavigatedDate) {\n        setNormalizedGridDate(newNormalizedDate);\n      }\n    }\n  }, [gridNavigatedDate, visibleGrid, normalizedGridDate]);\n\n  const dateFormatting: IDateGridStrings = {\n    months: props.months,\n    shortMonths: props.shortMonths,\n    days: props.days,\n    shortDays: props.shortDays,\n  };\n\n  const focusDateRef = React.useRef(null);\n\n  const changeMonth = (nextMonth: boolean) => {\n    const newNavigatedDate = navigateToNewDate(\n      normalizedGridDate,\n      'Month',\n      nextMonth ? 1 : -1,\n      restrictedDatesOptions,\n      true,\n    );\n    if (!!newNavigatedDate) {\n      setGridNavigatedDate(newNavigatedDate);\n      setShouldFocusInDayGrid(false);\n      setNormalizedGridDate(normalizeDateInGrid(newNavigatedDate));\n    }\n  };\n\n  const prevMonthOutOfBounds = minDate ? compareDatePart(minDate, getMonthStart(normalizedGridDate)) >= 0 : false;\n  const nextMonthOutOfBounds = maxDate ? compareDatePart(getMonthEnd(normalizedGridDate), maxDate) >= 0 : false;\n  React.useEffect(() => {\n    if (shouldFocusInDayGrid) {\n      focusDateRef.current?.focus();\n    }\n  }, [gridNavigatedDate, normalizedGridDate, shouldFocusInDayGrid]);\n\n  const renderCell = (day: IDay, content) =>\n    createShorthand(DatepickerCalendarCell, calendarCell, {\n      defaultProps: () =>\n        getA11yProps('calendarCell', {\n          content,\n          key: day.key,\n          selected: day.isSelected,\n          disabled: !day.isInBounds,\n          quiet: !day.isInMonth,\n          today: compareDates(day.originalDate, props.today ?? new Date()),\n        }),\n    });\n\n  const renderCellButton = (day: IDay, dateRange: IDay[]) =>\n    createShorthand(DatepickerCalendarCellButton, calendarCellButton, {\n      defaultProps: () =>\n        getA11yProps('calendarCell', {\n          content: day.date,\n          'aria-label': formatMonthDayYear(day.originalDate, dateFormatting),\n          selected: day.isSelected,\n          disabled: !day.isInBounds,\n          quiet: !day.isInMonth,\n          today: compareDates(day.originalDate, props.today ?? new Date()),\n        }),\n      overrideProps: (\n        predefinedProps: DatepickerCalendarCellButtonProps & { ref: React.Ref<HTMLButtonElement> },\n      ): DatepickerCalendarCellButtonProps & { ref: React.Ref<HTMLButtonElement> } => ({\n        onFocus: e => {\n          setGridNavigatedDate(day.originalDate);\n          _.invoke(predefinedProps, 'onFocus', e, predefinedProps);\n        },\n        onClick: e => {\n          _.invoke(props, 'onDateChange', e, {\n            ...props,\n            value: day,\n            selectedDateRange: dateRangeType !== DateRangeType.Day ? dateRange : [day],\n          });\n          _.invoke(predefinedProps, 'onClick', e, predefinedProps);\n        },\n        ref: compareDates(gridNavigatedDate, day.originalDate) ? focusDateRef : null,\n      }),\n    });\n  const renderWeekRow = (week: IDay[]) => _.map(week, (day: IDay) => renderCell(day, renderCellButton(day, week)));\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...unhandledProps,\n      })}\n    >\n      {createShorthand(DatepickerCalendarHeader, header, {\n        defaultProps: () => ({\n          label: formatMonthYear(normalizedGridDate, dateFormatting),\n          'aria-label': formatMonthYear(normalizedGridDate, dateFormatting),\n          disabledNextButton: nextMonthOutOfBounds,\n          disabledPreviousButton: prevMonthOutOfBounds,\n          prevMonthAriaLabel: props.prevMonthAriaLabel,\n          nextMonthAriaLabel: props.nextMonthAriaLabel,\n        }),\n        overrideProps: (predefinedProps: DatepickerCalendarHeaderProps): DatepickerCalendarHeaderProps => ({\n          onPreviousClick: (e, data) => {\n            changeMonth(false);\n            _.invoke(predefinedProps, 'onPreviousClick', e, data);\n          },\n          onNextClick: (e, data) => {\n            changeMonth(true);\n            _.invoke(predefinedProps, 'onNextClick', e, data);\n          },\n        }),\n      })}\n      {createShorthand(DatepickerCalendarGrid, calendarGrid, {\n        defaultProps: () =>\n          getA11yProps('calendarGrid', {\n            content: (\n              <>\n                <thead>\n                  {createShorthand(DatepickerCalendarGridRow, calendarGridRow, {\n                    defaultProps: () =>\n                      getA11yProps('calendarGridRow', {\n                        children: _.times(DAYS_IN_WEEK, dayNumber =>\n                          createShorthand(DatepickerCalendarHeaderCell, calendarHeaderCell, {\n                            defaultProps: () =>\n                              getA11yProps('calendarHeaderCell', {\n                                'aria-label': days[(dayNumber + firstDayOfWeek) % DAYS_IN_WEEK],\n                                content: shortDays[(dayNumber + firstDayOfWeek) % DAYS_IN_WEEK],\n                                key: dayNumber,\n                              }),\n                          }),\n                        ),\n                      }),\n                  })}\n                </thead>\n                <tbody>\n                  {_.map(visibleGrid, week =>\n                    createShorthand(DatepickerCalendarGridRow, calendarGridRow, {\n                      defaultProps: () =>\n                        getA11yProps('calendarGridRow', {\n                          children: renderWeekRow(week),\n                          isRowSelectionActive: dateRangeType === DateRangeType.Week,\n                          key: week[0].key,\n                        }),\n                    }),\n                  )}\n                </tbody>\n              </>\n            ),\n          }),\n      })}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n}) as unknown as ForwardRefWithAs<'div', HTMLDivElement, DatepickerCalendarProps> &\n  FluentComponentStaticProps<DatepickerCalendarProps>;\n\nDatepickerCalendar.displayName = 'DatepickerCalendar';\n\nDatepickerCalendar.propTypes = {\n  ...commonPropTypes.createCommon(),\n  calendarCell: customPropTypes.itemShorthand,\n  calendarCellButton: customPropTypes.itemShorthand,\n  calendarHeaderCell: customPropTypes.itemShorthand,\n  header: customPropTypes.itemShorthand,\n  calendarGrid: customPropTypes.itemShorthand,\n  calendarGridRow: customPropTypes.itemShorthand,\n  onDateChange: PropTypes.func,\n  selectedDate: PropTypes.instanceOf(Date),\n  navigatedDate: PropTypes.instanceOf(Date),\n\n  minDate: PropTypes.instanceOf(Date),\n  maxDate: PropTypes.instanceOf(Date),\n  restrictedDates: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n\n  firstDayOfWeek: PropTypes.oneOf(Object.keys(DayOfWeek).map(name => DayOfWeek[name])),\n  firstWeekOfYear: PropTypes.oneOf(Object.keys(FirstWeekOfYear).map(name => FirstWeekOfYear[name])),\n  dateRangeType: PropTypes.oneOf(Object.keys(DateRangeType).map(name => DateRangeType[name])),\n  daysToSelectInDayView: PropTypes.number,\n  today: PropTypes.instanceOf(Date),\n  showWeekNumbers: PropTypes.bool,\n  workWeekDays: PropTypes.arrayOf(PropTypes.oneOf(Object.keys(DayOfWeek).map(name => DayOfWeek[name]))),\n  weeksToShow: PropTypes.number,\n\n  formatDay: PropTypes.func,\n  formatYear: PropTypes.func,\n  formatMonthDayYear: PropTypes.func,\n  formatMonthYear: PropTypes.func,\n\n  parseDate: PropTypes.func,\n\n  months: PropTypes.arrayOf(PropTypes.string),\n  shortMonths: PropTypes.arrayOf(PropTypes.string),\n  days: PropTypes.arrayOf(PropTypes.string),\n  shortDays: PropTypes.arrayOf(PropTypes.string),\n\n  isRequiredErrorMessage: PropTypes.string,\n  invalidInputErrorMessage: PropTypes.string,\n  isOutOfBoundsErrorMessage: PropTypes.string,\n  openCalendarTitle: PropTypes.string,\n  inputPlaceholder: PropTypes.string,\n  prevMonthAriaLabel: PropTypes.string,\n  nextMonthAriaLabel: PropTypes.string,\n  prevYearAriaLabel: PropTypes.string,\n  nextYearAriaLabel: PropTypes.string,\n  prevYearRangeAriaLabel: PropTypes.string,\n  nextYearRangeAriaLabel: PropTypes.string,\n  monthPickerHeaderAriaLabel: PropTypes.string,\n  yearPickerHeaderAriaLabel: PropTypes.string,\n  closeButtonAriaLabel: PropTypes.string,\n  weekNumberFormatString: PropTypes.string,\n  selectedDateFormatString: PropTypes.string,\n  todayDateFormatString: PropTypes.string,\n\n  inputAriaLabel: PropTypes.string,\n  inputBoundedFormatString: PropTypes.string,\n  inputMinBoundedFormatString: PropTypes.string,\n  inputMaxBoundedFormatString: PropTypes.string,\n};\n\nDatepickerCalendar.defaultProps = {\n  accessibility: datepickerCalendarBehavior,\n  firstDayOfWeek: DayOfWeek.Monday,\n  firstWeekOfYear: FirstWeekOfYear.FirstDay,\n  dateRangeType: DateRangeType.Day,\n  header: {},\n  calendarCell: {},\n  calendarCellButton: {},\n  calendarHeaderCell: {},\n  calendarGrid: {},\n  calendarGridRow: {},\n  ...DEFAULT_CALENDAR_STRINGS,\n};\n\nDatepickerCalendar.handledProps = Object.keys(DatepickerCalendar.propTypes) as any;\n"],"mappings":";;;;AAAA,SAAwBA,0BAA0B,QAAyC,yBAAyB;AACpH,SACEC,aAAa,EACbC,SAAS,EACTC,YAAY,EACZC,eAAe,EACfC,UAAU,EAEVC,wBAAwB,EAKxBC,YAAY,EACZC,eAAe,EACfC,aAAa,EACbC,WAAW,EACXC,kBAAkB,EAClBC,gBAAgB,QACX,iCAAiC;AACxC,SAEEC,cAAc,EACdC,gBAAgB,EAChBC,gBAAgB,EAChBC,SAAS,EACTC,YAAY,EACZC,iBAAiB,QACZ,0BAA0B;AACjC,OAAO,KAAKC,eAAe,MAAM,2BAA2B;AAE5D,OAAO,KAAKC,SAAS,MAAM,YAAY;AACvC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAASC,eAAe,EAAEC,eAAe,QAA0B,aAAa;AAChF,SAASC,sBAAsB,QAAqC,0BAA0B;AAC9F,SAASC,yBAAyB,QAAwC,6BAA6B;AACvG,SAASC,wBAAwB,QAAuC,4BAA4B;AACpG,SAAsCC,sBAAsB,QAAQ,0BAA0B;AAC9F,SAA4CC,4BAA4B,QAAQ,gCAAgC;AAChH,SAA4CC,4BAA4B,QAAQ,gCAAgC;AAChH,SAASC,iBAAiB,EAAEC,wBAAwB,QAAQ,qBAAqB;AAiDjF,OAAO,IAAMC,2BAA2B,GAAG,yBAAyB;AAEpE,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,IAAU,EAAW;EAChD,IAAMC,MAAM,GAAG,IAAIC,IAAI,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC;EACvCF,MAAM,CAACG,OAAO,CAAC,CAAC,CAAC;EACjB,OAAOH,MAAM;AACf,CAAC;;AAED;AACA;AACA;AACA,OAAO,IAAMI,kBAAkB;EAAA,IAAlBA,kBAAkB,gBAAGlB,KAAK,CAACmB,UAAU,CAA0C,UAACC,KAAK,EAAEC,GAAG,EAAK;IAC1G,IAAMC,OAAO,GAAG5B,gBAAgB,CAAC,CAAC;IAClC,IAAA6B,aAAA,GAA6B3B,YAAY,CAACsB,kBAAkB,CAACM,WAAW,EAAEF,OAAO,CAACG,SAAS,CAAC;MAApFC,QAAQ,GAAAH,aAAA,CAARG,QAAQ;MAAEC,MAAM,GAAAJ,aAAA,CAANI,MAAM;IACxBD,QAAQ,CAAC,CAAC;IAEV,IACEE,SAAS,GAsBPR,KAAK,CAtBPQ,SAAS;MACTC,MAAM,GAqBJT,KAAK,CArBPS,MAAM;MACNC,MAAM,GAoBJV,KAAK,CApBPU,MAAM;MACNC,SAAS,GAmBPX,KAAK,CAnBPW,SAAS;MACTC,kBAAkB,GAkBhBZ,KAAK,CAlBPY,kBAAkB;MAClBC,YAAY,GAiBVb,KAAK,CAjBPa,YAAY;MACZC,kBAAkB,GAgBhBd,KAAK,CAhBPc,kBAAkB;MAClBC,YAAY,GAeVf,KAAK,CAfPe,YAAY;MACZC,eAAe,GAcbhB,KAAK,CAdPgB,eAAe;MACfC,aAAa,GAaXjB,KAAK,CAbPiB,aAAa;MACbC,MAAM,GAYJlB,KAAK,CAZPkB,MAAM;MACNC,YAAY,GAWVnB,KAAK,CAXPmB,YAAY;MACZC,aAAa,GAUXpB,KAAK,CAVPoB,aAAa;MACbC,cAAc,GASZrB,KAAK,CATPqB,cAAc;MACdC,KAAK,GAQHtB,KAAK,CARPsB,KAAK;MACLC,kBAAkB,GAOhBvB,KAAK,CAPPuB,kBAAkB;MAClBC,eAAe,GAMbxB,KAAK,CANPwB,eAAe;MACfC,SAAS,GAKPzB,KAAK,CALPyB,SAAS;MACTC,IAAI,GAIF1B,KAAK,CAJP0B,IAAI;MACJC,OAAO,GAGL3B,KAAK,CAHP2B,OAAO;MACPC,OAAO,GAEL5B,KAAK,CAFP4B,OAAO;MACPC,eAAe,GACb7B,KAAK,CADP6B,eAAe;IAGjB,IAAMC,sBAA+C,GAAG;MACtDH,OAAO,EAAPA,OAAO;MACPC,OAAO,EAAPA,OAAO;MACPC,eAAe,EAAfA;IACF,CAAC;IACD,IAAME,WAAW,GAAG3D,cAAc,CAAC4B,KAAK,CAAC;IACzC,IAAMgC,cAAc,GAAGvD,iBAAiB,CAACqB,kBAAkB,CAACmC,YAAY,EAAEjC,KAAK,CAAC;IAEhF,IAAMkC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIzC,IAAU,EAAK;MAC1C,IAAI,CAAC,CAACA,IAAI,EAAE;QACV,IAAI,CAAC0C,oBAAoB,EAAE;UACzBC,uBAAuB,CAAC,IAAI,CAAC;QAC/B;QACAC,oBAAoB,CAAC5C,IAAI,CAAC;MAC5B;IACF,CAAC;IACD,IAAM6C,YAAY,GAAGjE,gBAAgB,CAAC2B,KAAK,CAACuC,aAAa,EAAE;MACzDC,SAAS,EAAE1C,kBAAkB,CAACM,WAAW;MACzCqC,cAAc,EAAE;QACdC,OAAO,EAAE,SAAAA,QAAAC,CAAC,EAAI;UACZA,CAAC,CAACC,cAAc,CAAC,CAAC;UAClB,IAAMC,gBAAgB,GAAGxD,iBAAiB,CAACyD,iBAAiB,EAAE,MAAM,EAAE,CAAC,EAAEhB,sBAAsB,EAAE,IAAI,CAAC;UACtGI,mBAAmB,CAACW,gBAAgB,CAAC;QACvC,CAAC;QACDE,YAAY,EAAE,SAAAA,aAAAJ,CAAC,EAAI;UACjBA,CAAC,CAACC,cAAc,CAAC,CAAC;UAClB,IAAMC,gBAAgB,GAAGxD,iBAAiB,CAACyD,iBAAiB,EAAE,MAAM,EAAE,CAAC,CAAC,EAAEhB,sBAAsB,EAAE,IAAI,CAAC;UACvGI,mBAAmB,CAACW,gBAAgB,CAAC;QACvC,CAAC;QACDG,MAAM,EAAE,SAAAA,OAAAL,CAAC,EAAI;UACXA,CAAC,CAACC,cAAc,CAAC,CAAC;UAClB,IAAMC,gBAAgB,GAAGxD,iBAAiB,CAACyD,iBAAiB,EAAE,KAAK,EAAE,CAAC,EAAEhB,sBAAsB,EAAE,IAAI,CAAC;UACrGI,mBAAmB,CAACW,gBAAgB,CAAC;QACvC,CAAC;QACDI,WAAW,EAAE,SAAAA,YAAAN,CAAC,EAAI;UAChBA,CAAC,CAACC,cAAc,CAAC,CAAC;UAClB,IAAMC,gBAAgB,GAAGxD,iBAAiB,CAACyD,iBAAiB,EAAE,KAAK,EAAE,CAAC,CAAC,EAAEhB,sBAAsB,EAAE,IAAI,CAAC;UACtGI,mBAAmB,CAACW,gBAAgB,CAAC;QACvC,CAAC;QACDK,iBAAiB,EAAE,SAAAA,kBAAAP,CAAC,EAAI;UACtBA,CAAC,CAACC,cAAc,CAAC,CAAC;UAClB,IAAMO,UAAU,GAAGjF,kBAAkB,CAAC4E,iBAAiB,EAAEzB,cAAc,CAAC;UACxE,IAAMwB,gBAAgB,GAAGvD,wBAAwB,CAC/CwD,iBAAiB,EACjBK,UAAU,EACV,CAAC,CAAC,EACFrB,sBAAsB,EACtB,IACF,CAAC;UAEDI,mBAAmB,CAACW,gBAAgB,CAAC;QACvC,CAAC;QACDO,eAAe,EAAE,SAAAA,gBAAAT,CAAC,EAAI;UACpBA,CAAC,CAACC,cAAc,CAAC,CAAC;UAClB,IAAMO,UAAU,GAAGhF,gBAAgB,CAAC2E,iBAAiB,EAAEzB,cAAc,CAAC;UACtE,IAAMwB,gBAAgB,GAAGvD,wBAAwB,CAC/CwD,iBAAiB,EACjBK,UAAU,EACV,CAAC,CAAC,EACFrB,sBAAsB,EACtB,IACF,CAAC;UAEDI,mBAAmB,CAACW,gBAAgB,CAAC;QACvC,CAAC;QACDQ,mBAAmB,EAAE,SAAAA,oBAAAV,CAAC,EAAI;UAAA,IAAAW,MAAA;UACxBX,CAAC,CAACC,cAAc,CAAC,CAAC;UAClB,IAAMW,eAAe,GAAGT,iBAAiB,CAACU,MAAM,CAAC,CAAC;UAClD,IAAML,UAAU,IAAAG,MAAA,GAAGG,KAAA,CAAOC,WAAW,CAAC,CAAC,CAAC,EAAE,UAAAC,GAAG;YAAA,OAAIA,GAAG,CAACC,YAAY,CAACJ,MAAM,CAAC,CAAC,KAAKD,eAAe;UAAA,EAAC,qBAA5ED,MAAA,CAA8EM,YAAY;UAE7G,IAAMf,gBAAgB,GAAGvD,wBAAwB,CAC/CwD,iBAAiB,EACjBK,UAAU,EACV,CAAC,CAAC,EACFrB,sBAAsB,EACtB,IACF,CAAC;UAEDI,mBAAmB,CAACW,gBAAgB,CAAC;QACvC,CAAC;QACDgB,iBAAiB,EAAE,SAAAA,kBAAAlB,CAAC,EAAI;UAAA,IAAAmB,MAAA;UACtBnB,CAAC,CAACC,cAAc,CAAC,CAAC;UAClB,IAAMW,eAAe,GAAGT,iBAAiB,CAACU,MAAM,CAAC,CAAC;UAClD,IAAML,UAAU,IAAAW,MAAA,GAAGL,KAAA,CACjBC,WAAW,CAACA,WAAW,CAACK,MAAM,GAAG,CAAC,CAAC,EACnC,UAAAJ,GAAG;YAAA,OAAIA,GAAG,CAACC,YAAY,CAACJ,MAAM,CAAC,CAAC,KAAKD,eAAe;UAAA,CACtD,CAAC,qBAHkBO,MAAA,CAGhBF,YAAY;UAEf,IAAMf,gBAAgB,GAAGvD,wBAAwB,CAC/CwD,iBAAiB,EACjBK,UAAU,EACV,CAAC,CAAC,EACFrB,sBAAsB,EACtB,IACF,CAAC;UAEDI,mBAAmB,CAACW,gBAAgB,CAAC;QACvC;MACF,CAAC;MACDmB,GAAG,EAAE9D,OAAO,CAAC8D;IACf,CAAC,CAAC;IAEF,IAAAC,eAAA,GAAkDrF,KAAK,CAACsF,QAAQ,CAC9D;QAAA,OAAM,IAAIvE,IAAI,CAAC,CAACyB,aAAa,IAAIE,KAAK,IAAI,IAAI3B,IAAI,CAAC,CAAC,EAAEC,OAAO,CAAC,CAAC,CAAC;MAAA,CAClE,CAAC;MAFMkD,iBAAiB,GAAAmB,eAAA;MAAE5B,oBAAoB,GAAA4B,eAAA;IAG9C,IAAAE,gBAAA,GAAoDvF,KAAK,CAACsF,QAAQ,CAAO;QAAA,OACvE1E,mBAAmB,CAACsD,iBAAiB,CAAC;MAAA,CACxC,CAAC;MAFMsB,kBAAkB,GAAAD,gBAAA;MAAEE,qBAAqB,GAAAF,gBAAA;IAIhD,IAAAG,gBAAA,GAAwD1F,KAAK,CAACsF,QAAQ,CAAU,IAAI,CAAC;MAA9E/B,oBAAoB,GAAAmC,gBAAA;MAAElC,uBAAuB,GAAAkC,gBAAA;IAEpD,IAAAC,UAAA,GAAoBhG,SAAS,CAAgCuB,kBAAkB,CAACM,WAAW,EAAE;QAC3FI,SAAS,EAAEjB,2BAA2B;QACtCiF,sBAAsB,EAAE,SAAAA,uBAAA;UAAA,OAAO;YAC7BhE,SAAS,EAATA,SAAS;YACTC,MAAM,EAANA,MAAM;YACNC,MAAM,EAANA,MAAM;YACNC,SAAS,EAATA;UACF,CAAC;QAAA,CAAC;QACFqD,GAAG,EAAE9D,OAAO,CAAC8D;MACf,CAAC,CAAC;MATMS,OAAO,GAAAF,UAAA,CAAPE,OAAO;IAWf,IAAMf,WAAW,GAAG9E,KAAK,CAAC8F,OAAO,CAAW,YAAM;MAChD,IAAMC,cAA+B,GAAG;QACtCxD,YAAY,EAAZA,YAAY;QACZC,aAAa,EAAEgD,kBAAkB;QACjCQ,WAAW,EAAE5E,KAAK,CAAC4E,WAAW;QAC9BvD,cAAc,EAAErB,KAAK,CAACqB,cAAc;QACpCwD,eAAe,EAAE7E,KAAK,CAAC6E,eAAe;QACtC5D,aAAa,EAAEjB,KAAK,CAACiB,aAAa;QAClC6D,qBAAqB,EAAE9E,KAAK,CAAC8E,qBAAqB;QAClDxD,KAAK,EAAEtB,KAAK,CAACsB,KAAK;QAClByD,eAAe,EAAE/E,KAAK,CAAC+E,eAAe;QACtCC,YAAY,EAAEhF,KAAK,CAACgF,YAAY;QAChCrD,OAAO,EAAE3B,KAAK,CAAC2B,OAAO;QACtBC,OAAO,EAAE5B,KAAK,CAAC4B,OAAO;QACtBC,eAAe,EAAE7B,KAAK,CAAC6B;MACzB,CAAC;MACD,IAAMoD,IAAI,GAAGrH,UAAU,CAAC+G,cAAc,CAAC;MACvC,OAAOM,IAAI,CAACC,KAAK,CAAC,CAAC,EAAED,IAAI,CAAClB,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,EAAE,CAAC5C,YAAY,EAAEiD,kBAAkB,EAAEpE,KAAK,CAAC,CAAC;IAE7CpB,KAAK,CAACuG,SAAS,CAAC,YAAM;MACpB,IAAMC,iBAAiB,GAAG5F,mBAAmB,CAACsD,iBAAiB,CAAC;MAEhE,IAAI/E,eAAe,CAACqH,iBAAiB,EAAEhB,kBAAkB,CAAC,EAAE;QAC1D;QACA,IAAMiB,yBAAyB,GAAG3B,WAAW,CAAC4B,IAAI,CAAC,UAAAC,IAAI;UAAA,OACrDA,IAAI,CAACD,IAAI,CAAC,UAAA3B,GAAG;YAAA,OAAI5F,eAAe,CAAC4F,GAAG,CAACC,YAAY,EAAEd,iBAAiB,CAAC,KAAK,CAAC;UAAA,EAAC;QAAA,CAC9E,CAAC;QACD,IAAI,CAACuC,yBAAyB,EAAE;UAC9BhB,qBAAqB,CAACe,iBAAiB,CAAC;QAC1C;MACF;IACF,CAAC,EAAE,CAACtC,iBAAiB,EAAEY,WAAW,EAAEU,kBAAkB,CAAC,CAAC;IAExD,IAAMoB,cAAgC,GAAG;MACvCC,MAAM,EAAEzF,KAAK,CAACyF,MAAM;MACpBC,WAAW,EAAE1F,KAAK,CAAC0F,WAAW;MAC9BhE,IAAI,EAAE1B,KAAK,CAAC0B,IAAI;MAChBD,SAAS,EAAEzB,KAAK,CAACyB;IACnB,CAAC;IAED,IAAMkE,YAAY,GAAG/G,KAAK,CAACgH,MAAM,CAAC,IAAI,CAAC;IAEvC,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,SAAkB,EAAK;MAC1C,IAAMjD,gBAAgB,GAAGxD,iBAAiB,CACxC+E,kBAAkB,EAClB,OAAO,EACP0B,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,EAClBhE,sBAAsB,EACtB,IACF,CAAC;MACD,IAAI,CAAC,CAACe,gBAAgB,EAAE;QACtBR,oBAAoB,CAACQ,gBAAgB,CAAC;QACtCT,uBAAuB,CAAC,KAAK,CAAC;QAC9BiC,qBAAqB,CAAC7E,mBAAmB,CAACqD,gBAAgB,CAAC,CAAC;MAC9D;IACF,CAAC;IAED,IAAMkD,oBAAoB,GAAGpE,OAAO,GAAG5D,eAAe,CAAC4D,OAAO,EAAE3D,aAAa,CAACoG,kBAAkB,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK;IAC/G,IAAM4B,oBAAoB,GAAGpE,OAAO,GAAG7D,eAAe,CAACE,WAAW,CAACmG,kBAAkB,CAAC,EAAExC,OAAO,CAAC,IAAI,CAAC,GAAG,KAAK;IAC7GhD,KAAK,CAACuG,SAAS,CAAC,YAAM;MACpB,IAAIhD,oBAAoB,EAAE;QAAA,IAAA8D,qBAAA;QACxB,CAAAA,qBAAA,GAAAN,YAAY,CAACO,OAAO,qBAApBD,qBAAA,CAAsBE,KAAK,CAAC,CAAC;MAC/B;IACF,CAAC,EAAE,CAACrD,iBAAiB,EAAEsB,kBAAkB,EAAEjC,oBAAoB,CAAC,CAAC;IAEjE,IAAMiE,UAAU,GAAG,SAAbA,UAAUA,CAAIzC,GAAS,EAAE0C,OAAO;MAAA,OACpCvH,eAAe,CAACI,sBAAsB,EAAE2B,YAAY,EAAE;QACpDyF,YAAY,EAAE,SAAAA,aAAA;UAAA,IAAAC,YAAA;UAAA,OACZjE,YAAY,CAAC,cAAc,EAAE;YAC3B+D,OAAO,EAAPA,OAAO;YACPG,GAAG,EAAE7C,GAAG,CAAC6C,GAAG;YACZC,QAAQ,EAAE9C,GAAG,CAAC+C,UAAU;YACxBC,QAAQ,EAAE,CAAChD,GAAG,CAACiD,UAAU;YACzBC,KAAK,EAAE,CAAClD,GAAG,CAACmD,SAAS;YACrBxF,KAAK,EAAExD,YAAY,CAAC6F,GAAG,CAACC,YAAY,GAAA2C,YAAA,GAAEvG,KAAK,CAACsB,KAAK,YAAAiF,YAAA,GAAI,IAAI5G,IAAI,CAAC,CAAC;UACjE,CAAC,CAAC;QAAA;MACN,CAAC,CAAC;IAAA;IAEJ,IAAMoH,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIpD,GAAS,EAAEqD,SAAiB;MAAA,OACpDlI,eAAe,CAACK,4BAA4B,EAAE2B,kBAAkB,EAAE;QAChEwF,YAAY,EAAE,SAAAA,aAAA;UAAA,IAAAW,aAAA;UAAA,OACZ3E,YAAY,CAAC,cAAc,EAAE;YAC3B+D,OAAO,EAAE1C,GAAG,CAAClE,IAAI;YACjB,YAAY,EAAE8B,kBAAkB,CAACoC,GAAG,CAACC,YAAY,EAAE4B,cAAc,CAAC;YAClEiB,QAAQ,EAAE9C,GAAG,CAAC+C,UAAU;YACxBC,QAAQ,EAAE,CAAChD,GAAG,CAACiD,UAAU;YACzBC,KAAK,EAAE,CAAClD,GAAG,CAACmD,SAAS;YACrBxF,KAAK,EAAExD,YAAY,CAAC6F,GAAG,CAACC,YAAY,GAAAqD,aAAA,GAAEjH,KAAK,CAACsB,KAAK,YAAA2F,aAAA,GAAI,IAAItH,IAAI,CAAC,CAAC;UACjE,CAAC,CAAC;QAAA;QACJuH,aAAa,EAAE,SAAAA,cACbC,eAA0F;UAAA,OACX;YAC/EC,OAAO,EAAE,SAAAA,QAAAzE,CAAC,EAAI;cACZN,oBAAoB,CAACsB,GAAG,CAACC,YAAY,CAAC;cACtCyD,OAAA,CAASF,eAAe,EAAE,SAAS,EAAExE,CAAC,EAAEwE,eAAe,CAAC;YAC1D,CAAC;YACDG,OAAO,EAAE,SAAAA,QAAA3E,CAAC,EAAI;cACZ0E,OAAA,CAASrH,KAAK,EAAE,cAAc,EAAE2C,CAAC,EAAA4E,MAAA,CAAAC,MAAA,KAC5BxH,KAAK;gBACRyH,KAAK,EAAE9D,GAAG;gBACV+D,iBAAiB,EAAEzG,aAAa,KAAKzD,aAAa,CAACmK,GAAG,GAAGX,SAAS,GAAG,CAACrD,GAAG;cAAC,EAC3E,CAAC;cACF0D,OAAA,CAASF,eAAe,EAAE,SAAS,EAAExE,CAAC,EAAEwE,eAAe,CAAC;YAC1D,CAAC;YACDlH,GAAG,EAAEnC,YAAY,CAACgF,iBAAiB,EAAEa,GAAG,CAACC,YAAY,CAAC,GAAG+B,YAAY,GAAG;UAC1E,CAAC;QAAA;MACH,CAAC,CAAC;IAAA;IACJ,IAAMiC,aAAa,GAAG,SAAhBA,aAAaA,CAAIrC,IAAY;MAAA,OAAKsC,IAAA,CAAMtC,IAAI,EAAE,UAAC5B,GAAS;QAAA,OAAKyC,UAAU,CAACzC,GAAG,EAAEoD,gBAAgB,CAACpD,GAAG,EAAE4B,IAAI,CAAC,CAAC;MAAA,EAAC;IAAA;IAEhH,IAAMuC,OAAO,gBACXlJ,KAAA,CAAAmJ,aAAA,CAAChG,WAAW,EACNO,YAAY,CAAC,MAAM,EAAAiF,MAAA,CAAAC,MAAA;MACrBhH,SAAS,EAAEiE,OAAO,CAACuD,IAAI;MACvB/H,GAAG,EAAHA;IAAG,GACA+B,cAAc,CAClB,CAAC,EAEDlD,eAAe,CAACG,wBAAwB,EAAEiC,MAAM,EAAE;MACjDoF,YAAY,EAAE,SAAAA,aAAA;QAAA,OAAO;UACnB2B,KAAK,EAAEzG,eAAe,CAAC4C,kBAAkB,EAAEoB,cAAc,CAAC;UAC1D,YAAY,EAAEhE,eAAe,CAAC4C,kBAAkB,EAAEoB,cAAc,CAAC;UACjE0C,kBAAkB,EAAElC,oBAAoB;UACxCmC,sBAAsB,EAAEpC,oBAAoB;UAC5CqC,kBAAkB,EAAEpI,KAAK,CAACoI,kBAAkB;UAC5CC,kBAAkB,EAAErI,KAAK,CAACqI;QAC5B,CAAC;MAAA,CAAC;MACFnB,aAAa,EAAE,SAAAA,cAACC,eAA8C;QAAA,OAAqC;UACjGmB,eAAe,EAAE,SAAAA,gBAAC3F,CAAC,EAAE4F,IAAI,EAAK;YAC5B1C,WAAW,CAAC,KAAK,CAAC;YAClBwB,OAAA,CAASF,eAAe,EAAE,iBAAiB,EAAExE,CAAC,EAAE4F,IAAI,CAAC;UACvD,CAAC;UACDC,WAAW,EAAE,SAAAA,YAAC7F,CAAC,EAAE4F,IAAI,EAAK;YACxB1C,WAAW,CAAC,IAAI,CAAC;YACjBwB,OAAA,CAASF,eAAe,EAAE,aAAa,EAAExE,CAAC,EAAE4F,IAAI,CAAC;UACnD;QACF,CAAC;MAAA;IACH,CAAC,CAAC,EACDzJ,eAAe,CAACC,sBAAsB,EAAEgC,YAAY,EAAE;MACrDuF,YAAY,EAAE,SAAAA,aAAA;QAAA,OACZhE,YAAY,CAAC,cAAc,EAAE;UAC3B+D,OAAO,eACLzH,KAAA,CAAAmJ,aAAA,CAAAnJ,KAAA,CAAA6J,QAAA,qBACE7J,KAAA,CAAAmJ,aAAA,gBACGjJ,eAAe,CAACE,yBAAyB,EAAEgC,eAAe,EAAE;YAC3DsF,YAAY,EAAE,SAAAA,aAAA;cAAA,OACZhE,YAAY,CAAC,iBAAiB,EAAE;gBAC9BoG,QAAQ,EAAEC,MAAA,CAAQjL,YAAY,EAAE,UAAAkL,SAAS;kBAAA,OACvC9J,eAAe,CAACM,4BAA4B,EAAEwB,kBAAkB,EAAE;oBAChE0F,YAAY,EAAE,SAAAA,aAAA;sBAAA,OACZhE,YAAY,CAAC,oBAAoB,EAAE;wBACjC,YAAY,EAAEZ,IAAI,CAAC,CAACkH,SAAS,GAAGvH,cAAc,IAAI3D,YAAY,CAAC;wBAC/D2I,OAAO,EAAE5E,SAAS,CAAC,CAACmH,SAAS,GAAGvH,cAAc,IAAI3D,YAAY,CAAC;wBAC/D8I,GAAG,EAAEoC;sBACP,CAAC,CAAC;oBAAA;kBACN,CAAC,CAAC;gBAAA,CACJ;cACF,CAAC,CAAC;YAAA;UACN,CAAC,CACI,CAAC,eACRhK,KAAA,CAAAmJ,aAAA,gBACGF,IAAA,CAAMnE,WAAW,EAAE,UAAA6B,IAAI;YAAA,OACtBzG,eAAe,CAACE,yBAAyB,EAAEgC,eAAe,EAAE;cAC1DsF,YAAY,EAAE,SAAAA,aAAA;gBAAA,OACZhE,YAAY,CAAC,iBAAiB,EAAE;kBAC9BoG,QAAQ,EAAEd,aAAa,CAACrC,IAAI,CAAC;kBAC7BsD,oBAAoB,EAAE5H,aAAa,KAAKzD,aAAa,CAACsL,IAAI;kBAC1DtC,GAAG,EAAEjB,IAAI,CAAC,CAAC,CAAC,CAACiB;gBACf,CAAC,CAAC;cAAA;YACN,CAAC,CAAC;UAAA,CACJ,CACK,CACP;QAEN,CAAC,CAAC;MAAA;IACN,CAAC,CACU,CACd;IACDjG,MAAM,CAAC,CAAC;IACR,OAAOuH,OAAO;EAChB,CAAC,CACoD;EAErDhI,kBAAkB,CAACM,WAAW,GAAG,oBAAoB;EAErDN,kBAAkB,CAACiJ,SAAS,GAAAxB,MAAA,CAAAC,MAAA,KACvB3I,eAAe,CAACmK,YAAY,CAAC,CAAC;IACjCnI,YAAY,EAAEnC,eAAe,CAACuK,aAAa;IAC3CnI,kBAAkB,EAAEpC,eAAe,CAACuK,aAAa;IACjDrI,kBAAkB,EAAElC,eAAe,CAACuK,aAAa;IACjD/H,MAAM,EAAExC,eAAe,CAACuK,aAAa;IACrClI,YAAY,EAAErC,eAAe,CAACuK,aAAa;IAC3CjI,eAAe,EAAEtC,eAAe,CAACuK,aAAa;IAC9CC,YAAY,EAAEvK,SAAS,CAACwK,IAAI;IAC5BhI,YAAY,EAAExC,SAAS,CAACyK,UAAU,CAACzJ,IAAI,CAAC;IACxCyB,aAAa,EAAEzC,SAAS,CAACyK,UAAU,CAACzJ,IAAI,CAAC;IAEzCgC,OAAO,EAAEhD,SAAS,CAACyK,UAAU,CAACzJ,IAAI,CAAC;IACnCiC,OAAO,EAAEjD,SAAS,CAACyK,UAAU,CAACzJ,IAAI,CAAC;IACnCkC,eAAe,EAAElD,SAAS,CAAC0K,OAAO,CAAC1K,SAAS,CAACyK,UAAU,CAACzJ,IAAI,CAAC,CAAC;IAE9D0B,cAAc,EAAE1C,SAAS,CAAC2K,KAAK,CAAC/B,MAAM,CAACgC,IAAI,CAAC9L,SAAS,CAAC,CAAC+L,GAAG,CAAC,UAAAC,IAAI;MAAA,OAAIhM,SAAS,CAACgM,IAAI,CAAC;IAAA,EAAC,CAAC;IACpF5E,eAAe,EAAElG,SAAS,CAAC2K,KAAK,CAAC/B,MAAM,CAACgC,IAAI,CAAC5L,eAAe,CAAC,CAAC6L,GAAG,CAAC,UAAAC,IAAI;MAAA,OAAI9L,eAAe,CAAC8L,IAAI,CAAC;IAAA,EAAC,CAAC;IACjGxI,aAAa,EAAEtC,SAAS,CAAC2K,KAAK,CAAC/B,MAAM,CAACgC,IAAI,CAAC/L,aAAa,CAAC,CAACgM,GAAG,CAAC,UAAAC,IAAI;MAAA,OAAIjM,aAAa,CAACiM,IAAI,CAAC;IAAA,EAAC,CAAC;IAC3F3E,qBAAqB,EAAEnG,SAAS,CAAC+K,MAAM;IACvCpI,KAAK,EAAE3C,SAAS,CAACyK,UAAU,CAACzJ,IAAI,CAAC;IACjCoF,eAAe,EAAEpG,SAAS,CAACgL,IAAI;IAC/B3E,YAAY,EAAErG,SAAS,CAAC0K,OAAO,CAAC1K,SAAS,CAAC2K,KAAK,CAAC/B,MAAM,CAACgC,IAAI,CAAC9L,SAAS,CAAC,CAAC+L,GAAG,CAAC,UAAAC,IAAI;MAAA,OAAIhM,SAAS,CAACgM,IAAI,CAAC;IAAA,EAAC,CAAC,CAAC;IACrG7E,WAAW,EAAEjG,SAAS,CAAC+K,MAAM;IAE7BE,SAAS,EAAEjL,SAAS,CAACwK,IAAI;IACzBU,UAAU,EAAElL,SAAS,CAACwK,IAAI;IAC1B5H,kBAAkB,EAAE5C,SAAS,CAACwK,IAAI;IAClC3H,eAAe,EAAE7C,SAAS,CAACwK,IAAI;IAE/BW,SAAS,EAAEnL,SAAS,CAACwK,IAAI;IAEzB1D,MAAM,EAAE9G,SAAS,CAAC0K,OAAO,CAAC1K,SAAS,CAACoL,MAAM,CAAC;IAC3CrE,WAAW,EAAE/G,SAAS,CAAC0K,OAAO,CAAC1K,SAAS,CAACoL,MAAM,CAAC;IAChDrI,IAAI,EAAE/C,SAAS,CAAC0K,OAAO,CAAC1K,SAAS,CAACoL,MAAM,CAAC;IACzCtI,SAAS,EAAE9C,SAAS,CAAC0K,OAAO,CAAC1K,SAAS,CAACoL,MAAM,CAAC;IAE9CC,sBAAsB,EAAErL,SAAS,CAACoL,MAAM;IACxCE,wBAAwB,EAAEtL,SAAS,CAACoL,MAAM;IAC1CG,yBAAyB,EAAEvL,SAAS,CAACoL,MAAM;IAC3CI,iBAAiB,EAAExL,SAAS,CAACoL,MAAM;IACnCK,gBAAgB,EAAEzL,SAAS,CAACoL,MAAM;IAClC3B,kBAAkB,EAAEzJ,SAAS,CAACoL,MAAM;IACpC1B,kBAAkB,EAAE1J,SAAS,CAACoL,MAAM;IACpCM,iBAAiB,EAAE1L,SAAS,CAACoL,MAAM;IACnCO,iBAAiB,EAAE3L,SAAS,CAACoL,MAAM;IACnCQ,sBAAsB,EAAE5L,SAAS,CAACoL,MAAM;IACxCS,sBAAsB,EAAE7L,SAAS,CAACoL,MAAM;IACxCU,0BAA0B,EAAE9L,SAAS,CAACoL,MAAM;IAC5CW,yBAAyB,EAAE/L,SAAS,CAACoL,MAAM;IAC3CY,oBAAoB,EAAEhM,SAAS,CAACoL,MAAM;IACtCa,sBAAsB,EAAEjM,SAAS,CAACoL,MAAM;IACxCc,wBAAwB,EAAElM,SAAS,CAACoL,MAAM;IAC1Ce,qBAAqB,EAAEnM,SAAS,CAACoL,MAAM;IAEvCgB,cAAc,EAAEpM,SAAS,CAACoL,MAAM;IAChCiB,wBAAwB,EAAErM,SAAS,CAACoL,MAAM;IAC1CkB,2BAA2B,EAAEtM,SAAS,CAACoL,MAAM;IAC7CmB,2BAA2B,EAAEvM,SAAS,CAACoL;EAAM,EAC9C;EAEDjK,kBAAkB,CAACwG,YAAY,GAAAiB,MAAA,CAAAC,MAAA;IAC7BjF,aAAa,EAAEhF,0BAA0B;IACzC8D,cAAc,EAAE5D,SAAS,CAAC0N,MAAM;IAChCtG,eAAe,EAAElH,eAAe,CAACyN,QAAQ;IACzCnK,aAAa,EAAEzD,aAAa,CAACmK,GAAG;IAChCzG,MAAM,EAAE,CAAC,CAAC;IACVL,YAAY,EAAE,CAAC,CAAC;IAChBC,kBAAkB,EAAE,CAAC,CAAC;IACtBF,kBAAkB,EAAE,CAAC,CAAC;IACtBG,YAAY,EAAE,CAAC,CAAC;IAChBC,eAAe,EAAE,CAAC;EAAC,GAChBnD,wBAAwB,CAC5B;EAEDiC,kBAAkB,CAACmC,YAAY,GAAGsF,MAAM,CAACgC,IAAI,CAACzJ,kBAAkB,CAACiJ,SAAS,CAAQ;EAAC,OA5ZtEjJ,kBAAkB;AAAA"}