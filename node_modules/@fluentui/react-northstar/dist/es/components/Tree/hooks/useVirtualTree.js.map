{"version":3,"file":"useVirtualTree.js","names":["React","useTree","useVirtualTree","props","baseTree","baseRegisterItemRef","registerItemRef","baseExpandSiblings","expandSiblings","getItemById","getItemRef","visibleItemIds","listRef","useRef","focusIdRef","focusItemById","useCallback","id","_getItemById","itemRef","current","focusIndex","indexOf","_listRef$current","scrollToItem","hasSubtree","focus","_itemRef$firstElement","firstElementChild","node","_getItemById2","_node$firstElementChi","e","useLayoutEffect","_listRef$current2","searchByFirstChar","startIndex","endIndex","char","itemToString","item","content","i","_itemToString","_itemToString$trim","_itemToString$trim$ch","itemFirstChar","trim","charAt","toLowerCase","getToFocusIDByFirstCharacter","idToStartSearch","starIndex","length","toFocusIndex","key","Object","assign"],"sources":["components/Tree/hooks/useVirtualTree.ts"],"sourcesContent":["import * as React from 'react';\nimport { useTree, UseTreeResult, UseTreeOptions } from './useTree';\nimport { ShorthandValue } from '../../../types';\nimport { TreeItemProps } from '../TreeItem';\n\nexport interface UseVirtualTreeOptions extends Omit<UseTreeOptions, 'selectedItemIds' | 'defaultSelectedItemIds'> {\n  /**\n   * A function that converts an item to string. Used for keyboard navigation based on the first letter of an item's text content\n   */\n  itemToString?: (item: ShorthandValue<TreeItemProps>) => string;\n}\n\nexport interface UseVirtualTreeResult extends UseTreeResult {\n  /** ref to be assigned to react-window VariableSizeList/FixedSizeList component */\n  listRef: React.MutableRefObject<any>;\n}\n\n// export our own interface that is similar to react-window VariableSizeList,\n//  to avoid dependency to react-window\nexport interface VariableSizeListRef extends React.Component<any> {\n  scrollTo(scrollOffset: number): void;\n  scrollToItem(index: number, align?: 'auto' | 'smart' | 'center' | 'end' | 'start'): void;\n\n  resetAfterIndex(index: number, shouldForceUpdate?: boolean): void;\n}\n\nexport function useVirtualTree(props: UseVirtualTreeOptions): UseVirtualTreeResult {\n  const baseTree = useTree(props);\n  const {\n    registerItemRef: baseRegisterItemRef,\n    expandSiblings: baseExpandSiblings,\n    getItemById,\n    getItemRef,\n    visibleItemIds,\n  } = baseTree;\n\n  const listRef = React.useRef<VariableSizeListRef>();\n  const focusIdRef = React.useRef<string>();\n\n  const focusItemById = React.useCallback(\n    (id: string) => {\n      const itemRef = getItemRef(id);\n\n      // item is not mounted yet\n      if (itemRef == null) {\n        // set focusIdRef so item can be focused on mount; then scroll to item\n        focusIdRef.current = id;\n        const focusIndex = visibleItemIds.indexOf(focusIdRef.current);\n        if (focusIndex >= 0) {\n          listRef.current?.scrollToItem(focusIndex, 'center');\n        }\n        return;\n      }\n\n      // item is mounted, set focus\n      if (getItemById(id)?.hasSubtree) {\n        itemRef.focus();\n      } else {\n        // when tree item is leaf, need to focus on the inner treeTitle\n        (itemRef.firstElementChild as HTMLElement)?.focus();\n      }\n    },\n    [getItemById, getItemRef, visibleItemIds],\n  );\n\n  const registerItemRef = React.useCallback(\n    (id: string, node: HTMLElement) => {\n      baseRegisterItemRef(id, node);\n      if (node && focusIdRef.current === id) {\n        // focus on this tree item\n        if (getItemById(id)?.hasSubtree) {\n          node.focus();\n        } else {\n          // when node is leaf, need to focus on the inner treeTitle\n          (node.firstElementChild as HTMLElement)?.focus();\n        }\n        focusIdRef.current = null;\n      }\n    },\n    [baseRegisterItemRef, getItemById],\n  );\n\n  const expandSiblings = React.useCallback(\n    (e: React.KeyboardEvent, id: string) => {\n      baseExpandSiblings(e, id);\n      focusIdRef.current = id;\n    },\n    [baseExpandSiblings],\n  );\n\n  React.useLayoutEffect(() => {\n    /**\n     * Reason for scroll in useLayoutEffect:\n     * Without useLayoutEffect, scrolling works for focus parent and focus first child, but it is problematic for expanding sibings.\n     * When focus parent/child, the number of items (itemCount) in the virtual list does not change. But when sibling expand, itemCount could change.\n     * When siblings are expanded:\n     *  without useLayoutEffect, react window uses the itemCount before siblings are expanded, causing it to compute wrong scroll offset.\n     *  with useLayoutEffect, the scrolling happens after the new itemCount passed into list as props. Therefore the computed scroll offset is correct.\n     */\n    if (focusIdRef.current != null && getItemRef(focusIdRef.current) == null) {\n      const focusIndex = visibleItemIds.indexOf(focusIdRef.current);\n      if (focusIndex >= 0) {\n        listRef.current?.scrollToItem(focusIndex, 'center');\n      }\n    }\n  }, [getItemRef, visibleItemIds]);\n\n  const searchByFirstChar = React.useCallback(\n    (startIndex: number, endIndex: number, char: string) => {\n      const itemToString = props.itemToString || (item => (item as any).content || '');\n      for (let i = startIndex; i < endIndex; ++i) {\n        const itemFirstChar = itemToString(getItemById(visibleItemIds[i]).item)?.trim()?.charAt(0)?.toLowerCase();\n        if (itemFirstChar === char.toLowerCase()) {\n          return i;\n        }\n      }\n      return -1;\n    },\n    [getItemById, props.itemToString, visibleItemIds],\n  );\n\n  const getToFocusIDByFirstCharacter = React.useCallback(\n    (e: React.KeyboardEvent, idToStartSearch: string) => {\n      // Get start index for search\n      let starIndex = visibleItemIds.indexOf(idToStartSearch) + 1;\n      if (starIndex === visibleItemIds.length) {\n        starIndex = 0;\n      }\n\n      // Check following nodes in tree\n      let toFocusIndex = searchByFirstChar(starIndex, visibleItemIds.length, e.key);\n      // If not found in following nodes, check from beginning\n      if (toFocusIndex === -1) {\n        toFocusIndex = searchByFirstChar(0, starIndex - 1, e.key);\n      }\n\n      if (toFocusIndex === -1) {\n        return idToStartSearch;\n      }\n\n      return visibleItemIds[toFocusIndex];\n    },\n    [searchByFirstChar, visibleItemIds],\n  );\n\n  return {\n    ...baseTree,\n    registerItemRef,\n    focusItemById,\n    expandSiblings,\n    getToFocusIDByFirstCharacter,\n    listRef,\n  };\n}\n"],"mappings":"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"}