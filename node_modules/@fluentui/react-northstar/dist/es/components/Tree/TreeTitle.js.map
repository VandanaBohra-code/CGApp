{"version":3,"file":"TreeTitle.js","names":["treeTitleBehavior","getElementType","useUnhandledProps","useAccessibility","useStyles","useFluentContext","useTelemetry","Box","customPropTypes","PropTypes","React","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","shouldPreventDefaultOnKeyDown","TreeContext","treeTitleClassName","treeTitleSlotClassNames","indicator","TreeTitle","forwardRef","props","ref","context","_useTelemetry","displayName","telemetry","setStart","setEnd","_React$useContext","useContext","focusItemById","toggleItemActive","toggleItemSelect","accessibility","id","children","className","content","design","hasSubtree","level","index","styles","treeSize","variables","selectionIndicator","disabled","selected","selectable","expanded","indeterminate","getA11Props","debugName","actionHandlers","performClick","e","preventDefault","stopPropagation","handleClick","focusParent","parent","mapPropsToBehavior","rtl","_useStyles","mapPropsToStyles","showIndicator","mapPropsToInlineStyles","unstyled","classes","resolvedStyles","ElementType","unhandledProps","handledProps","_invoke","selectionIndicatorOverrideProps","predefinedProps","onClick","selectionIndicatorElement","create","defaultProps","Object","assign","as","overrideProps","element","createElement","root","getAttributes","forElements","propTypes","createCommon","string","bool","number","func","shorthandAllowingChildren","keys","Component","mappedProp"],"sources":["components/Tree/TreeTitle.tsx"],"sourcesContent":["import { Accessibility, treeTitleBehavior, TreeTitleBehaviorProps } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  useFluentContext,\n  useTelemetry,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport { Box, BoxProps } from '../Box/Box';\nimport { SupportedIntrinsicInputProps } from '../../utils/htmlPropsUtils';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  commonPropTypes,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  rtlTextContainer,\n  shouldPreventDefaultOnKeyDown,\n} from '../../utils';\nimport { ComponentEventHandler, FluentComponentStaticProps, ShorthandValue } from '../../types';\nimport { TreeContext } from './context';\n\nexport interface TreeTitleSlotClassNames {\n  indicator: string;\n}\n\nexport interface TreeTitleProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<TreeTitleBehaviorProps>;\n\n  /** Internal usage only -  Id needed to identify this item inside the Tree, passed down from TreeItem */\n  id?: string;\n\n  /** Whether or not the title has a subtree. */\n  hasSubtree?: boolean;\n\n  /** The index of the title among its siblings. Count starts at 1. */\n  index?: number;\n\n  /** Level of the tree/subtree that contains this title. */\n  level?: number;\n\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<TreeTitleProps>;\n\n  /** Whether or not the subtree of the title is in the open state. */\n  expanded?: boolean;\n\n  /** Size of the tree containing this title without any children. */\n  treeSize?: number;\n\n  /** A selection indicator icon can be customized. */\n  selectionIndicator?: ShorthandValue<BoxProps>;\n\n  /** A selection indicator can appear disabled and be unable to change states. */\n  disabled?: SupportedIntrinsicInputProps['disabled'];\n\n  /** A state of selection indicator. */\n  selected?: boolean;\n\n  /** Whether or not tree title is selectable. */\n  selectable?: boolean;\n\n  /** For selectable parents define if all nested children are checked */\n  indeterminate?: boolean;\n\n  /** The id of the parent tree title, if any. */\n  parent?: string;\n\n  unstyled?: boolean;\n}\n\nexport type TreeTitleStylesProps = Pick<\n  TreeTitleProps,\n  'selected' | 'selectable' | 'disabled' | 'indeterminate' | 'level'\n> & {\n  showIndicator: boolean;\n};\n\nexport const treeTitleClassName = 'ui-tree__title';\n\nexport const treeTitleSlotClassNames = {\n  indicator: `${treeTitleClassName}__selection-indicator`,\n};\n\n/**\n * A TreeTitle renders a title of TreeItem.\n */\nexport const TreeTitle = React.forwardRef<HTMLAnchorElement, TreeTitleProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(TreeTitle.displayName, context.telemetry);\n  setStart();\n  const { focusItemById, toggleItemActive, toggleItemSelect } = React.useContext(TreeContext);\n  const {\n    accessibility,\n    id,\n    children,\n    className,\n    content,\n    design,\n    hasSubtree,\n    level,\n    index,\n    styles,\n    treeSize,\n    variables,\n    selectionIndicator,\n    disabled,\n    selected,\n    selectable,\n    expanded,\n    indeterminate,\n  } = props;\n\n  const getA11Props = useAccessibility<TreeTitleBehaviorProps>(accessibility, {\n    debugName: TreeTitle.displayName,\n    actionHandlers: {\n      performClick: e => {\n        if (shouldPreventDefaultOnKeyDown(e)) {\n          e.preventDefault();\n        }\n        e.stopPropagation();\n        handleClick(e);\n      },\n      focusParent: e => {\n        // allow bubbling up to parent treeItem\n        focusItemById(props.parent);\n      },\n    },\n    mapPropsToBehavior: () => ({\n      hasSubtree,\n      level,\n      index,\n      treeSize,\n      selected,\n      selectable,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<TreeTitleStylesProps>(TreeTitle.displayName, {\n    className: treeTitleClassName,\n    mapPropsToStyles: () => ({\n      selected,\n      disabled,\n      selectable,\n      indeterminate,\n      level,\n      showIndicator: selectable && ((hasSubtree && expanded) || selected || indeterminate),\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n    unstyled: props.unstyled,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(TreeTitle.handledProps, props);\n\n  const handleClick = e => {\n    if (hasSubtree) {\n      toggleItemActive(e, id);\n    } else {\n      toggleItemSelect(e, id);\n    }\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const selectionIndicatorOverrideProps = (predefinedProps: BoxProps) => ({\n    onClick: (e: React.SyntheticEvent) => {\n      e.stopPropagation(); // otherwise onClick on title will also be executed\n      if (selectable) {\n        toggleItemSelect(e, id);\n      }\n\n      _.invoke(predefinedProps, 'onClick', e);\n    },\n  });\n\n  const selectionIndicatorElement =\n    selectable &&\n    Box.create(selectionIndicator, {\n      defaultProps: () => ({\n        as: 'span',\n        selected,\n        ...getA11Props('indicator', {\n          className: treeTitleSlotClassNames.indicator,\n          styles: resolvedStyles.selectionIndicator,\n        }),\n      }),\n      overrideProps: selectionIndicatorOverrideProps,\n    });\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        onClick: handleClick,\n        selected,\n        ref,\n        ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : content}\n      {selectionIndicatorElement}\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown as ForwardRefWithAs<'a', HTMLAnchorElement, TreeTitleProps> & FluentComponentStaticProps<TreeTitleProps>;\n\nTreeTitle.displayName = 'TreeTitle';\n\nTreeTitle.propTypes = {\n  ...commonPropTypes.createCommon(),\n  id: PropTypes.string,\n  hasSubtree: PropTypes.bool,\n  index: PropTypes.number,\n  level: PropTypes.number,\n  onClick: PropTypes.func,\n  expanded: PropTypes.bool,\n  selected: PropTypes.bool,\n  selectable: PropTypes.bool,\n  treeSize: PropTypes.number,\n  selectionIndicator: customPropTypes.shorthandAllowingChildren,\n  unstyled: PropTypes.bool,\n  indeterminate: PropTypes.bool,\n  parent: PropTypes.string,\n};\nTreeTitle.defaultProps = {\n  as: 'a' as const,\n  selectionIndicator: {},\n  accessibility: treeTitleBehavior,\n};\nTreeTitle.handledProps = Object.keys(TreeTitle.propTypes) as any;\n\nTreeTitle.create = createShorthandFactory({\n  Component: TreeTitle,\n  mappedProp: 'content',\n});\n"],"mappings":"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"}