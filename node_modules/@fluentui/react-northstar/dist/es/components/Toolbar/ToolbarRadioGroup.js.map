{"version":3,"file":"ToolbarRadioGroup.js","names":["toolbarRadioGroupBehavior","toolbarRadioGroupItemBehavior","compose","getElementType","mergeVariablesOverrides","useUnhandledProps","useAccessibility","useStyles","useFluentContext","useTelemetry","Ref","customPropTypes","PropTypes","React","createShorthand","childrenExist","commonPropTypes","ToolbarDivider","ToolbarItem","ToolbarVariablesContext","ToolbarVariablesProvider","toolbarRadioGroupClassName","ToolbarRadioGroup","props","ref","composeOptions","context","_useTelemetry","displayName","telemetry","setStart","setEnd","accessibility","activeIndex","children","className","design","items","variables","styles","itemRefs","slotProps","resolveSlotProps","parentVariables","useContext","mergedVariables","getA11yProps","debugName","actionHandlers","nextItem","event","setFocusedItem","prevItem","rtl","_useStyles","mapPropsToInlineStyles","unstable_props","classes","direction","filteredRadioItems","_filter","item","index","currentItem","disabled","currentFocusedIndex","_findIndex","current","tabIndex","itemsLength","length","nextIndex","nextItemToFocus","focus","target","activeElement","stopPropagation","preventDefault","renderItems","_map","kind","_get","createRef","slots","divider","defaultProps","toolbarItem","Object","assign","active","createElement","innerRef","key","ElementType","unhandledProps","handledProps","element","root","value","shorthandConfig","mappedProp","propTypes","createCommon","number","collectionShorthandWithKindProp"],"sources":["components/Toolbar/ToolbarRadioGroup.tsx"],"sourcesContent":["import {\n  Accessibility,\n  toolbarRadioGroupBehavior,\n  toolbarRadioGroupItemBehavior,\n  ToolbarRadioGroupBehaviorProps,\n} from '@fluentui/accessibility';\nimport {\n  compose,\n  getElementType,\n  mergeVariablesOverrides,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  useFluentContext,\n  useTelemetry,\n} from '@fluentui/react-bindings';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  ChildrenComponentProps,\n  ContentComponentProps,\n  createShorthand,\n  UIComponentProps,\n  childrenExist,\n  commonPropTypes,\n} from '../../utils';\nimport { ShorthandCollection } from '../../types';\nimport { ToolbarDivider, ToolbarDividerProps } from './ToolbarDivider';\nimport { ToolbarItem, ToolbarItemProps } from './ToolbarItem';\nimport { ToolbarVariablesContext, ToolbarVariablesProvider } from './toolbarVariablesContext';\n\nexport type ToolbarRadioGroupItemShorthandKinds = {\n  divider: ToolbarDividerProps;\n  item: ToolbarItemProps;\n};\n\nexport interface ToolbarRadioGroupProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<ToolbarRadioGroupBehaviorProps>;\n\n  /** Index of the currently active item. */\n  activeIndex?: number;\n\n  /** Shorthand array of props for ToolbarRadioGroup. */\n  items?: ShorthandCollection<ToolbarItemProps, ToolbarRadioGroupItemShorthandKinds>;\n}\n\nexport type ToolbarRadioGroupStylesProps = never;\nexport const toolbarRadioGroupClassName = 'ui-toolbars'; // FIXME: required by getComponentInfo/isConformant. But this is group inside a toolbar not a group of toolbars\n\n/**\n * A ToolbarRadioGroup renders Toolbar item as a group of mutually exclusive options.\n * Component doesn't implement mutual exclusiveness, it just serves accessibility purposes.\n *\n * @accessibility\n * Implements [ARIA RadioGroup](https://www.w3.org/TR/wai-aria-practices/#radiobutton) design pattern.\n */\nexport const ToolbarRadioGroup = compose<'div', ToolbarRadioGroupProps, ToolbarRadioGroupStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const { accessibility, activeIndex, children, className, design, items, variables, styles } = props;\n    const itemRefs: React.RefObject<HTMLElement>[] = [];\n\n    const slotProps = composeOptions.resolveSlotProps(props);\n    const parentVariables = React.useContext(ToolbarVariablesContext);\n    const mergedVariables = mergeVariablesOverrides(parentVariables, variables);\n\n    const getA11yProps = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      actionHandlers: {\n        nextItem: event => setFocusedItem(event, 1),\n        prevItem: event => setFocusedItem(event, -1),\n      },\n      rtl: context.rtl,\n    });\n    const { classes } = useStyles<ToolbarRadioGroupStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToInlineStyles: () => ({ className, design, styles, variables: mergedVariables }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const setFocusedItem = (event: React.KeyboardEvent, direction) => {\n      // filter items which are not disabled\n      const filteredRadioItems: React.RefObject<HTMLElement>[] = _.filter(itemRefs, (item, index) => {\n        const currentItem = items[index] as ToolbarItemProps;\n        return currentItem && !currentItem.disabled;\n      });\n\n      // get the index of currently focused element (w/ tabindex = 0) or the first one as default\n      const currentFocusedIndex =\n        _.findIndex(filteredRadioItems, (item: React.RefObject<HTMLElement>) => {\n          return item.current.tabIndex === 0;\n        }) || 0;\n\n      const itemsLength = filteredRadioItems.length;\n      let nextIndex = currentFocusedIndex + direction;\n\n      if (nextIndex >= itemsLength) {\n        nextIndex = 0;\n      }\n\n      if (nextIndex < 0) {\n        nextIndex = itemsLength - 1;\n      }\n\n      const nextItemToFocus = filteredRadioItems[nextIndex].current;\n      if (nextItemToFocus) {\n        nextItemToFocus.focus();\n      }\n\n      if (context.target.activeElement === nextItemToFocus) {\n        event.stopPropagation();\n      }\n      event.preventDefault();\n    };\n\n    const renderItems = () => {\n      return _.map(items, (item, index) => {\n        const kind = _.get(item, 'kind', 'item');\n\n        const ref = React.createRef<HTMLElement>();\n        itemRefs[index] = ref;\n\n        if (kind === 'divider') {\n          return createShorthand(composeOptions.slots.divider, item, {\n            defaultProps: () => slotProps.divider,\n          });\n        }\n\n        const toolbarItem = createShorthand(composeOptions.slots.item, item, {\n          defaultProps: () => ({\n            ...slotProps.item,\n            active: activeIndex === index,\n          }),\n        });\n\n        return (\n          <Ref innerRef={ref} key={toolbarItem.key}>\n            {toolbarItem}\n          </Ref>\n        );\n      });\n    };\n\n    const ElementType = getElementType(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const element = (\n      <ElementType\n        {...getA11yProps('root', {\n          ...unhandledProps,\n          className: classes.root,\n          ref,\n        })}\n      >\n        <ToolbarVariablesProvider value={mergedVariables}>\n          {childrenExist(children) ? children : renderItems()}\n        </ToolbarVariablesProvider>\n      </ElementType>\n    );\n    setEnd();\n\n    return element;\n  },\n  {\n    className: toolbarRadioGroupClassName,\n    displayName: 'ToolbarRadioGroup',\n\n    slots: {\n      item: ToolbarItem,\n      divider: ToolbarDivider,\n    },\n    slotProps: () => ({\n      item: {\n        accessibility: toolbarRadioGroupItemBehavior,\n      },\n    }),\n\n    shorthandConfig: { mappedProp: 'content' },\n    handledProps: [\n      'accessibility',\n      'as',\n      'children',\n      'className',\n      'content',\n      'design',\n      'styles',\n      'variables',\n\n      'activeIndex',\n      'items',\n    ],\n  },\n);\n\nToolbarRadioGroup.propTypes = {\n  ...commonPropTypes.createCommon(),\n  activeIndex: PropTypes.number,\n  items: customPropTypes.collectionShorthandWithKindProp(['divider', 'item']),\n};\nToolbarRadioGroup.defaultProps = {\n  accessibility: toolbarRadioGroupBehavior,\n};\n"],"mappings":"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"}