{"version":3,"file":"ToolbarMenuDivider.js","names":["toolbarMenuDividerBehavior","getElementType","mergeVariablesOverrides","useUnhandledProps","useAccessibility","useStyles","useFluentContext","useTelemetry","compose","React","commonPropTypes","ToolbarVariablesContext","toolbarMenuDividerClassName","ToolbarMenuDivider","props","ref","composeOptions","context","_useTelemetry","displayName","telemetry","setStart","setEnd","accessibility","className","design","styles","variables","parentVariables","useContext","getA11yProps","debugName","rtl","_useStyles","mapPropsToInlineStyles","unstable_props","classes","ElementType","unhandledProps","handledProps","element","createElement","Object","assign","root","shorthandConfig","mappedProp","propTypes","createCommon","defaultProps","as"],"sources":["components/Toolbar/ToolbarMenuDivider.tsx"],"sourcesContent":["import { Accessibility, toolbarMenuDividerBehavior, ToolbarMenuDividerBehaviorProps } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  mergeVariablesOverrides,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  useFluentContext,\n  useTelemetry,\n  compose,\n  ComponentWithAs,\n} from '@fluentui/react-bindings';\nimport * as React from 'react';\n\nimport { ChildrenComponentProps, ContentComponentProps, UIComponentProps, commonPropTypes } from '../../utils';\nimport { ToolbarVariablesContext } from './toolbarVariablesContext';\n\nexport interface ToolbarMenuDividerProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<ToolbarMenuDividerBehaviorProps>;\n}\n\nexport type ToolbarMenuDividerStylesProps = never;\nexport const toolbarMenuDividerClassName = 'ui-toolbar__menudivider';\n\n/**\n * A ToolbarMenuDivider adds non-actionable separator between items of ToolbarMenu.\n */\nexport const ToolbarMenuDivider = compose<'li', ToolbarMenuDividerProps, ToolbarMenuDividerStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const { accessibility, className, design, styles, variables } = props;\n    const parentVariables = React.useContext(ToolbarVariablesContext);\n\n    const getA11yProps = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      rtl: context.rtl,\n    });\n    const { classes } = useStyles<ToolbarMenuDividerStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables: mergeVariablesOverrides(parentVariables, variables),\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const ElementType = getElementType(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const element = <ElementType {...getA11yProps('root', { ...unhandledProps, className: classes.root, ref })} />;\n    setEnd();\n\n    return element;\n  },\n  {\n    className: toolbarMenuDividerClassName,\n    displayName: 'ToolbarMenuDivider',\n\n    shorthandConfig: { mappedProp: 'content' },\n    handledProps: ['accessibility', 'as', 'children', 'className', 'content', 'design', 'styles', 'variables'],\n  },\n) as ComponentWithAs<'li', ToolbarMenuDividerProps>;\n\nToolbarMenuDivider.propTypes = commonPropTypes.createCommon();\nToolbarMenuDivider.defaultProps = {\n  as: 'li',\n  accessibility: toolbarMenuDividerBehavior,\n};\n"],"mappings":"AAAA,SAAwBA,0BAA0B,QAAyC,yBAAyB;AACpH,SACEC,cAAc,EACdC,uBAAuB,EACvBC,iBAAiB,EACjBC,gBAAgB,EAChBC,SAAS,EACTC,gBAAgB,EAChBC,YAAY,EACZC,OAAO,QAEF,0BAA0B;AACjC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAA0EC,eAAe,QAAQ,aAAa;AAC9G,SAASC,uBAAuB,QAAQ,2BAA2B;AAUnE,OAAO,IAAMC,2BAA2B,GAAG,yBAAyB;;AAEpE;AACA;AACA;AACA,OAAO,IAAMC,kBAAkB;EAAA,IAAlBA,kBAAkB,GAAGL,OAAO,CACvC,UAACM,KAAK,EAAEC,GAAG,EAAEC,cAAc,EAAK;IAC9B,IAAMC,OAAO,GAAGX,gBAAgB,CAAC,CAAC;IAClC,IAAAY,aAAA,GAA6BX,YAAY,CAACS,cAAc,CAACG,WAAW,EAAEF,OAAO,CAACG,SAAS,CAAC;MAAhFC,QAAQ,GAAAH,aAAA,CAARG,QAAQ;MAAEC,MAAM,GAAAJ,aAAA,CAANI,MAAM;IACxBD,QAAQ,CAAC,CAAC;IAEV,IAAQE,aAAa,GAA2CT,KAAK,CAA7DS,aAAa;MAAEC,SAAS,GAAgCV,KAAK,CAA9CU,SAAS;MAAEC,MAAM,GAAwBX,KAAK,CAAnCW,MAAM;MAAEC,MAAM,GAAgBZ,KAAK,CAA3BY,MAAM;MAAEC,SAAS,GAAKb,KAAK,CAAnBa,SAAS;IAC3D,IAAMC,eAAe,GAAGnB,KAAK,CAACoB,UAAU,CAAClB,uBAAuB,CAAC;IAEjE,IAAMmB,YAAY,GAAG1B,gBAAgB,CAACmB,aAAa,EAAE;MACnDQ,SAAS,EAAEf,cAAc,CAACG,WAAW;MACrCa,GAAG,EAAEf,OAAO,CAACe;IACf,CAAC,CAAC;IACF,IAAAC,UAAA,GAAoB5B,SAAS,CAAgCW,cAAc,CAACG,WAAW,EAAE;QACvFK,SAAS,EAAER,cAAc,CAACQ,SAAS;QACnCR,cAAc,EAAdA,cAAc;QACdkB,sBAAsB,EAAE,SAAAA,uBAAA;UAAA,OAAO;YAC7BV,SAAS,EAATA,SAAS;YACTC,MAAM,EAANA,MAAM;YACNC,MAAM,EAANA,MAAM;YACNC,SAAS,EAAEzB,uBAAuB,CAAC0B,eAAe,EAAED,SAAS;UAC/D,CAAC;QAAA,CAAC;QACFK,GAAG,EAAEf,OAAO,CAACe,GAAG;QAChBG,cAAc,EAAErB;MAClB,CAAC,CAAC;MAXMsB,OAAO,GAAAH,UAAA,CAAPG,OAAO;IAaf,IAAMC,WAAW,GAAGpC,cAAc,CAACa,KAAK,CAAC;IACzC,IAAMwB,cAAc,GAAGnC,iBAAiB,CAACa,cAAc,CAACuB,YAAY,EAAEzB,KAAK,CAAC;IAE5E,IAAM0B,OAAO,gBAAG/B,KAAA,CAAAgC,aAAA,CAACJ,WAAW,EAAKP,YAAY,CAAC,MAAM,EAAAY,MAAA,CAAAC,MAAA,KAAOL,cAAc;MAAEd,SAAS,EAAEY,OAAO,CAACQ,IAAI;MAAE7B,GAAG,EAAHA;IAAG,EAAE,CAAI,CAAC;IAC9GO,MAAM,CAAC,CAAC;IAER,OAAOkB,OAAO;EAChB,CAAC,EACD;IACEhB,SAAS,EAAEZ,2BAA2B;IACtCO,WAAW,EAAE,oBAAoB;IAEjC0B,eAAe,EAAE;MAAEC,UAAU,EAAE;IAAU,CAAC;IAC1CP,YAAY,EAAE,CAAC,eAAe,EAAE,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW;EAC3G,CACF,CAAmD;EAEnD1B,kBAAkB,CAACkC,SAAS,GAAGrC,eAAe,CAACsC,YAAY,CAAC,CAAC;EAC7DnC,kBAAkB,CAACoC,YAAY,GAAG;IAChCC,EAAE,EAAE,IAAI;IACR3B,aAAa,EAAEvB;EACjB,CAAC;EAAC,OA/CWa,kBAAkB;AAAA"}