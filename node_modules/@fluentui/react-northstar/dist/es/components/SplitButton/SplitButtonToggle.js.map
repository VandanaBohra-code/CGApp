{"version":3,"file":"SplitButtonToggle.js","names":["buttonBehavior","customPropTypes","PropTypes","React","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","getElementType","useAccessibility","useFluentContext","useStyles","useTelemetry","useUnhandledProps","splitButtonToggleClassName","SplitButtonToggle","forwardRef","props","ref","context","_useTelemetry","displayName","telemetry","setStart","setEnd","accessibility","as","children","content","disabled","primary","className","size","flat","styles","variables","design","hasChildren","getA11Props","debugName","mapPropsToBehavior","String","actionHandlers","performClick","event","preventDefault","handleClick","rtl","_useStyles","mapPropsToStyles","mapPropsToInlineStyles","classes","unhandledProps","handledProps","ElementType","e","_invoke","result","createElement","_extends","getAttributes","forElements","Object","assign","onClick","root","defaultProps","propTypes","createCommon","bool","func","every","disallow","secondary","keys","create","Component","mappedProp"],"sources":["components/SplitButton/SplitButtonToggle.tsx"],"sourcesContent":["import { Accessibility, buttonBehavior, ButtonBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  ContentComponentProps,\n  SizeValue,\n} from '../../utils';\n\nimport { ComponentEventHandler, FluentComponentStaticProps } from '../../types';\nimport {\n  ForwardRefWithAs,\n  getElementType,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\n\nexport interface SplitButtonToggleProps extends UIComponentProps, ContentComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ButtonBehaviorProps>;\n\n  /** A split button toggle can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /**\n   * Called after a user clicks the button.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<SplitButtonToggleProps>;\n\n  /** A split button toggle can emphasize that it represents the primary action. */\n  primary?: boolean;\n\n  /** A split button toggle can emphasize that it represents an alternative action. */\n  secondary?: boolean;\n\n  /** A split button toggle can be sized */\n  size?: SizeValue;\n\n  /** A split button toggle can be elevated or flat. */\n  flat?: boolean;\n}\n\nexport type SplitButtonToggleStylesProps = Pick<SplitButtonToggleProps, 'primary' | 'disabled' | 'size' | 'flat'>;\nexport const splitButtonToggleClassName = 'ui-splitbutton__toggle';\n\n/**\n * A SplitToggleButton allows users to customize the toggle button inside the SplitButton.\n *\n * @accessibility\n * Implements [ARIA Button](https://www.w3.org/TR/wai-aria-practices-1.1/#button) design pattern.\n */\n\nexport const SplitButtonToggle = React.forwardRef<HTMLButtonElement, SplitButtonToggleProps & { as: React.ReactNode }>(\n  (props, ref) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(SplitButtonToggle.displayName, context.telemetry);\n    setStart();\n\n    const {\n      accessibility,\n      as,\n      children,\n      content,\n      disabled,\n      primary,\n      className,\n      size,\n      flat,\n      styles,\n      variables,\n      design,\n    } = props;\n\n    const hasChildren = childrenExist(children);\n\n    const getA11Props = useAccessibility(accessibility, {\n      debugName: SplitButtonToggle.displayName,\n      mapPropsToBehavior: () => ({\n        as: String(as),\n        disabled,\n      }),\n      actionHandlers: {\n        performClick: event => {\n          event.preventDefault();\n          handleClick(event);\n        },\n      },\n      rtl: context.rtl,\n    });\n    const { classes } = useStyles<SplitButtonToggleStylesProps>(SplitButtonToggle.displayName, {\n      className: splitButtonToggleClassName,\n      mapPropsToStyles: () => ({\n        primary,\n        disabled,\n        size,\n        flat,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n    });\n\n    const unhandledProps = useUnhandledProps(SplitButtonToggle.handledProps, props);\n    const ElementType = getElementType(props);\n\n    const handleClick = (e: React.SyntheticEvent) => {\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      _.invoke(props, 'onClick', e, props);\n    };\n\n    const result = (\n      <ElementType\n        {...rtlTextContainer.getAttributes({ forElements: [children] })}\n        {...getA11Props('root', {\n          onClick: handleClick,\n          disabled,\n          className: classes.root,\n          ref,\n          ...unhandledProps,\n        })}\n      >\n        {hasChildren ? children : content}\n      </ElementType>\n    );\n\n    setEnd();\n\n    return result;\n  },\n) as unknown as ForwardRefWithAs<'button', HTMLButtonElement, SplitButtonToggleProps> &\n  FluentComponentStaticProps<SplitButtonToggleProps>;\n\nSplitButtonToggle.defaultProps = {\n  as: 'button',\n  accessibility: buttonBehavior,\n};\n\nSplitButtonToggle.displayName = 'SplitButtonToggle';\n\nSplitButtonToggle.propTypes = {\n  ...commonPropTypes.createCommon({}),\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  size: customPropTypes.size,\n  flat: PropTypes.bool,\n};\n\nSplitButtonToggle.handledProps = Object.keys(SplitButtonToggle.propTypes) as any;\n\nSplitButtonToggle.create = createShorthandFactory({ Component: SplitButtonToggle, mappedProp: 'content' });\n"],"mappings":";;AAAA,SAAwBA,cAAc,QAA6B,yBAAyB;AAC5F,OAAO,KAAKC,eAAe,MAAM,2BAA2B;AAC5D,OAAO,KAAKC,SAAS,MAAM,YAAY;AACvC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAG9B,SACEC,aAAa,EACbC,sBAAsB,EAGtBC,eAAe,EACfC,gBAAgB,QAGX,aAAa;AAGpB,SAEEC,cAAc,EACdC,gBAAgB,EAChBC,gBAAgB,EAChBC,SAAS,EACTC,YAAY,EACZC,iBAAiB,QACZ,0BAA0B;AA8BjC,OAAO,IAAMC,0BAA0B,GAAG,wBAAwB;;AAElE;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,iBAAiB;EAAA,IAAjBA,iBAAiB,gBAAGZ,KAAK,CAACa,UAAU,CAC/C,UAACC,KAAK,EAAEC,GAAG,EAAK;IACd,IAAMC,OAAO,GAAGT,gBAAgB,CAAC,CAAC;IAClC,IAAAU,aAAA,GAA6BR,YAAY,CAACG,iBAAiB,CAACM,WAAW,EAAEF,OAAO,CAACG,SAAS,CAAC;MAAnFC,QAAQ,GAAAH,aAAA,CAARG,QAAQ;MAAEC,MAAM,GAAAJ,aAAA,CAANI,MAAM;IACxBD,QAAQ,CAAC,CAAC;IAEV,IACEE,aAAa,GAYXR,KAAK,CAZPQ,aAAa;MACbC,EAAE,GAWAT,KAAK,CAXPS,EAAE;MACFC,QAAQ,GAUNV,KAAK,CAVPU,QAAQ;MACRC,OAAO,GASLX,KAAK,CATPW,OAAO;MACPC,QAAQ,GAQNZ,KAAK,CARPY,QAAQ;MACRC,OAAO,GAOLb,KAAK,CAPPa,OAAO;MACPC,SAAS,GAMPd,KAAK,CANPc,SAAS;MACTC,IAAI,GAKFf,KAAK,CALPe,IAAI;MACJC,IAAI,GAIFhB,KAAK,CAJPgB,IAAI;MACJC,MAAM,GAGJjB,KAAK,CAHPiB,MAAM;MACNC,SAAS,GAEPlB,KAAK,CAFPkB,SAAS;MACTC,MAAM,GACJnB,KAAK,CADPmB,MAAM;IAGR,IAAMC,WAAW,GAAGjC,aAAa,CAACuB,QAAQ,CAAC;IAE3C,IAAMW,WAAW,GAAG7B,gBAAgB,CAACgB,aAAa,EAAE;MAClDc,SAAS,EAAExB,iBAAiB,CAACM,WAAW;MACxCmB,kBAAkB,EAAE,SAAAA,mBAAA;QAAA,OAAO;UACzBd,EAAE,EAAEe,MAAM,CAACf,EAAE,CAAC;UACdG,QAAQ,EAARA;QACF,CAAC;MAAA,CAAC;MACFa,cAAc,EAAE;QACdC,YAAY,EAAE,SAAAA,aAAAC,KAAK,EAAI;UACrBA,KAAK,CAACC,cAAc,CAAC,CAAC;UACtBC,WAAW,CAACF,KAAK,CAAC;QACpB;MACF,CAAC;MACDG,GAAG,EAAE5B,OAAO,CAAC4B;IACf,CAAC,CAAC;IACF,IAAAC,UAAA,GAAoBrC,SAAS,CAA+BI,iBAAiB,CAACM,WAAW,EAAE;QACzFU,SAAS,EAAEjB,0BAA0B;QACrCmC,gBAAgB,EAAE,SAAAA,iBAAA;UAAA,OAAO;YACvBnB,OAAO,EAAPA,OAAO;YACPD,QAAQ,EAARA,QAAQ;YACRG,IAAI,EAAJA,IAAI;YACJC,IAAI,EAAJA;UACF,CAAC;QAAA,CAAC;QACFiB,sBAAsB,EAAE,SAAAA,uBAAA;UAAA,OAAO;YAC7BnB,SAAS,EAATA,SAAS;YACTK,MAAM,EAANA,MAAM;YACNF,MAAM,EAANA,MAAM;YACNC,SAAS,EAATA;UACF,CAAC;QAAA,CAAC;QACFY,GAAG,EAAE5B,OAAO,CAAC4B;MACf,CAAC,CAAC;MAfMI,OAAO,GAAAH,UAAA,CAAPG,OAAO;IAiBf,IAAMC,cAAc,GAAGvC,iBAAiB,CAACE,iBAAiB,CAACsC,YAAY,EAAEpC,KAAK,CAAC;IAC/E,IAAMqC,WAAW,GAAG9C,cAAc,CAACS,KAAK,CAAC;IAEzC,IAAM6B,WAAW,GAAG,SAAdA,WAAWA,CAAIS,CAAuB,EAAK;MAC/C,IAAI1B,QAAQ,EAAE;QACZ0B,CAAC,CAACV,cAAc,CAAC,CAAC;QAClB;MACF;MAEAW,OAAA,CAASvC,KAAK,EAAE,SAAS,EAAEsC,CAAC,EAAEtC,KAAK,CAAC;IACtC,CAAC;IAED,IAAMwC,MAAM,gBACVtD,KAAA,CAAAuD,aAAA,CAACJ,WAAW,EAAAK,QAAA,KACNpD,gBAAgB,CAACqD,aAAa,CAAC;MAAEC,WAAW,EAAE,CAAClC,QAAQ;IAAE,CAAC,CAAC,EAC3DW,WAAW,CAAC,MAAM,EAAAwB,MAAA,CAAAC,MAAA;MACpBC,OAAO,EAAElB,WAAW;MACpBjB,QAAQ,EAARA,QAAQ;MACRE,SAAS,EAAEoB,OAAO,CAACc,IAAI;MACvB/C,GAAG,EAAHA;IAAG,GACAkC,cAAc,CAClB,CAAC,GAEDf,WAAW,GAAGV,QAAQ,GAAGC,OACf,CACd;IAEDJ,MAAM,CAAC,CAAC;IAER,OAAOiC,MAAM;EACf,CACF,CACoD;EAEpD1C,iBAAiB,CAACmD,YAAY,GAAG;IAC/BxC,EAAE,EAAE,QAAQ;IACZD,aAAa,EAAEzB;EACjB,CAAC;EAEDe,iBAAiB,CAACM,WAAW,GAAG,mBAAmB;EAEnDN,iBAAiB,CAACoD,SAAS,GAAAL,MAAA,CAAAC,MAAA,KACtBzD,eAAe,CAAC8D,YAAY,CAAC,CAAC,CAAC,CAAC;IACnCvC,QAAQ,EAAE3B,SAAS,CAACmE,IAAI;IACxBL,OAAO,EAAE9D,SAAS,CAACoE,IAAI;IACvBxC,OAAO,EAAE7B,eAAe,CAACsE,KAAK,CAAC,CAACtE,eAAe,CAACuE,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,EAAEtE,SAAS,CAACmE,IAAI,CAAC,CAAC;IACzFI,SAAS,EAAExE,eAAe,CAACsE,KAAK,CAAC,CAACtE,eAAe,CAACuE,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,EAAEtE,SAAS,CAACmE,IAAI,CAAC,CAAC;IACzFrC,IAAI,EAAE/B,eAAe,CAAC+B,IAAI;IAC1BC,IAAI,EAAE/B,SAAS,CAACmE;EAAI,EACrB;EAEDtD,iBAAiB,CAACsC,YAAY,GAAGS,MAAM,CAACY,IAAI,CAAC3D,iBAAiB,CAACoD,SAAS,CAAQ;EAEhFpD,iBAAiB,CAAC4D,MAAM,GAAGtE,sBAAsB,CAAC;IAAEuE,SAAS,EAAE7D,iBAAiB;IAAE8D,UAAU,EAAE;EAAU,CAAC,CAAC;EAAC,OA3G9F9D,iBAAiB;AAAA"}