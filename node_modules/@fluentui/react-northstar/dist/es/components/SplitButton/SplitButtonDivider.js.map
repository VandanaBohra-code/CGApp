{"version":3,"file":"SplitButtonDivider.js","names":["React","PropTypes","useTelemetry","useAccessibility","getElementType","useFluentContext","useUnhandledProps","useStyles","commonPropTypes","SplitButtonDividerClassName","SplitButtonDivider","forwardRef","props","ref","context","_useTelemetry","displayName","telemetry","setStart","setEnd","className","design","styles","variables","accessibility","ElementType","primary","unhandledProps","handledProps","getA11yProps","debugName","rtl","_useStyles","mapPropsToStyles","mapPropsToInlineStyles","classes","element","createElement","Object","assign","root","propTypes","createCommon","bool","keys"],"sources":["components/SplitButton/SplitButtonDivider.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Accessibility } from '@fluentui/accessibility';\nimport {\n  useTelemetry,\n  useAccessibility,\n  getElementType,\n  useFluentContext,\n  useUnhandledProps,\n  useStyles,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nimport {\n  UIComponentProps,\n  ChildrenComponentProps,\n  ColorComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n} from '../../utils';\n\nimport { FluentComponentStaticProps } from '../../types';\n\nexport interface SplitButtonDividerProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ColorComponentProps,\n    ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** A split button divider can be formatted to show different levels of emphasis. */\n  primary?: boolean;\n}\n\nexport type SplitButtonDividerStylesProps = Required<Pick<SplitButtonDividerProps, 'primary'>>;\n\nexport const SplitButtonDividerClassName = 'ui-splitButtonDivider';\n\n/**\n * A SplitButtonDivider visually segments content.\n */\nexport const SplitButtonDivider = React.forwardRef<HTMLDivElement, SplitButtonDividerProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(SplitButtonDivider.displayName, context.telemetry);\n  setStart();\n  const { className, design, styles, variables, accessibility } = props;\n  const ElementType = getElementType(props);\n  const { primary } = props;\n  const unhandledProps = useUnhandledProps(SplitButtonDivider.handledProps, props);\n  const getA11yProps = useAccessibility<never>(accessibility, {\n    debugName: SplitButtonDivider.displayName,\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<SplitButtonDividerStylesProps>(SplitButtonDivider.displayName, {\n    className: SplitButtonDividerClassName,\n    mapPropsToStyles: () => ({\n      primary,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...unhandledProps,\n      })}\n    />\n  );\n  setEnd();\n  return element;\n}) as unknown as ForwardRefWithAs<'div', HTMLDivElement, SplitButtonDividerProps> &\n  FluentComponentStaticProps<SplitButtonDividerProps>;\n\nSplitButtonDivider.displayName = 'SplitButtonDivider';\n\nSplitButtonDivider.propTypes = {\n  ...commonPropTypes.createCommon(),\n  primary: PropTypes.bool,\n};\n\nSplitButtonDivider.handledProps = Object.keys(SplitButtonDivider.propTypes) as any;\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAO,KAAKC,SAAS,MAAM,YAAY;AAEvC,SACEC,YAAY,EACZC,gBAAgB,EAChBC,cAAc,EACdC,gBAAgB,EAChBC,iBAAiB,EACjBC,SAAS,QAEJ,0BAA0B;AAEjC,SAKEC,eAAe,QACV,aAAa;AAoBpB,OAAO,IAAMC,2BAA2B,GAAG,uBAAuB;;AAElE;AACA;AACA;AACA,OAAO,IAAMC,kBAAkB;EAAA,IAAlBA,kBAAkB,gBAAGV,KAAK,CAACW,UAAU,CAA0C,UAACC,KAAK,EAAEC,GAAG,EAAK;IAC1G,IAAMC,OAAO,GAAGT,gBAAgB,CAAC,CAAC;IAClC,IAAAU,aAAA,GAA6Bb,YAAY,CAACQ,kBAAkB,CAACM,WAAW,EAAEF,OAAO,CAACG,SAAS,CAAC;MAApFC,QAAQ,GAAAH,aAAA,CAARG,QAAQ;MAAEC,MAAM,GAAAJ,aAAA,CAANI,MAAM;IACxBD,QAAQ,CAAC,CAAC;IACV,IAAQE,SAAS,GAA+CR,KAAK,CAA7DQ,SAAS;MAAEC,MAAM,GAAuCT,KAAK,CAAlDS,MAAM;MAAEC,MAAM,GAA+BV,KAAK,CAA1CU,MAAM;MAAEC,SAAS,GAAoBX,KAAK,CAAlCW,SAAS;MAAEC,aAAa,GAAKZ,KAAK,CAAvBY,aAAa;IAC3D,IAAMC,WAAW,GAAGrB,cAAc,CAACQ,KAAK,CAAC;IACzC,IAAQc,OAAO,GAAKd,KAAK,CAAjBc,OAAO;IACf,IAAMC,cAAc,GAAGrB,iBAAiB,CAACI,kBAAkB,CAACkB,YAAY,EAAEhB,KAAK,CAAC;IAChF,IAAMiB,YAAY,GAAG1B,gBAAgB,CAAQqB,aAAa,EAAE;MAC1DM,SAAS,EAAEpB,kBAAkB,CAACM,WAAW;MACzCe,GAAG,EAAEjB,OAAO,CAACiB;IACf,CAAC,CAAC;IACF,IAAAC,UAAA,GAAoBzB,SAAS,CAAgCG,kBAAkB,CAACM,WAAW,EAAE;QAC3FI,SAAS,EAAEX,2BAA2B;QACtCwB,gBAAgB,EAAE,SAAAA,iBAAA;UAAA,OAAO;YACvBP,OAAO,EAAPA;UACF,CAAC;QAAA,CAAC;QACFQ,sBAAsB,EAAE,SAAAA,uBAAA;UAAA,OAAO;YAC7Bd,SAAS,EAATA,SAAS;YACTC,MAAM,EAANA,MAAM;YACNC,MAAM,EAANA,MAAM;YACNC,SAAS,EAATA;UACF,CAAC;QAAA,CAAC;QACFQ,GAAG,EAAEjB,OAAO,CAACiB;MACf,CAAC,CAAC;MAZMI,OAAO,GAAAH,UAAA,CAAPG,OAAO;IAcf,IAAMC,OAAO,gBACXpC,KAAA,CAAAqC,aAAA,CAACZ,WAAW,EACNI,YAAY,CAAC,MAAM,EAAAS,MAAA,CAAAC,MAAA;MACrBnB,SAAS,EAAEe,OAAO,CAACK,IAAI;MACvB3B,GAAG,EAAHA;IAAG,GACAc,cAAc,CAClB,CACF,CACF;IACDR,MAAM,CAAC,CAAC;IACR,OAAOiB,OAAO;EAChB,CAAC,CACoD;EAErD1B,kBAAkB,CAACM,WAAW,GAAG,oBAAoB;EAErDN,kBAAkB,CAAC+B,SAAS,GAAAH,MAAA,CAAAC,MAAA,KACvB/B,eAAe,CAACkC,YAAY,CAAC,CAAC;IACjChB,OAAO,EAAEzB,SAAS,CAAC0C;EAAI,EACxB;EAEDjC,kBAAkB,CAACkB,YAAY,GAAGU,MAAM,CAACM,IAAI,CAAClC,kBAAkB,CAAC+B,SAAS,CAAQ;EAAC,OA/CtE/B,kBAAkB;AAAA"}