{"version":3,"file":"SkeletonButton.js","names":["customPropTypes","PropTypes","compose","commonPropTypes","SkeletonShape","skeletonButtonClassName","SkeletonButton","className","displayName","overrideStyles","shorthandConfig","handledProps","mapPropsToStylesProps","_ref","size","fluid","iconOnly","circular","propTypes","Object","assign","createCommon","bool","defaultProps","as"],"sources":["components/Skeleton/SkeletonButton.tsx"],"sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport { compose } from '@fluentui/react-bindings';\nimport { commonPropTypes, SizeValue } from '../../utils';\nimport { SkeletonShapeProps, SkeletonShapeStylesProps, SkeletonShape } from './SkeletonShape';\n\nexport interface SkeletonButtonOwnProps {\n  /** A skeleton button can be sized. */\n  size?: SizeValue;\n\n  /** A skeleton button can fill the width of its container. */\n  fluid?: boolean;\n\n  /** A skeleton button can appear circular. */\n  circular?: boolean;\n\n  /** A skeleton button can contain only an icon. */\n  iconOnly?: boolean;\n}\nexport interface SkeletonButtonProps extends SkeletonButtonOwnProps, SkeletonShapeProps {}\n\nexport type SkeletonButtonStylesProps = Required<\n  Pick<SkeletonButtonOwnProps, 'size' | 'fluid' | 'circular' | 'iconOnly'>\n>;\nexport const skeletonButtonClassName = 'ui-skeleton__button';\n\n/**\n * An SkeletonButton represents a buton component that will be loaded\n */\nexport const SkeletonButton = compose<\n  'span',\n  SkeletonButtonOwnProps,\n  SkeletonButtonStylesProps,\n  SkeletonShapeProps,\n  SkeletonShapeStylesProps\n>(SkeletonShape, {\n  className: skeletonButtonClassName,\n  displayName: 'SkeletonButton',\n  overrideStyles: true,\n  shorthandConfig: {},\n  handledProps: ['size', 'circular', 'iconOnly', 'fluid'],\n  mapPropsToStylesProps: ({ size, fluid, iconOnly, circular }) => ({\n    size,\n    fluid,\n    iconOnly,\n    circular,\n  }),\n});\n\nSkeletonButton.propTypes = {\n  ...commonPropTypes.createCommon(),\n  size: customPropTypes.size,\n  circular: PropTypes.bool,\n  iconOnly: PropTypes.bool,\n  fluid: PropTypes.bool,\n};\n\nSkeletonButton.defaultProps = {\n  as: 'span',\n  size: 'medium',\n};\n"],"mappings":"AAAA,OAAO,KAAKA,eAAe,MAAM,2BAA2B;AAC5D,OAAO,KAAKC,SAAS,MAAM,YAAY;AACvC,SAASC,OAAO,QAAQ,0BAA0B;AAClD,SAASC,eAAe,QAAmB,aAAa;AACxD,SAAuDC,aAAa,QAAQ,iBAAiB;AAoB7F,OAAO,IAAMC,uBAAuB,GAAG,qBAAqB;;AAE5D;AACA;AACA;AACA,OAAO,IAAMC,cAAc;EAAA,IAAdA,cAAc,GAAGJ,OAAO,CAMnCE,aAAa,EAAE;IACfG,SAAS,EAAEF,uBAAuB;IAClCG,WAAW,EAAE,gBAAgB;IAC7BC,cAAc,EAAE,IAAI;IACpBC,eAAe,EAAE,CAAC,CAAC;IACnBC,YAAY,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,OAAO,CAAC;IACvDC,qBAAqB,EAAE,SAAAA,sBAAAC,IAAA;MAAA,IAAGC,IAAI,GAAAD,IAAA,CAAJC,IAAI;QAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;QAAEC,QAAQ,GAAAH,IAAA,CAARG,QAAQ;QAAEC,QAAQ,GAAAJ,IAAA,CAARI,QAAQ;MAAA,OAAQ;QAC/DH,IAAI,EAAJA,IAAI;QACJC,KAAK,EAALA,KAAK;QACLC,QAAQ,EAARA,QAAQ;QACRC,QAAQ,EAARA;MACF,CAAC;IAAA;EACH,CAAC,CAAC;EAEFX,cAAc,CAACY,SAAS,GAAAC,MAAA,CAAAC,MAAA,KACnBjB,eAAe,CAACkB,YAAY,CAAC,CAAC;IACjCP,IAAI,EAAEd,eAAe,CAACc,IAAI;IAC1BG,QAAQ,EAAEhB,SAAS,CAACqB,IAAI;IACxBN,QAAQ,EAAEf,SAAS,CAACqB,IAAI;IACxBP,KAAK,EAAEd,SAAS,CAACqB;EAAI,EACtB;EAEDhB,cAAc,CAACiB,YAAY,GAAG;IAC5BC,EAAE,EAAE,MAAM;IACVV,IAAI,EAAE;EACR,CAAC;EAAC,OA/BWR,cAAc;AAAA"}