{"version":3,"file":"ChatMessage.js","names":["chatMessageBehavior","IS_FOCUSABLE_ATTRIBUTE","keyboardKey","menuAsToolbarBehavior","getElementType","useAccessibility","useAutoControlled","useContextSelector","useFluentContext","useStyles","useTelemetry","useUnhandledProps","useMergedRefs","mergeVariablesOverrides","Ref","customPropTypes","cx","PropTypes","React","childrenExist","commonPropTypes","createShorthand","createShorthandFactory","getOrGenerateIdFromShorthand","rtlTextContainer","getScrollParent","partitionPopperPropsFromShorthand","usePopper","Box","Flex","Label","Menu","PortalInner","Reaction","Text","useChatContextSelectors","ChatItemContext","ChatMessageDetails","ChatMessageHeader","ChatMessageReadStatus","ChatMessageContent","chatMessageClassName","chatMessageSlotClassNames","actionMenu","author","badge","bar","body","bubble","bubbleInset","compactBody","reactionGroup","timestamp","partitionActionMenuPropsFromShorthand","value","Array","isArray","_ref","inline","showActionMenu","props","_objectWithoutPropertiesLoose","_excluded","ChatMessage","forwardRef","inputProps","ref","context","_useTelemetry","displayName","telemetry","setStart","setEnd","parentAttached","v","attached","chatProps","density","accessibility","behaviors","message","Object","assign","undefined","_props$attached","badgePosition","children","className","content","design","details","header","mine","positionActionMenu","reactionGroupPosition","readStatus","styles","overflow","unstable_overflow","_props$unstable_layou","unstable_layout","layout","variables","failed","bubbleInsetContent","headerContent","isRefreshComfyLayout","_partitionPopperProps","actionMenuOptions","positioningProps","_partitionActionMenuP","inlineActionMenu","controlledShowActionMenu","_useAutoControlled","defaultValue","setShowActionMenu","hasActionMenu","_isNil","hasHeaderReactionGroup","actionMenuId","useRef","current","modifiers","useCallback","target","container","name","options","fallbackPlacements","boundary","popperRef","_usePopper","align","rtl","position","positionFixed","enabled","actionsMenuTargetRef","targetRef","actionsMenuRef","containerRef","_React$useState","useState","focused","setFocused","getA11Props","actionHandlers","preventDefault","event","currentTarget","focus","stopPropagation","debugName","mapPropsToBehavior","_useStyles","mapPropsToStyles","hasBadge","hasReactions","mapPropsToInlineStyles","classes","resolvedStyles","handleFocus","e","_popperRef$current","updatePosition","_invoke","handleBlur","shouldPreserveFocusState","relatedTarget","handleMouseEnter","_popperRef$current2","handleMouseLeave","renderActionMenu","actionMenuElement","create","defaultProps","_ref2","overrideProps","id","createElement","innerRef","handleKeyDown","_actionsMenuRef$curre","_actionsMenuRef$curre2","_actionsMenuRef$curre3","toFocusItemInActionMenu","querySelector","querySelectorAll","keyCode","Enter","Tab","isShift","shiftKey","focusableElementsInsideMessage","firstFocusableInsideMessage","lastFocusableInsideMessage","length","boundaryElementInsideMessage","childrenPropExists","rootClasses","root","ElementType","unhandledProps","handledProps","badgeElement","reactionGroupElement","Group","authorElement","size","timestampElement","messageContent","predefinedProps","detailsElement","readStatusElement","elements","Fragment","headerElement","bodyElement","Item","grow","bubbleElement","onMouseEnter","_popperRef$current3","onMouseLeave","bubbleInsetElement","as","element","unstable_wrapWithFocusZone","onBlur","onFocus","onKeyDown","getAttributes","forElements","propTypes","createCommon","oneOfType","itemShorthand","collectionShorthand","bool","oneOf","func","node","keys","Component","mappedProp"],"sources":["components/Chat/ChatMessage.tsx"],"sourcesContent":["import {\n  Accessibility,\n  chatMessageBehavior,\n  ChatMessageBehaviorProps,\n  IS_FOCUSABLE_ATTRIBUTE,\n  keyboardKey,\n  menuAsToolbarBehavior,\n} from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useAccessibility,\n  useAutoControlled,\n  useContextSelector,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n  useMergedRefs,\n  ForwardRefWithAs,\n  mergeVariablesOverrides,\n} from '@fluentui/react-bindings';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  ComponentEventHandler,\n  ComponentKeyboardEventHandler,\n  FluentComponentStaticProps,\n  ObjectShorthandValue,\n  ShorthandCollection,\n  ShorthandValue,\n} from '../../types';\nimport {\n  ChildrenComponentProps,\n  childrenExist,\n  commonPropTypes,\n  ContentComponentProps,\n  createShorthand,\n  createShorthandFactory,\n  getOrGenerateIdFromShorthand,\n  rtlTextContainer,\n  UIComponentProps,\n} from '../../utils';\nimport {\n  getScrollParent,\n  partitionPopperPropsFromShorthand,\n  PopperModifiersFn,\n  PopperRefHandle,\n  PopperShorthandProps,\n  usePopper,\n} from '../../utils/positioner';\nimport { Box, BoxProps } from '../Box/Box';\nimport { Flex } from '../Flex/Flex';\nimport { Label, LabelProps } from '../Label/Label';\nimport { Menu, MenuProps } from '../Menu/Menu';\nimport { MenuItemProps } from '../Menu/MenuItem';\nimport { PortalInner } from '../Portal/PortalInner';\nimport { Reaction, ReactionProps } from '../Reaction/Reaction';\nimport { ReactionGroupProps } from '../Reaction/ReactionGroup';\nimport { Text, TextProps } from '../Text/Text';\nimport { useChatContextSelectors } from './chatContext';\nimport { ChatDensity } from './chatDensity';\nimport { ChatItemContext } from './chatItemContext';\nimport { ChatMessageDetails, ChatMessageDetailsProps } from './ChatMessageDetails';\nimport { ChatMessageHeader, ChatMessageHeaderProps } from './ChatMessageHeader';\nimport { ChatMessageReadStatus, ChatMessageReadStatusProps } from './ChatMessageReadStatus';\nimport { ChatMessageContent } from './ChatMessageContent';\n\nexport interface ChatMessageSlotClassNames {\n  actionMenu: string;\n  author: string;\n  badge: string;\n  bar: string;\n  bubble: string;\n  bubbleInset: string;\n  body: string;\n  compactBody: string;\n  reactionGroup: string;\n  timestamp: string;\n}\n\nexport type ChatMessageLayout = 'default' | 'refresh';\n\nexport interface ChatMessageProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>> {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ChatMessageBehaviorProps>;\n\n  /**\n   * Menu with actions of the message.\n   * popper: alters the action menu positioning.\n   * inline: whether the action menu should be rendered inline with the chat message, or in the body. It's true by default.\n   * showActionMenu: controls if the action menu is visible or not.\n   */\n  actionMenu?:\n    | ShorthandValue<MenuProps & { popper?: PopperShorthandProps; inline?: boolean; showActionMenu?: boolean }>\n    | ShorthandCollection<MenuItemProps & { inline?: boolean; showActionMenu?: boolean }>;\n\n  /** Controls messages's relation to other chat messages. Is automatically set by the ChatItem. */\n  attached?: boolean | 'top' | 'bottom';\n\n  /** Author of the message. */\n  author?: ShorthandValue<TextProps>;\n\n  /** Badge attached to the message. */\n  badge?: ShorthandValue<LabelProps>;\n\n  /** A message can format the badge to appear at the start or the end of the message. */\n  badgePosition?: 'start' | 'end';\n\n  /** A message can have a custom body. Only rendered in compact density. */\n  compactBody?: ShorthandValue<BoxProps>;\n\n  /** Chat density. Is automatically set by the Chat. */\n  density?: ChatDensity;\n\n  /** Message details info slot. Displayed in the header or body in comfy and compact density respectively. */\n  details?: ShorthandValue<ChatMessageDetailsProps>;\n\n  /** A message can have a custom header. */\n  header?: ShorthandValue<ChatMessageHeaderProps>;\n\n  /** Optional slot for inserting content into the default header. */\n  headerContent?: React.ReactNode;\n\n  /** Indicates whether message belongs to the current user. */\n  mine?: boolean;\n\n  /**\n   * Called after user's blur.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onBlur?: ComponentEventHandler<ChatMessageProps>;\n\n  /**\n   * Called after user's focus.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<ChatMessageProps>;\n\n  /**\n   * Called on chat message item key down.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onKeyDown?: ComponentKeyboardEventHandler<ChatMessageProps>;\n\n  /**\n   * Called after user enters by mouse.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMouseEnter?: ComponentEventHandler<ChatMessageProps>;\n\n  /**\n   * Called after user leaves by mouse.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMouseLeave?: ComponentEventHandler<ChatMessageProps>;\n\n  /** Allows suppression of action menu positioning for performance reasons. */\n  positionActionMenu?: boolean;\n\n  /** Reaction group applied to the message. */\n  reactionGroup?: ShorthandValue<ReactionGroupProps> | ShorthandCollection<ReactionProps>;\n\n  /** A message can format the reactions group to appear at the start or the end of the message. */\n  reactionGroupPosition?: 'start' | 'end';\n\n  /** Message read status indicator. */\n  readStatus?: ShorthandValue<ChatMessageReadStatusProps>;\n\n  /** Timestamp of the message. */\n  timestamp?: ShorthandValue<TextProps>;\n\n  /** Positions an actionMenu slot in \"fixed\" mode. */\n  unstable_overflow?: boolean;\n\n  /** A message can render with different layouts. */\n  unstable_layout?: ChatMessageLayout;\n\n  /** Indicates whether the message is in a failed state. */\n  failed?: boolean;\n\n  /** A message can have a custom body element (only applicable to \"refresh\" layout). */\n  body?: ShorthandValue<BoxProps>;\n\n  /** A message can have a custom bubble element (only applicable to \"refresh\" layout). */\n  bubble?: ShorthandValue<BoxProps>;\n\n  /** A message can have a custom bubble inset element which sits next to the bubble (only applicable to \"refresh\" layout). */\n  bubbleInset?: ShorthandValue<BoxProps>;\n\n  /** Optional override for the content in the default bubble inset (only applicable to \"refresh\" layout). */\n  bubbleInsetContent?: React.ReactNode;\n}\n\nexport type ChatMessageStylesProps = Pick<ChatMessageProps, 'attached' | 'badgePosition' | 'density' | 'mine'> & {\n  hasBadge: boolean;\n  hasHeaderReactionGroup: boolean;\n  hasReactions: boolean;\n  layout: ChatMessageLayout;\n  failed: boolean;\n\n  // focused, hasActionMenu and showActionMenu controls the visibility of action menu\n  focused: boolean;\n  hasActionMenu: boolean;\n  showActionMenu: boolean;\n};\n\nexport const chatMessageClassName = 'ui-chat__message';\nexport const chatMessageSlotClassNames: ChatMessageSlotClassNames = {\n  actionMenu: `${chatMessageClassName}__actions`,\n  author: `${chatMessageClassName}__author`,\n  badge: `${chatMessageClassName}__badge`,\n  bar: `${chatMessageClassName}__bar`,\n  body: `${chatMessageClassName}__body`,\n  bubble: `${chatMessageClassName}__bubble`,\n  bubbleInset: `${chatMessageClassName}__bubble-inset`,\n  compactBody: `${chatMessageClassName}__compact-body`,\n  reactionGroup: `${chatMessageClassName}__reactions`,\n  timestamp: `${chatMessageClassName}__timestamp`,\n};\n\nfunction partitionActionMenuPropsFromShorthand<P>(\n  value: ShorthandValue<P & { inline?: boolean; showActionMenu?: boolean }>,\n): [ShorthandValue<P> | ObjectShorthandValue<P>, boolean | undefined, boolean | undefined] {\n  if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\n    const { inline, showActionMenu, ...props } = value as ObjectShorthandValue<P> & {\n      inline?: boolean;\n      showActionMenu?: boolean;\n    };\n\n    return [props as ObjectShorthandValue<P>, inline ?? true, showActionMenu];\n  }\n\n  return [value, true, false];\n}\n\n/**\n * A ChatMessage represents a single message in chat.\n */\nexport const ChatMessage = React.forwardRef<HTMLDivElement, ChatMessageProps>((inputProps, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(ChatMessage.displayName, context.telemetry);\n  setStart();\n\n  const parentAttached = useContextSelector(ChatItemContext, v => v.attached);\n  const chatProps = useChatContextSelectors({\n    density: v => v.density,\n    accessibility: v => v.behaviors.message,\n  });\n\n  const props = {\n    ...inputProps,\n    density: inputProps.density === undefined ? chatProps.density : inputProps.density,\n    accessibility:\n      inputProps.accessibility === undefined\n        ? chatProps.accessibility || chatMessageBehavior\n        : inputProps.accessibility,\n  };\n  const {\n    accessibility,\n    attached = parentAttached,\n    author,\n    badge,\n    badgePosition,\n    children,\n    className,\n    compactBody,\n    content,\n    density,\n    design,\n    details,\n    header,\n    mine,\n    positionActionMenu,\n    reactionGroup,\n    reactionGroupPosition,\n    readStatus,\n    styles,\n    timestamp,\n    unstable_overflow: overflow,\n    unstable_layout: layout = 'default',\n    variables,\n    failed,\n    bubble,\n    body,\n    bubbleInset,\n    bubbleInsetContent,\n    headerContent,\n  } = props;\n\n  const isRefreshComfyLayout = layout === 'refresh' && density === 'comfy';\n\n  const [actionMenuOptions, positioningProps] = partitionPopperPropsFromShorthand(props.actionMenu);\n  const [actionMenu, inlineActionMenu, controlledShowActionMenu] =\n    partitionActionMenuPropsFromShorthand(actionMenuOptions);\n  const [showActionMenu, setShowActionMenu] = useAutoControlled<boolean>({\n    defaultValue: false,\n    value: controlledShowActionMenu,\n  });\n  const hasActionMenu = !_.isNil(actionMenu);\n  const hasHeaderReactionGroup = !!reactionGroup && reactionGroupPosition === 'start';\n\n  const actionMenuId = React.useRef<string>();\n  actionMenuId.current = getOrGenerateIdFromShorthand(`${chatMessageClassName}-`, actionMenu, actionMenuId.current);\n\n  const modifiers = React.useCallback<PopperModifiersFn>(\n    (target, container) => {\n      return (\n        positionActionMenu && [\n          // https://popper.js.org/docs/v2/modifiers/flip/\n          // Forces to flip only in \"top-*\" positions\n          { name: 'flip', options: { fallbackPlacements: ['top'] } },\n          overflow && {\n            name: 'preventOverflow',\n            options: { boundary: getScrollParent(container) },\n          },\n        ]\n      );\n    },\n    [positionActionMenu, overflow],\n  );\n\n  const popperRef = React.useRef<PopperRefHandle>();\n  const { targetRef: actionsMenuTargetRef, containerRef: actionsMenuRef } = usePopper({\n    align: 'end',\n    rtl: context.rtl,\n    position: 'above',\n    positionFixed: overflow,\n\n    enabled: hasActionMenu && positionActionMenu,\n    modifiers,\n\n    ...positioningProps,\n    popperRef: useMergedRefs(positioningProps?.popperRef, popperRef),\n  });\n\n  // `focused` state is used for show/hide actionMenu\n  const [focused, setFocused] = React.useState<boolean>(false);\n\n  const getA11Props = useAccessibility(accessibility, {\n    actionHandlers: {\n      // prevents default FocusZone behavior, e.g., in ChatMessageBehavior, it prevents FocusZone from using arrow keys\n      // as navigation (only Tab key should work)\n      preventDefault: event => {\n        // preventDefault only if event coming from inside the message\n        if (event.currentTarget !== event.target) {\n          event.preventDefault();\n        }\n      },\n\n      focus: event => {\n        const target = actionsMenuTargetRef.current;\n        if (target) {\n          target.focus();\n          event.stopPropagation();\n        }\n      },\n    },\n    debugName: ChatMessage.displayName,\n    mapPropsToBehavior: () => ({\n      hasActionMenu,\n      inlineActionMenu,\n      actionMenuId: actionMenuId.current,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<ChatMessageStylesProps>(ChatMessage.displayName, {\n    className: chatMessageClassName,\n    mapPropsToStyles: () => ({\n      attached,\n      badgePosition,\n      density,\n      focused,\n      hasActionMenu,\n      hasBadge: !!badge,\n      hasHeaderReactionGroup,\n      mine,\n      showActionMenu,\n      hasReactions: !!reactionGroup,\n      failed,\n      layout,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleFocus = (e: React.SyntheticEvent) => {\n    popperRef.current?.updatePosition();\n\n    // react onFocus is called even when nested component receives focus (i.e. it bubbles)\n    // so when focus moves within actionMenu, the `focus` state in chatMessage remains true, and keeps actionMenu visible\n    setFocused(true);\n    _.invoke(props, 'onFocus', e, props);\n  };\n\n  const handleBlur = (e: React.SyntheticEvent) => {\n    // `focused` controls is focused the whole `ChatMessage` or any of its children. When we're navigating\n    // with keyboard the focused element will be changed and there is no way to use `:focus` selector\n    const shouldPreserveFocusState = _.invoke(e, 'currentTarget.contains', (e as any).relatedTarget);\n\n    setFocused(shouldPreserveFocusState);\n    setShowActionMenu(false);\n\n    _.invoke(props, 'onBlur', e, props);\n  };\n\n  const handleMouseEnter = (e: React.SyntheticEvent) => {\n    popperRef.current?.updatePosition();\n    if (hasActionMenu && !inlineActionMenu) {\n      setShowActionMenu(true);\n    }\n    _.invoke(props, 'onMouseEnter', e, props);\n  };\n\n  const handleMouseLeave = (e: React.SyntheticEvent) => {\n    if (!focused && hasActionMenu && !inlineActionMenu) {\n      setShowActionMenu(false);\n    }\n    _.invoke(props, 'onMouseLeave', e, props);\n  };\n\n  const renderActionMenu = () => {\n    const actionMenuElement = Menu.create(actionMenu, {\n      defaultProps: () => ({\n        [IS_FOCUSABLE_ATTRIBUTE]: true,\n        accessibility: menuAsToolbarBehavior,\n        className: chatMessageSlotClassNames.actionMenu,\n        styles: resolvedStyles.actionMenu,\n      }),\n      overrideProps: {\n        id: actionMenuId.current,\n      },\n    });\n\n    const content = actionMenuElement ? <Ref innerRef={actionsMenuRef}>{actionMenuElement}</Ref> : actionMenuElement;\n\n    return inlineActionMenu || !content ? content : <PortalInner>{content}</PortalInner>;\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (hasActionMenu && !inlineActionMenu) {\n      // reference: https://github.com/microsoft/fluentui/pull/17329\n\n      const toFocusItemInActionMenu =\n        actionsMenuRef.current?.querySelector('[tabindex=\"0\"]') ??\n        actionsMenuRef.current?.querySelectorAll('[tabindex=\"-1\"]:not([data-is-focusable=\"false\"])')[0];\n\n      if (e.keyCode === keyboardKey.Enter) {\n        toFocusItemInActionMenu?.focus();\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      if (e.keyCode === keyboardKey.Tab) {\n        // TAB/SHIFT+TAB cycles focus among actionMenu and focusable elements within chat message\n        const isShift = !!e.shiftKey;\n\n        const focusableElementsInsideMessage: NodeListOf<HTMLElement> = e.currentTarget.querySelectorAll(\n          '[tabindex=\"-1\"]:not([data-is-focusable=\"false\"])',\n        );\n        const firstFocusableInsideMessage = focusableElementsInsideMessage[0];\n        const lastFocusableInsideMessage = focusableElementsInsideMessage[focusableElementsInsideMessage.length - 1];\n\n        if (e.target === toFocusItemInActionMenu) {\n          // focus is now inside action menu\n          // cycle focus into the first/last focusable element inside chat message\n          if (isShift) {\n            lastFocusableInsideMessage?.focus();\n          } else {\n            firstFocusableInsideMessage?.focus();\n          }\n          e.stopPropagation();\n          e.preventDefault();\n        } else {\n          const boundaryElementInsideMessage = isShift ? firstFocusableInsideMessage : lastFocusableInsideMessage;\n          if (e.target === boundaryElementInsideMessage) {\n            // focus is now on the first/last focusable element inside chat message\n            toFocusItemInActionMenu.focus(); // cycle focus back into action Menu\n            e.stopPropagation();\n            e.preventDefault();\n          }\n        }\n      }\n    }\n    _.invoke(props, 'onKeyDown', e, props);\n  };\n\n  const childrenPropExists = childrenExist(children);\n  const rootClasses = childrenPropExists ? cx(classes.root, classes.content) : classes.root;\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(ChatMessage.handledProps, props);\n\n  const badgeElement = Label.create(badge, {\n    defaultProps: () => ({\n      className: chatMessageSlotClassNames.badge,\n      styles: resolvedStyles.badge,\n    }),\n  });\n\n  const reactionGroupElement = Reaction.Group.create(reactionGroup, {\n    defaultProps: () => ({\n      className: chatMessageSlotClassNames.reactionGroup,\n      styles: resolvedStyles.reactionGroup,\n    }),\n  });\n\n  const actionMenuElement = renderActionMenu();\n\n  const authorElement = Text.create(author, {\n    defaultProps: () => ({\n      size: density === 'comfy' ? 'small' : undefined,\n      styles: resolvedStyles.author,\n      className: chatMessageSlotClassNames.author,\n    }),\n  });\n\n  const timestampElement = Text.create(timestamp, {\n    defaultProps: () => ({\n      size: 'small',\n      styles: resolvedStyles.timestamp,\n      timestamp: true,\n      className: chatMessageSlotClassNames.timestamp,\n    }),\n  });\n\n  const messageContent = createShorthand(ChatMessageContent, content, {\n    defaultProps: () => ({ badgePosition, density, failed, hasBadge: !!badge, mine, unstable_layout: layout }),\n    overrideProps: predefinedProps => ({\n      variables: mergeVariablesOverrides(variables, predefinedProps.variables),\n    }),\n  });\n\n  const detailsElement = createShorthand(ChatMessageDetails, details, {\n    defaultProps: () => ({ attached, density, hasHeaderReactionGroup, mine }),\n  });\n\n  const readStatusElement = createShorthand(ChatMessageReadStatus, readStatus, {\n    defaultProps: () => ({ density }),\n  });\n\n  let elements = <></>;\n  if (density === 'compact') {\n    const headerElement = createShorthand(ChatMessageHeader, header);\n\n    const bodyElement = Box.create(compactBody || {}, {\n      defaultProps: () =>\n        getA11Props('compactBody', {\n          className: chatMessageSlotClassNames.compactBody,\n          styles: resolvedStyles.compactBody,\n        }),\n      overrideProps: () => ({\n        content: (\n          <>\n            <Flex.Item grow={1}>\n              <div>\n                {authorElement}\n                {messageContent}\n              </div>\n            </Flex.Item>\n            {timestampElement}\n            {detailsElement}\n            {badgeElement}\n          </>\n        ),\n      }),\n    });\n\n    elements = (\n      <>\n        {actionMenuElement}\n        <div className={chatMessageSlotClassNames.bar} />\n        {headerElement}\n        {bodyElement}\n        {reactionGroupElement}\n        {readStatusElement}\n      </>\n    );\n  } else if (isRefreshComfyLayout) {\n    const headerElement = createShorthand(ChatMessageHeader, header || {}, {\n      defaultProps: () => ({\n        styles: resolvedStyles.header,\n        content: (\n          <>\n            {authorElement}\n            {headerContent}\n            {detailsElement}\n          </>\n        ),\n      }),\n    });\n\n    const bubbleElement = Box.create(bubble || {}, {\n      defaultProps: () =>\n        getA11Props('bubble', {\n          className: chatMessageSlotClassNames.bubble,\n          styles: resolvedStyles.bubble,\n        }),\n      overrideProps: () => ({\n        ref: actionsMenuTargetRef,\n        content: (\n          <>\n            {actionMenuElement}\n            {messageContent}\n            {reactionGroupElement}\n            {readStatusElement}\n          </>\n        ),\n        onMouseEnter(e: React.SyntheticEvent) {\n          popperRef.current?.updatePosition();\n          handleMouseEnter(e);\n        },\n        onMouseLeave(e: React.SyntheticEvent) {\n          handleMouseLeave(e);\n        },\n      }),\n    });\n\n    const bubbleInsetElement = Box.create(bubbleInset || {}, {\n      defaultProps: () => ({\n        as: 'span',\n        className: chatMessageSlotClassNames.bubbleInset,\n        styles: resolvedStyles.bubbleInset,\n      }),\n      overrideProps: () => ({\n        content: (\n          <>\n            {badgeElement}\n            {bubbleInsetContent}\n            {timestampElement}\n          </>\n        ),\n      }),\n    });\n\n    const bodyElement = Box.create(body || {}, {\n      defaultProps: () =>\n        getA11Props('body', {\n          className: chatMessageSlotClassNames.body,\n          styles: resolvedStyles.body,\n        }),\n      overrideProps: () => ({\n        content: (\n          <>\n            {bubbleElement}\n            {bubbleInsetElement}\n          </>\n        ),\n      }),\n    });\n\n    elements = (\n      <>\n        {headerElement}\n        {bodyElement}\n      </>\n    );\n  } else {\n    const headerElement = createShorthand(ChatMessageHeader, header || {}, {\n      overrideProps: () => ({\n        content: (\n          <>\n            {authorElement}\n            {timestampElement}\n            {detailsElement}\n            {reactionGroupPosition === 'start' && reactionGroupElement}\n          </>\n        ),\n      }),\n    });\n\n    elements = (\n      <>\n        {actionMenuElement}\n        <div className={chatMessageSlotClassNames.bar} />\n        {badgePosition === 'start' && badgeElement}\n        {headerElement}\n        {messageContent}\n        {reactionGroupPosition === 'end' && reactionGroupElement}\n        {badgePosition === 'end' && badgeElement}\n        {readStatusElement}\n      </>\n    );\n  }\n\n  const element = (\n    <Ref innerRef={!isRefreshComfyLayout && actionsMenuTargetRef}>\n      {getA11Props.unstable_wrapWithFocusZone(\n        <ElementType\n          {...getA11Props('root', {\n            className: rootClasses,\n            onBlur: handleBlur,\n            onFocus: handleFocus,\n            onMouseEnter: handleMouseEnter,\n            onMouseLeave: handleMouseLeave,\n            onKeyDown: handleKeyDown,\n            ref,\n            ...rtlTextContainer.getAttributes({ forElements: [children] }),\n            ...unhandledProps,\n          })}\n        >\n          {childrenPropExists ? children : elements}\n        </ElementType>,\n      )}\n    </Ref>\n  );\n  setEnd();\n\n  return element;\n}) as unknown as ForwardRefWithAs<'div', HTMLDivElement, ChatMessageProps> &\n  FluentComponentStaticProps<ChatMessageProps>;\n\nChatMessage.displayName = 'ChatMessage';\n\nChatMessage.defaultProps = {\n  badgePosition: 'end',\n  positionActionMenu: true,\n  reactionGroupPosition: 'start',\n};\n\nChatMessage.propTypes = {\n  ...commonPropTypes.createCommon({ content: 'shorthand' }),\n  actionMenu: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf<'top' | 'bottom'>(['top', 'bottom'])]),\n  author: customPropTypes.itemShorthand,\n  badge: customPropTypes.itemShorthand,\n  badgePosition: PropTypes.oneOf(['start', 'end']),\n  compactBody: customPropTypes.itemShorthand,\n  density: PropTypes.oneOf<ChatDensity>(['comfy', 'compact']),\n  details: customPropTypes.itemShorthand,\n  header: customPropTypes.itemShorthand,\n  mine: PropTypes.bool,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  positionActionMenu: PropTypes.bool,\n  reactionGroup: PropTypes.oneOfType([customPropTypes.collectionShorthand, customPropTypes.itemShorthand]),\n  reactionGroupPosition: PropTypes.oneOf(['start', 'end']),\n  readStatus: customPropTypes.itemShorthand,\n  timestamp: customPropTypes.itemShorthand,\n  unstable_overflow: PropTypes.bool,\n  unstable_layout: PropTypes.oneOf(['default', 'refresh']),\n  failed: PropTypes.bool,\n  headerContent: PropTypes.node,\n  body: customPropTypes.itemShorthand,\n  bubble: customPropTypes.itemShorthand,\n  bubbleInset: customPropTypes.itemShorthand,\n  bubbleInsetContent: PropTypes.node,\n};\n\nChatMessage.handledProps = Object.keys(ChatMessage.propTypes) as any;\n\nChatMessage.create = createShorthandFactory({ Component: ChatMessage, mappedProp: 'content' });\n"],"mappings":"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"}