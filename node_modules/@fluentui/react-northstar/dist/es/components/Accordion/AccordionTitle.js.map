{"version":3,"file":"AccordionTitle.js","names":["accordionTitleBehavior","Ref","customPropTypes","PropTypes","React","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","Box","getElementType","useTelemetry","useFluentContext","useUnhandledProps","useAccessibility","useStyles","accordionTitleClassName","accordionTitleSlotClassNames","contentWrapper","AccordionTitle","forwardRef","props","ref","context","_useTelemetry","displayName","telemetry","setStart","setEnd","contentRef","children","content","indicator","disabled","accessibility","canBeCollapsed","as","active","accordionContentId","className","design","styles","variables","ElementType","unhandledProps","handledProps","getA11yProps","debugName","actionHandlers","performClick","e","preventDefault","stopPropagation","handleClick","mapPropsToBehavior","hasContent","String","rtl","_useStyles","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","_invoke","handleFocus","handleWrapperOverrides","predefinedProps","onFocus","onClick","contentWrapperElement","createElement","innerRef","create","defaultProps","overrideProps","Object","assign","Fragment","element","_extends","getAttributes","forElements","root","shorthandConfig","mappedProp","propTypes","createCommon","string","bool","wrapperShorthand","index","number","func","shorthandAllowingChildren","keys","_noop","Component"],"sources":["components/Accordion/AccordionTitle.tsx"],"sourcesContent":["import { accordionTitleBehavior, Accessibility, AccordionTitleBehaviorProps } from '@fluentui/accessibility';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ContentComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n} from '../../utils';\nimport { ComponentEventHandler, ShorthandValue, FluentComponentStaticProps } from '../../types';\nimport { Box, BoxProps } from '../Box/Box';\nimport {\n  getElementType,\n  useTelemetry,\n  useFluentContext,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface AccordionTitleSlotClassNames {\n  contentWrapper: string;\n}\n\nexport interface AccordionTitleProps\n  extends UIComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>>,\n    ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<AccordionTitleBehaviorProps>;\n\n  /** Id of the content it owns. */\n  accordionContentId?: string;\n\n  /** Whether or not the title is in the open state. */\n  active?: boolean;\n\n  /** If at least one panel needs to stay active and this title does not correspond to the last active one. */\n  canBeCollapsed?: boolean;\n\n  /** Shorthand for the content wrapper element. */\n  contentWrapper?: ShorthandValue<BoxProps>;\n\n  /** An accordion title can show it is currently unable to be interacted with. */\n  disabled?: boolean;\n\n  /** AccordionTitle index inside Accordion. */\n  index?: number;\n\n  /** Ref to the clickable element that contains the title. */\n  contentRef?: React.Ref<HTMLElement>;\n\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<AccordionTitleProps>;\n\n  /**\n   * Called after user's focus.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<AccordionTitleProps>;\n\n  /** Shorthand for the active indicator. */\n  indicator?: ShorthandValue<BoxProps>;\n}\n\nexport const accordionTitleClassName = 'ui-accordion__title';\nexport const accordionTitleSlotClassNames: AccordionTitleSlotClassNames = {\n  contentWrapper: `${accordionTitleClassName}__content-wrapper`,\n};\n\nexport type AccordionTitleStylesProps = Required<Pick<AccordionTitleProps, 'disabled' | 'active'>> & {\n  content: boolean;\n};\n\n/**\n * An AccordionTitle represents the title of Accordion's item that can be interacted with to expand or collapse the item's content.\n */\nexport const AccordionTitle = React.forwardRef<HTMLDListElement, AccordionTitleProps & { as: React.ReactNode }>(\n  (props, ref) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(AccordionTitle.displayName, context.telemetry);\n    setStart();\n    const {\n      contentRef,\n      children,\n      content,\n      indicator,\n      contentWrapper,\n      disabled,\n      accessibility,\n      canBeCollapsed,\n      as,\n      active,\n      accordionContentId,\n      className,\n      design,\n      styles,\n      variables,\n    } = props;\n    const ElementType = getElementType(props);\n    const unhandledProps = useUnhandledProps(AccordionTitle.handledProps, props);\n\n    const getA11yProps = useAccessibility<AccordionTitleBehaviorProps>(accessibility, {\n      debugName: AccordionTitle.displayName,\n      actionHandlers: {\n        performClick: e => {\n          e.preventDefault();\n          e.stopPropagation();\n          handleClick(e);\n        },\n      },\n      mapPropsToBehavior: () => ({\n        hasContent: !!content,\n        canBeCollapsed,\n        as: String(as),\n        active,\n        disabled,\n        accordionContentId,\n      }),\n      rtl: context.rtl,\n    });\n\n    const { classes, styles: resolvedStyles } = useStyles<AccordionTitleStylesProps>(AccordionTitle.displayName, {\n      className: accordionTitleClassName,\n      mapPropsToStyles: () => ({\n        disabled,\n        content: !!content,\n        active,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n    });\n\n    const handleClick = (e: React.SyntheticEvent) => {\n      if (!disabled) {\n        _.invoke(props, 'onClick', e, props);\n      }\n    };\n\n    const handleFocus = (e: React.SyntheticEvent) => {\n      e.stopPropagation();\n      _.invoke(props, 'onFocus', e, props);\n    };\n\n    const handleWrapperOverrides = predefinedProps => ({\n      onFocus: (e: React.FocusEvent) => {\n        handleFocus(e);\n        _.invoke(predefinedProps, 'onFocus', e, props);\n      },\n      onClick: (e: React.MouseEvent) => {\n        handleClick(e);\n        _.invoke(predefinedProps, 'onClick', e, props);\n      },\n    });\n\n    const contentWrapperElement = (\n      <Ref innerRef={contentRef}>\n        {Box.create(contentWrapper, {\n          defaultProps: () =>\n            getA11yProps('content', {\n              className: accordionTitleSlotClassNames.contentWrapper,\n              styles: resolvedStyles.contentWrapper,\n            }),\n          overrideProps: predefinedProps => ({\n            children: (\n              <>\n                {Box.create(indicator, {\n                  defaultProps: () =>\n                    getA11yProps('indicator', {\n                      styles: resolvedStyles.indicator,\n                    }),\n                })}\n                {Box.create(content, {\n                  defaultProps: () => ({\n                    styles: resolvedStyles.content,\n                  }),\n                })}\n              </>\n            ),\n            ...handleWrapperOverrides(predefinedProps),\n          }),\n        })}\n      </Ref>\n    );\n\n    const element = (\n      <ElementType\n        {...rtlTextContainer.getAttributes({ forElements: [children] })}\n        {...getA11yProps('root', {\n          className: classes.root,\n          ref,\n          ...unhandledProps,\n        })}\n      >\n        {childrenExist(children) ? children : contentWrapperElement}\n      </ElementType>\n    );\n    setEnd();\n    return element;\n  },\n) as unknown as ForwardRefWithAs<'div', HTMLDListElement, AccordionTitleProps> &\n  FluentComponentStaticProps<AccordionTitleProps>;\n\nAccordionTitle.displayName = 'AccordionTitle';\n\nAccordionTitle.shorthandConfig = {\n  mappedProp: 'content',\n};\n\nAccordionTitle.propTypes = {\n  ...commonPropTypes.createCommon({ content: 'shorthand' }),\n  accordionContentId: PropTypes.string,\n  active: PropTypes.bool,\n  contentRef: customPropTypes.ref,\n  contentWrapper: customPropTypes.wrapperShorthand,\n  canBeCollapsed: PropTypes.bool,\n  disabled: PropTypes.bool,\n  index: PropTypes.number,\n  onClick: PropTypes.func,\n  indicator: customPropTypes.shorthandAllowingChildren,\n};\n\nAccordionTitle.handledProps = Object.keys(AccordionTitle.propTypes) as any;\n\nAccordionTitle.defaultProps = {\n  accessibility: accordionTitleBehavior,\n  as: 'div',\n  contentRef: _.noop,\n  indicator: {},\n  contentWrapper: {},\n};\n\nAccordionTitle.create = createShorthandFactory({ Component: AccordionTitle, mappedProp: 'content' });\n"],"mappings":"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"}