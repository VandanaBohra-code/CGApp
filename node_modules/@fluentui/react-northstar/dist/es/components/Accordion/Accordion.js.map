{"version":3,"file":"Accordion.js","names":["accordionBehavior","customPropTypes","PropTypes","React","childrenExist","commonPropTypes","rtlTextContainer","createShorthand","createShorthandFactory","AccordionTitle","AccordionContent","ContainerFocusHandler","useAutoControlled","useAccessibility","useTelemetry","useFluentContext","useUnhandledProps","getElementType","useStyles","accordionClassName","accordionSlotClassNames","content","title","Accordion","forwardRef","props","ref","context","_useTelemetry","displayName","telemetry","setStart","setEnd","expanded","exclusive","accessibility","children","className","design","styles","variables","panels","renderPanelContent","renderPanelTitle","alwaysRenderPanels","alwaysActiveIndex","_useAutoControlled","defaultValue","defaultActiveIndex","value","activeIndex","initialValue","setActiveIndex","actionHandlers","moveNext","e","preventDefault","focusHandler","movePrevious","moveFirst","moveLast","getA11yProps","debugName","rtl","_useStyles","mapPropsToInlineStyles","classes","_React$useState","useState","focusedIndex","setfocusedIndex","handleNavigationFocus","index","getNavigationItemsSize","length","unhandledProps","handledProps","ElementType","itemRefs","useMemo","Array","from","createRef","useEffect","targetComponent","current","focus","defaultAccordionTitleId","_uniqueId","defaultAccordionContentId","computeNewIndex","isIndexActionable","_includes","_without","concat","handleTitleOverrides","predefinedProps","onClick","titleProps","_invoke","Object","assign","onFocus","isIndexActive","renderPanels","syncFocusedIndex","_each","panel","active","canBeCollapsed","titleId","contentId","contentRef","push","defaultProps","id","accordionContentId","overrideProps","render","accordionTitleId","element","createElement","_extends","root","getAttributes","forElements","propTypes","createCommon","every","disallow","oneOfType","arrayOf","number","bool","onTitleClick","func","onActiveIndexChange","shape","itemShorthand","as","keys","Title","Content","create","Component"],"sources":["components/Accordion/Accordion.tsx"],"sourcesContent":["import { Accessibility, accordionBehavior, AccordionBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  createShorthand,\n  createShorthandFactory,\n} from '../../utils';\nimport { AccordionTitle, AccordionTitleProps } from './AccordionTitle';\nimport { AccordionContent, AccordionContentProps } from './AccordionContent';\n\nimport {\n  ComponentEventHandler,\n  ShorthandValue,\n  ShorthandRenderFunction,\n  FluentComponentStaticProps,\n} from '../../types';\nimport { ContainerFocusHandler } from '../../utils/accessibility/FocusHandling/FocusContainer';\nimport {\n  useAutoControlled,\n  useAccessibility,\n  useTelemetry,\n  useFluentContext,\n  useUnhandledProps,\n  getElementType,\n  useStyles,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface AccordionSlotClassNames {\n  content: string;\n  title: string;\n}\n\nexport interface AccordionProps extends UIComponentProps, ChildrenComponentProps {\n  /** Index of the currently active panel. */\n  activeIndex?: number[] | number;\n\n  /** Initial activeIndex value. */\n  defaultActiveIndex?: number[] | number;\n\n  /** Only allow one panel to be expanded at a time. */\n  exclusive?: boolean;\n\n  /** At least one panel should be expanded at any time. */\n  expanded?: boolean;\n\n  /**\n   * Called when the active index of the Accordion changes.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props, with `activeIndex` reflecting the new state.\n   */\n  onActiveIndexChange?: ComponentEventHandler<AccordionProps>;\n\n  /**\n   * Called when a panel title is clicked.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All item props.\n   */\n  onTitleClick?: ComponentEventHandler<AccordionProps>;\n\n  /** Shorthand array of props for Accordion. */\n  panels?: {\n    content: ShorthandValue<AccordionContentProps>;\n    title: ShorthandValue<AccordionTitleProps>;\n  }[];\n\n  /**\n   * A custom renderer for each Accordion's panel title.\n   *\n   * @param Component - The panel's component type.\n   * @param props - The panel's computed props.\n   */\n  renderPanelTitle?: ShorthandRenderFunction<AccordionTitleProps>;\n\n  /**\n   * A custom renderer for each Accordion's panel content.\n   *\n   * @param Component - The panel's component type.\n   * @param props - The panel's computed props.\n   */\n  renderPanelContent?: ShorthandRenderFunction<AccordionContentProps>;\n\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<AccordionBehaviorProps>;\n\n  /** Manage if panels should be rendered always or based on their state. */\n  alwaysRenderPanels?: boolean;\n}\n\nexport type AccordionStylesProps = never;\nexport const accordionClassName = 'ui-accordion';\nexport const accordionSlotClassNames: AccordionSlotClassNames = {\n  content: `${accordionClassName}__content`,\n  title: `${accordionClassName}__title`,\n};\n\n/**\n * An Accordion represents stacked set of content sections, with action elements to toggle the display of these sections.\n *\n * @accessibility\n * Implements [ARIA Accordion](https://www.w3.org/TR/wai-aria-practices-1.1/#accordion) design pattern (keyboard navigation not yet supported).\n */\nexport const Accordion = React.forwardRef<HTMLDListElement, AccordionProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Accordion.displayName, context.telemetry);\n  setStart();\n  const {\n    expanded,\n    exclusive,\n    accessibility,\n    children,\n    className,\n    design,\n    styles,\n    variables,\n    panels,\n    renderPanelContent,\n    renderPanelTitle,\n    alwaysRenderPanels,\n  } = props;\n  const alwaysActiveIndex = expanded ? 0 : -1;\n\n  const [activeIndex, setActiveIndex] = useAutoControlled({\n    defaultValue: props.defaultActiveIndex,\n    value: props.activeIndex,\n    initialValue: exclusive ? alwaysActiveIndex : [alwaysActiveIndex],\n  });\n\n  const actionHandlers = {\n    moveNext: e => {\n      e.preventDefault();\n      focusHandler.moveNext();\n    },\n    movePrevious: e => {\n      e.preventDefault();\n      focusHandler.movePrevious();\n    },\n    moveFirst: e => {\n      e.preventDefault();\n      focusHandler.moveFirst();\n    },\n    moveLast: e => {\n      e.preventDefault();\n      focusHandler.moveLast();\n    },\n  };\n\n  const getA11yProps = useAccessibility<AccordionBehaviorProps>(accessibility, {\n    debugName: Accordion.displayName,\n    actionHandlers,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<AccordionStylesProps>(Accordion.displayName, {\n    className: accordionClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const [focusedIndex, setfocusedIndex] = React.useState<number>();\n\n  const handleNavigationFocus = (index: number) => {\n    setfocusedIndex(index);\n  };\n\n  const getNavigationItemsSize = () => props.panels.length;\n  const unhandledProps = useUnhandledProps(Accordion.handledProps, props);\n  const ElementType = getElementType(props);\n\n  const focusHandler: ContainerFocusHandler = new ContainerFocusHandler(\n    getNavigationItemsSize,\n    handleNavigationFocus,\n    true,\n  );\n\n  const itemRefs = React.useMemo<React.RefObject<HTMLElement>[]>(\n    () => Array.from({ length: panels?.length }, () => React.createRef()),\n    // As we are using \"panels.length\" it's fine to have dependency on them\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [panels?.length],\n  );\n\n  React.useEffect(() => {\n    const targetComponent = itemRefs[focusedIndex] && itemRefs[focusedIndex].current;\n    targetComponent && targetComponent.focus();\n  }, [itemRefs, focusedIndex]);\n\n  const defaultAccordionTitleId = React.useMemo(() => _.uniqueId('accordion-title-'), []);\n  const defaultAccordionContentId = React.useMemo(() => _.uniqueId('accordion-content-'), []);\n\n  const computeNewIndex = (index: number): number | number[] => {\n    if (!isIndexActionable(index)) {\n      return activeIndex;\n    }\n\n    if (exclusive) return index === activeIndex ? -1 : index;\n    // check to see if index is in array, and remove it, if not then add it\n    return _.includes(activeIndex as number[], index)\n      ? _.without(activeIndex as number[], index)\n      : [...(activeIndex as number[]), index];\n  };\n\n  const handleTitleOverrides = (predefinedProps: AccordionTitleProps) => ({\n    onClick: (e: React.SyntheticEvent, titleProps: AccordionTitleProps) => {\n      const { index } = titleProps;\n      const activeIndex = computeNewIndex(index);\n      setActiveIndex(activeIndex);\n      setfocusedIndex(index);\n\n      _.invoke(props, 'onActiveIndexChange', e, { ...props, activeIndex });\n      _.invoke(predefinedProps, 'onClick', e, titleProps);\n      _.invoke(props, 'onTitleClick', e, titleProps);\n    },\n    onFocus: (e: React.SyntheticEvent, titleProps: AccordionTitleProps) => {\n      _.invoke(predefinedProps, 'onFocus', e, titleProps);\n      setfocusedIndex(predefinedProps.index);\n    },\n  });\n\n  const isIndexActive = (index: number): boolean => {\n    return exclusive ? activeIndex === index : _.includes(activeIndex as number[], index);\n  };\n\n  /**\n   * Checks if panel at index can be actioned upon. Used in the case of expanded accordion,\n   * when at least a panel needs to stay active. Will return false if expanded prop is true,\n   * index is active and either it's an exclusive accordion or if there are no other active\n   * panels open besides this one.\n   *\n   * @param index - The index of the panel.\n   * @returns If the panel can be set active/inactive.\n   */\n  const isIndexActionable = (index: number): boolean => {\n    if (!isIndexActive(index)) {\n      return true;\n    }\n\n    return !expanded || (!exclusive && (activeIndex as number[]).length > 1);\n  };\n\n  const renderPanels = () => {\n    const children: any[] = [];\n    focusHandler.syncFocusedIndex(focusedIndex);\n    _.each(panels, (panel, index) => {\n      const { content, title } = panel;\n      const active = isIndexActive(+index);\n      const canBeCollapsed = isIndexActionable(+index);\n      const titleId = title['id'] || `${defaultAccordionTitleId}${index}`;\n      const contentId = content['id'] || `${defaultAccordionContentId}${index}`;\n      const contentRef = itemRefs[index];\n\n      children.push(\n        createShorthand(AccordionTitle, title, {\n          defaultProps: () => ({\n            className: accordionSlotClassNames.title,\n            active,\n            index: +index,\n            contentRef,\n            canBeCollapsed,\n            id: titleId,\n            accordionContentId: contentId,\n          }),\n          overrideProps: handleTitleOverrides,\n          render: renderPanelTitle,\n        }),\n      );\n      if (alwaysRenderPanels || active) {\n        children.push(\n          createShorthand(AccordionContent, content, {\n            defaultProps: () => ({\n              className: accordionSlotClassNames.content,\n              active,\n              id: contentId,\n              accordionTitleId: titleId,\n            }),\n            render: renderPanelContent,\n          }),\n        );\n      }\n    });\n    return children;\n  };\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n        ref,\n      })}\n      {...rtlTextContainer.getAttributes({ forElements: [children] })}\n    >\n      {childrenExist(children) ? children : renderPanels()}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n}) as unknown as ForwardRefWithAs<'dl', HTMLDListElement, AccordionProps> &\n  FluentComponentStaticProps<AccordionProps> & {\n    Title: typeof AccordionTitle;\n    Content: typeof AccordionContent;\n  };\n\nAccordion.displayName = 'Accordion';\n\nAccordion.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  activeIndex: customPropTypes.every([\n    customPropTypes.disallow(['children']),\n    PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number]),\n  ]),\n  defaultActiveIndex: customPropTypes.every([\n    customPropTypes.disallow(['children']),\n    PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number]),\n  ]),\n  exclusive: PropTypes.bool,\n  expanded: PropTypes.bool,\n  onTitleClick: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.func]),\n  onActiveIndexChange: PropTypes.func,\n  panels: customPropTypes.every([\n    customPropTypes.disallow(['children']),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        content: customPropTypes.itemShorthand,\n        title: customPropTypes.itemShorthand,\n      }),\n    ),\n  ]),\n\n  renderPanelTitle: PropTypes.func,\n  renderPanelContent: PropTypes.func,\n};\n\nAccordion.defaultProps = {\n  accessibility: accordionBehavior,\n  as: 'dl',\n};\n\nAccordion.handledProps = Object.keys(Accordion.propTypes) as any;\nAccordion.Title = AccordionTitle;\nAccordion.Content = AccordionContent;\nAccordion.create = createShorthandFactory({\n  Component: Accordion,\n});\n"],"mappings":"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"}