{"version":3,"file":"FormField.js","names":["formFieldBehavior","customPropTypes","PropTypes","React","childrenExist","createShorthandFactory","commonPropTypes","getOrGenerateIdFromShorthand","Text","Input","Box","getElementType","useUnhandledProps","useFluentContext","useTelemetry","useStyles","useAccessibility","formFieldClassName","formFieldMessageClassName","FormField","forwardRef","props","ref","context","_useTelemetry","displayName","telemetry","setStart","setEnd","children","control","id","label","message","name","required","type","className","design","styles","variables","inline","errorMessage","ElementType","unhandledProps","handledProps","messageId","useRef","current","labelId","getA11yProps","accessibility","debugName","mapPropsToBehavior","hasErrorMessage","rtl","_useStyles","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","labelElement","create","defaultProps","as","htmlFor","messageElement","controlElement","error","shouldControlAppearFirst","content","createElement","Fragment","element","Object","assign","root","propTypes","createCommon","shorthandAllowingChildren","string","bool","itemShorthand","keys","Component","mappedProp"],"sources":["components/Form/FormField.tsx"],"sourcesContent":["import { Accessibility, FormFieldBehaviorProps, formFieldBehavior } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  getOrGenerateIdFromShorthand,\n} from '../../utils';\nimport { ShorthandValue, FluentComponentStaticProps } from '../../types';\nimport { Text, TextProps } from '../Text/Text';\nimport { Input } from '../Input/Input';\nimport { Box, BoxProps } from '../Box/Box';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useFluentContext,\n  useTelemetry,\n  useStyles,\n  useAccessibility,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface FormFieldProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<FormFieldBehaviorProps>;\n\n  /**\n   * @deprecated\n   * A control for the form field.\n   */\n  control?: ShorthandValue<BoxProps>;\n\n  /** The HTML input id. This will be set on the control element and will be use for linking it with the label for correct accessibility. */\n  id?: string;\n\n  /** A field can have its label next to instead of above it. */\n  inline?: boolean;\n\n  /** A label for the form field. */\n  label?: ShorthandValue<TextProps>;\n\n  /** Text message that will be displayed below the control (can be used for error, warning, success messages). */\n  message?: ShorthandValue<TextProps>;\n\n  /** The HTML input name. */\n  name?: string;\n\n  /** A field can show that input is mandatory. */\n  required?: boolean;\n\n  /** The HTML input type. */\n  type?: string;\n\n  /** Message to be shown when input has error */\n  errorMessage?: ShorthandValue<TextProps>;\n}\n\nexport const formFieldClassName = 'ui-form__field';\nexport const formFieldMessageClassName = 'ui-form__field__message';\n\nexport type FormFieldStylesProps = Required<Pick<FormFieldProps, 'type' | 'inline' | 'required'>> & {\n  hasErrorMessage: boolean;\n};\n\n/**\n * A FormField represents a Form element containing a label and an input.\n */\nexport const FormField = React.forwardRef<HTMLDivElement, FormFieldProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(FormField.displayName, context.telemetry);\n  setStart();\n\n  const {\n    children,\n    control,\n    id,\n    label,\n    message,\n    name,\n    required,\n    type,\n    className,\n    design,\n    styles,\n    variables,\n    inline,\n    errorMessage,\n  } = props;\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(FormField.handledProps, props);\n  const messageId = React.useRef<string>();\n  messageId.current = getOrGenerateIdFromShorthand('error-message-', message || errorMessage, messageId.current);\n  const labelId = React.useRef<string>();\n  labelId.current = getOrGenerateIdFromShorthand('form-label-', id, labelId.current);\n\n  const getA11yProps = useAccessibility<FormFieldBehaviorProps>(props.accessibility, {\n    debugName: FormField.displayName,\n    mapPropsToBehavior: () => ({\n      hasErrorMessage: !!errorMessage,\n      messageId: messageId.current,\n      labelId: labelId.current,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<FormFieldStylesProps>(FormField.displayName, {\n    className: formFieldClassName,\n    mapPropsToStyles: () => ({\n      type,\n      inline,\n      required,\n      hasErrorMessage: !!errorMessage,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const labelElement = Text.create(label, {\n    defaultProps: () =>\n      getA11yProps('label', {\n        as: 'label',\n        htmlFor: id,\n        id: labelId.current,\n        styles: resolvedStyles.label,\n      }),\n  });\n\n  const messageElement = Text.create(errorMessage || message, {\n    defaultProps: () =>\n      getA11yProps('message', {\n        className: formFieldMessageClassName,\n        id: messageId.current,\n        styles: resolvedStyles.message,\n      }),\n  });\n\n  const controlElement = Box.create(control || {}, {\n    defaultProps: () =>\n      getA11yProps('control', {\n        required,\n        name,\n        id,\n        type,\n        error: !!errorMessage || null,\n        styles: resolvedStyles.control,\n      }),\n  });\n\n  const shouldControlAppearFirst = () => {\n    return type && (type === 'checkbox' || type === 'radio');\n  };\n\n  const content = (\n    <>\n      {shouldControlAppearFirst() && controlElement}\n      {labelElement}\n      {!shouldControlAppearFirst() && controlElement}\n      {messageElement}\n    </>\n  );\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n}) as unknown as ForwardRefWithAs<'div', HTMLDivElement, FormFieldProps> & FluentComponentStaticProps<FormFieldProps>;\n\nFormField.displayName = 'FormField';\n\nFormField.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  control: customPropTypes.shorthandAllowingChildren,\n  id: PropTypes.string,\n  inline: PropTypes.bool,\n  label: customPropTypes.itemShorthand,\n  message: customPropTypes.itemShorthand,\n  name: PropTypes.string,\n  required: PropTypes.bool,\n  type: PropTypes.string,\n  errorMessage: customPropTypes.shorthandAllowingChildren,\n};\n\nFormField.handledProps = Object.keys(FormField.propTypes) as any;\n\nFormField.defaultProps = {\n  accessibility: formFieldBehavior,\n  control: { as: Input },\n};\n\nFormField.create = createShorthandFactory({ Component: FormField, mappedProp: 'label' });\n"],"mappings":"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"}