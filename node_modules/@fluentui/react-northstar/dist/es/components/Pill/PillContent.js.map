{"version":3,"file":"PillContent.js","names":["React","PropTypes","getElementType","useUnhandledProps","useAccessibility","useFluentContext","useStyles","useTelemetry","childrenExist","commonPropTypes","rtlTextContainer","pillContentClassName","PillContent","forwardRef","props","ref","context","_useTelemetry","displayName","telemetry","setStart","setEnd","accessibility","children","className","content","design","styles","variables","size","actionable","getA11Props","debugName","rtl","_useStyles","mapPropsToStyles","mapPropsToInlineStyles","classes","ElementType","unhandledProps","handledProps","element","createElement","Object","assign","root","getAttributes","forElements","propTypes","createCommon","bool","keys","defaultProps","as","shorthandConfig","mappedProp"],"sources":["components/Pill/PillContent.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Accessibility } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport {\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  SizeValue,\n} from '../../utils';\n\nimport { FluentComponentStaticProps } from '../../types';\n\nexport interface PillContentProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /**\n   * A Pill can be sized.\n   */\n  size?: Extract<SizeValue, 'smaller' | 'small' | 'medium'>;\n\n  /**\n   * A Pill can be actionable.\n   */\n  actionable?: boolean;\n}\n\nexport type PillContentStylesProps = Required<Pick<PillContentProps, 'size' | 'actionable'>>;\nexport const pillContentClassName = 'ui-pillcontent';\n\n/**\n * A PillContent allows user to classify content.\n */\nexport const PillContent = React.forwardRef<HTMLSpanElement, PillContentProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(PillContent.displayName, context.telemetry);\n  setStart();\n\n  const { accessibility, children, className, content, design, styles, variables, size, actionable } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: PillContent.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<PillContentStylesProps>(PillContent.displayName, {\n    className: pillContentClassName,\n    mapPropsToStyles: () => ({ size, actionable }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(PillContent.handledProps, props);\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        ref,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n}) as unknown as ForwardRefWithAs<'span', HTMLSpanElement, PillContentProps> &\n  FluentComponentStaticProps<PillContentProps>;\n\nPillContent.displayName = 'PillContent';\n\nPillContent.propTypes = {\n  ...commonPropTypes.createCommon(),\n  actionable: PropTypes.bool,\n};\n\nPillContent.handledProps = Object.keys(PillContent.propTypes) as any;\n\nPillContent.defaultProps = {\n  as: 'span',\n};\n\nPillContent.shorthandConfig = {\n  mappedProp: 'content',\n};\n"],"mappings":"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"}