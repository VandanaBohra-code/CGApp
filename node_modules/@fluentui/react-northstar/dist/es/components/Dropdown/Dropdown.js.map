{"version":3,"file":"Dropdown.js","names":["getElementType","useAutoControlled","useStyles","useUnhandledProps","useFluentContext","useTelemetry","useMergedRefs","useIsomorphicLayoutEffect","handleRef","Ref","customPropTypes","indicatorBehavior","getCode","keyboardKey","SpacebarKey","React","PropTypes","cx","computeScrollIntoView","Downshift","commonPropTypes","isFromKeyboard","detectIsFromKeyboard","createShorthand","setWhatInputSource","List","DropdownItem","DropdownSelectedItem","DropdownSearchInput","Button","screenReaderContainerStyles","Box","Portal","ALIGNMENTS","POSITIONS","Popper","partitionPopperPropsFromShorthand","AUTOSIZES","CloseIcon","ChevronDownIcon","dropdownClassName","dropdownSlotClassNames","clearIndicator","container","toggleIndicator","item","itemsCount","itemsList","searchInput","selectedItem","selectedItems","triggerButton","a11yStatusCleanupTime","charKeyPressedCleanupTime","normalizeValue","multiple","rawValue","normalizedValue","Array","isArray","slice","getFilteredValues","options","items","itemToString","itemToValue","search","searchQuery","value","filteredItemsByValue","_differenceBy","filteredItemStrings","_map","filteredItem","toLowerCase","_isFunction","filteredItems","filter","indexOf","isEmpty","prop","props","_get","Dropdown","forwardRef","ref","_context$target3","context","_useTelemetry","displayName","telemetry","setStart","setEnd","ariaLabelledby","ariaDescribedby","ariaInvalid","allowFreeform","clearable","checkable","checkableIndicator","className","design","disabled","error","fluid","getA11ySelectionMessage","a11ySelectedItemsMessage","getA11yStatusMessage","inline","inverted","highlightFirstItemOnOpen","headerMessage","moveFocusOnTab","noResultsMessage","loading","loadingMessage","placeholder","renderItem","renderSelectedItem","styles","variables","align","flipBoundary","overflowBoundary","position","positionFixed","offset","unstable_disableTether","unstable_pinned","autoSize","_partitionPopperProps","list","positioningProps","buttonRef","useRef","inputRef","listRef","selectedItemsRef","containerRef","defaultTriggerButtonId","useMemo","_uniqueId","selectedItemsCountNarrationId","ElementType","unhandledProps","handledProps","_useAutoControlled","defaultValue","defaultActiveSelectedIndex","initialValue","undefined","activeSelectedIndex","setActiveSelectedIndex","_useAutoControlled2","defaultHighlightedIndex","highlightedIndex","setHighlightedIndex","_useAutoControlled3","defaultOpen","open","setOpen","_useAutoControlled4","defaultSearchQuery","setSearchQuery","_useAutoControlled5","setValue","_React$useState","useState","a11ySelectionStatus","setA11ySelectionStatus","_React$useState2","focused","setFocused","_React$useState3","setIsFromKeyboard","_React$useState4","itemIsFromKeyboard","setItemIsFromKeyboard","_React$useState5","startingString","setStartingString","inListbox","_getFilteredValues","_useStyles","mapPropsToStyles","_positioningProps$pos","isEmptyClearIndicator","hasToggleIndicator","hasItemsSelected","length","mapPropsToInlineStyles","rtl","classes","resolvedStyles","popperRef","_popperRef$current","current","updatePosition","clearA11ySelectionMessage","_debounce","clearStartingString","handleChange","e","_invoke","Object","assign","handleOnBlur","target","renderTriggerButton","getToggleButtonProps","content","getSelectedItemAsString","triggerButtonId","triggerButtonContentId","triggerButtonProps","onFocus","handleTriggerButtonOrListFocus","onBlur","handleTriggerButtonBlur","onKeyDown","handleTriggerButtonKeyDown","Boolean","join","onClick","restTriggerButtonProps","_objectWithoutPropertiesLoose","_excluded","createElement","innerRef","defaultProps","id","overrideProps","predefinedProps","resolvedContent","_isPlainObject","children","renderSearchInput","accessibilityComboboxProps","getInputProps","selectItemAtIndex","toggleMenu","noPlaceholder","isMac","test","navigator","platform","comboboxProps","create","handleSearchInputOverrides","renderSelectedItemsCountNarration","narration","style","renderItemsList","getMenuProps","getItemProps","renderItems","_getMenuProps","refKey","suppressRefError","accessibilityMenuProps","_excluded2","accessibilityInputProps","handleListKeyDown","listElement","_extends","enabled","targetRef","positioningDependencies","tabIndex","listProps","handleListBlur","footerItem","renderItemsListFooter","headerItem","renderItemsListHeader","index","selected","active","hasOwnProperty","key","header","handleItemOverrides","render","push","concat","selectedItemsCountNarration","renderSelectedItems","map","isSelectedItemActive","handleSelectedItemOverrides","Fragment","role","downshiftStateReducer","state","changes","activeElement","type","stateChangeTypes","blurButton","isOpen","handleInputValueChange","inputValue","stateAndHelpers","itemSelected","setStateAndInvokeHandler","handleStateChange","_context$target2","newState","changeInput","shouldValueChange","itemIndex","findIndex","i","_itemToString","_changes$inputValue","toLocaleLowerCase","startsWith","shouldMenuClose","keyDownEnter","clickItem","shouldAddHighlightedIndex","isSameItemSelected","newValue","_itemToString2","onAdd","setA11ySelectionMessage","_context$target","defaultView","setTimeout","scrollTop","scrollHeight","tryFocusTriggerButton","keyDownEscape","keyDownArrowDown","keyDownArrowUp","highlightedIndexOnArrowKeyOpen","getHighlightedIndexOnArrowKeyOpen","_isNumber","focus","mouseUp","_itemToString3","clickButton","keyDownSpaceButton","_itemToString4","itemMouseEnter","unknown","_isEmpty","handlers","accessibilityItemProps","stopPropagation","nativeEvent","stopImmediatePropagation","onRemove","dropdownSelectedItemProps","handleSelectedItemRemove","handleSelectedItemKeyDown","handleInputBlur","searchInputProps","handleInputKeyDown","Home","End","Tab","handleTabSelection","ArrowLeft","process","env","NODE_ENV","view","document","trySetLastSelectedItemAsActive","ArrowRight","Backspace","tryRemoveItemFromValue","Escape","ArrowUp","ArrowDown","Enter","onChange","node","onInputBlur","onInputKeyDown","_isNil","preventDefault","selectionStart","selectionEnd","removeItemFromValue","handleClear","tryFocusSearchInput","handleContainerClick","accessibilityInputPropsKeyDown","keyCode","keyString","String","fromCharCode","setHighlightedIndexOnCharKeyDown","previousKey","nextKey","Delete","relatedTarget","newStartingString","newHighlightedIndex","_findIndex","poppedItem","currentElement","pop","handlerNames","event","proposedValue","forEach","handlerName","isArrowUp","isArrowDown","itemsLength","useEffect","cancel","element","root","stateReducer","scrollIntoView","menu","nodeToScroll","actions","boundary","scrollMode","block","_ref","el","top","left","scrollLeft","onStateChange","onInputValueChange","labelId","environment","inputId","_ref2","getRootProps","_getRootProps","accessibilityRootPropsRest","_excluded3","showClearIndicator","accessibility","propTypes","createCommon","number","bool","shorthandAllowingChildren","string","oneOfType","itemShorthand","collectionShorthand","object","func","onOpenChange","onSearchQueryChange","onActiveSelectedIndexChange","onHighlightedIndexChange","oneOf","arrayOf","keys","outline","isValidElement","Item","SearchInput","SelectedItem"],"sources":["components/Dropdown/Dropdown.tsx"],"sourcesContent":["import {\n  getElementType,\n  useAutoControlled,\n  useStyles,\n  useUnhandledProps,\n  useFluentContext,\n  useTelemetry,\n  ForwardRefWithAs,\n  useMergedRefs,\n  useIsomorphicLayoutEffect,\n} from '@fluentui/react-bindings';\nimport { handleRef, Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { indicatorBehavior, AccessibilityAttributes, getCode, keyboardKey, SpacebarKey } from '@fluentui/accessibility';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\nimport cx from 'classnames';\nimport computeScrollIntoView from 'compute-scroll-into-view';\n\nimport { ShorthandRenderFunction, ShorthandValue, ShorthandCollection, FluentComponentStaticProps } from '../../types';\nimport Downshift, {\n  DownshiftState,\n  StateChangeOptions,\n  A11yStatusMessageOptions,\n  GetMenuPropsOptions,\n  GetPropsCommonOptions,\n  GetInputPropsOptions,\n  GetToggleButtonPropsOptions,\n  GetItemPropsOptions,\n  ControllerStateAndHelpers,\n} from 'downshift';\nimport {\n  commonPropTypes,\n  UIComponentProps,\n  isFromKeyboard as detectIsFromKeyboard,\n  createShorthand,\n  setWhatInputSource,\n} from '../../utils';\nimport { List, ListProps } from '../List/List';\nimport { DropdownItem, DropdownItemProps } from './DropdownItem';\nimport { DropdownSelectedItem, DropdownSelectedItemProps } from './DropdownSelectedItem';\nimport { DropdownSearchInput, DropdownSearchInputProps } from './DropdownSearchInput';\nimport { Button, ButtonProps } from '../Button/Button';\nimport { screenReaderContainerStyles } from '../../utils/accessibility/Styles/accessibilityStyles';\nimport { Box, BoxProps } from '../Box/Box';\nimport { Portal } from '../Portal/Portal';\nimport {\n  ALIGNMENTS,\n  POSITIONS,\n  Popper,\n  PositioningProps,\n  PopperShorthandProps,\n  partitionPopperPropsFromShorthand,\n  AutoSize,\n  AUTOSIZES,\n} from '../../utils/positioner';\nimport { CloseIcon, ChevronDownIcon } from '@fluentui/react-icons-northstar';\n\nexport interface DownshiftA11yStatusMessageOptions<Item> extends Required<A11yStatusMessageOptions<Item>> {}\n\nexport interface DropdownSlotClassNames {\n  clearIndicator: string;\n  container: string;\n  toggleIndicator: string;\n  item: string;\n  itemsCount: string;\n  itemsList: string;\n  searchInput: string;\n  selectedItem: string;\n  selectedItems: string;\n  triggerButton: string;\n}\n\nexport interface DropdownProps extends UIComponentProps<DropdownProps>, PositioningProps {\n  /** The index of the currently selected item, if the dropdown supports multiple selection. */\n  activeSelectedIndex?: number;\n\n  /** Whether the ComboBox allows freeform user input, rather than restricting to the provided options. */\n  allowFreeform?: boolean;\n\n  /** Identifies the element (or elements) that labels the current element. Will be passed to `triggerButton`. */\n  'aria-labelledby'?: AccessibilityAttributes['aria-labelledby'];\n  'aria-describedby'?: AccessibilityAttributes['aria-describedby'];\n\n  /** Indicates the entered value does not conform to the format expected by the application. Will be passed to `triggerButton`. */\n  'aria-invalid'?: AccessibilityAttributes['aria-invalid'];\n\n  /** A dropdown item can show a check indicator if it is selected. */\n  checkable?: boolean;\n\n  /** A slot for a selected indicator in the dropdown list. */\n  checkableIndicator?: ShorthandValue<BoxProps>;\n\n  /** A dropdown can be clearable to let users remove their selection. */\n  clearable?: boolean;\n\n  /** A slot for the clearing indicator. */\n  clearIndicator?: ShorthandValue<BoxProps>;\n\n  /** The initial value for the index of the currently selected item in a multiple selection. */\n  defaultActiveSelectedIndex?: number;\n\n  /** The initial value for 'open' in uncontrolled mode. */\n  defaultOpen?: boolean;\n\n  /** The initial list item index to highlight. */\n  defaultHighlightedIndex?: number;\n\n  /** The initial value for the search query if the dropdown has `search` enabled. */\n  defaultSearchQuery?: string;\n\n  /** The initial value (or value array if the array has multiple selection). */\n  defaultValue?: ShorthandValue<DropdownItemProps> | ShorthandCollection<DropdownItemProps>;\n\n  /** A dropdown can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** A dropdown can fill the width of its container. */\n  fluid?: boolean;\n\n  /** Object with callbacks for generating announcements for item selection and removal. */\n  getA11ySelectionMessage?: {\n    /**\n     * Callback that creates custom accessibility message a screen reader narrates on item added to selection.\n     * @param item - Dropdown added element.\n     */\n    onAdd?: (item: ShorthandValue<DropdownItemProps>) => string;\n    /**\n     * Callback that creates custom accessibility message a screen reader narrates on item removed from selection.\n     * @param item - Dropdown removed element.\n     */\n    onRemove?: (item: ShorthandValue<DropdownItemProps>) => string;\n    /**\n     * Callback that creates custom accessibility message about the selected items count a screen reader narrates on input field focus.\n     * @param count - number of items selected.\n     */\n    itemsCount?: (count: number) => string;\n  };\n\n  /** A label for selected items listbox. */\n  a11ySelectedItemsMessage?: string;\n\n  /**\n   * Callback that provides status announcement message with number of items in the list, using Arrow Up/Down keys to navigate through them and, if multiple, using Arrow Left/Right to navigate through selected items.\n   * @param messageGenerationProps - Object with properties to generate message from. See getA11yStatusMessage from Downshift repo.\n   */\n  getA11yStatusMessage?: (options: DownshiftA11yStatusMessageOptions<ShorthandValue<DropdownItemProps>>) => string;\n\n  /** A dropdown can highlight the first option when it opens. */\n  highlightFirstItemOnOpen?: boolean;\n\n  /** The index of the list item to highlight. */\n  highlightedIndex?: number;\n\n  /** A dropdown can be formatted to appear inline next to other elements. */\n  inline?: boolean;\n\n  /** A dropdown can have inverted colors. */\n  inverted?: boolean;\n\n  /** Array of props for generating list options (Dropdown.Item[]) and selected item labels (Dropdown.SelectedItem[]), if it's a multiple selection. */\n  items?: ShorthandCollection<DropdownItemProps>;\n\n  /**\n   * A function that converts an item to string. Used when dropdown has `search` enabled.\n   * By default, it:\n   * - returns the `header` property if it exists on an item\n   * - stringifies the item if it is a primitive type\n   */\n  itemToString?: (item: ShorthandValue<DropdownItemProps>) => string;\n\n  /** Used when comparing two items in multiple selection. Default comparison is by the header prop. */\n  itemToValue?: (item: ShorthandValue<DropdownItemProps>) => any;\n\n  /** A message to be displayed in the list header. */\n  headerMessage?: ShorthandValue<DropdownItemProps>;\n\n  /** A slot for dropdown list. */\n  list?: ShorthandValue<ListProps & { popper?: PopperShorthandProps }>;\n\n  /** A dropdown can show that it is currently loading data. */\n  loading?: boolean;\n\n  /** A message to be displayed in the list when the dropdown is loading. */\n  loadingMessage?: ShorthandValue<DropdownItemProps>;\n\n  /** When selecting an element with Tab, focus stays on the dropdown by default. If true, the focus will jump to next/previous element in DOM. Only available to multiple selection dropdowns. */\n  moveFocusOnTab?: boolean;\n\n  /** A dropdown can allow a user to select multiple items. */\n  multiple?: boolean;\n\n  /** A message to be displayed in the list when the dropdown has no items. */\n  noResultsMessage?: ShorthandValue<DropdownItemProps>;\n\n  /**\n   * Called when the dropdown's selected items index change.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and the new selected value(s).\n   */\n  onActiveSelectedIndexChange?: (event: React.MouseEvent | React.KeyboardEvent | null, data: DropdownProps) => void;\n\n  /**\n   * Called when the dropdown's highlighted index change.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and the new selected value(s).\n   */\n  onHighlightedIndexChange?: (event: React.MouseEvent | React.KeyboardEvent | null, data: DropdownProps) => void;\n\n  /**\n   * Called when the dropdown opens or closes.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props, with `open` reflecting the new open state.\n   */\n  onOpenChange?: (event: React.MouseEvent | React.KeyboardEvent | null, data: DropdownProps) => void;\n\n  /**\n   * Called when the dropdown's search query changes.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props, with `searchQuery` reflecting its new value.\n   */\n  onSearchQueryChange?: (event: React.MouseEvent | React.KeyboardEvent | null, data: DropdownProps) => void;\n\n  /**\n   * Called when the dropdown's selected item(s) change.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and the new selected value(s).\n   */\n  onChange?: (event: React.MouseEvent | React.KeyboardEvent | null, data: DropdownProps) => void;\n\n  /**\n   * Called when the focus moves out from dropdown.\n   * @param event - React's original SyntheticEvent.\n   */\n  onBlur?: (event: React.FocusEvent | null) => void;\n\n  /** A dropdown's open state can be controlled. */\n  open?: boolean;\n\n  /** A placeholder message for the input field. */\n  placeholder?: string;\n\n  /**\n   * A render function to customize how items are rendered in the dropdown.\n   *\n   * @param Component - The computed component for this slot.\n   * @param props - The computed props for this slot.\n   * @param children - The computed children for this slot.\n   */\n  renderItem?: ShorthandRenderFunction<DropdownItemProps>;\n\n  /**\n   * A custom render function for the selected item. Only applicable with the `multiple` prop.\n   *\n   * @param Component - The computed component for this slot.\n   * @param props - The computed props for this slot.\n   * @param children - The computed children for this slot.\n   */\n  renderSelectedItem?: ShorthandRenderFunction<DropdownSelectedItemProps>;\n\n  /** A dropdown can have a search field instead of trigger button. Can receive a custom search function that will replace the default equivalent. */\n  search?:\n    | boolean\n    | ((items: ShorthandCollection<DropdownItemProps>, searchQuery: string) => ShorthandCollection<DropdownItemProps>);\n\n  /** A search dropdown's input can be customized. */\n  searchInput?: ShorthandValue<DropdownSearchInputProps>;\n\n  /** Sets search query value (controlled mode). */\n  searchQuery?: string;\n\n  /** Controls the appearance of the indicator that shows/hides the list of items. */\n  toggleIndicator?: ShorthandValue<BoxProps>;\n\n  /** Controls the appearance of the trigger button if it's a selection dropdown (not a search). */\n  triggerButton?: ShorthandValue<ButtonProps>;\n\n  /** Sets the dropdown's currently selected value(s) in controlled mode. */\n  value?: ShorthandValue<DropdownItemProps> | ShorthandCollection<DropdownItemProps>;\n\n  /** Dropdown can have errors status  */\n  error?: boolean;\n}\n\nexport type DropdownStylesProps = Required<\n  Pick<DropdownProps, 'disabled' | 'error' | 'fluid' | 'inline' | 'inverted' | 'multiple' | 'position' | 'open'>\n> & {\n  focused: boolean;\n  isEmptyClearIndicator: boolean;\n  hasToggleIndicator: boolean;\n  isFromKeyboard: boolean;\n  search: boolean;\n  hasItemsSelected: boolean;\n};\n\ntype DropdownStateForInvoke = {\n  activeSelectedIndex?: number | null;\n  highlightedIndex?: number | null;\n  itemIsFromKeyboard?: boolean;\n  open?: boolean;\n  searchQuery?: string;\n  value?: ShorthandCollection<DropdownItemProps>;\n};\n\nexport const dropdownClassName = 'ui-dropdown';\nexport const dropdownSlotClassNames: DropdownSlotClassNames = {\n  clearIndicator: `${dropdownClassName}__clear-indicator`,\n  container: `${dropdownClassName}__container`,\n  toggleIndicator: `${dropdownClassName}__toggle-indicator`,\n  item: `${dropdownClassName}__item`,\n  itemsCount: `${dropdownClassName}__items-count`,\n  itemsList: `${dropdownClassName}__items-list`,\n  searchInput: `${dropdownClassName}__searchinput`,\n  selectedItem: `${dropdownClassName}__selecteditem`,\n  selectedItems: `${dropdownClassName}__selected-items`,\n  triggerButton: `${dropdownClassName}__trigger-button`,\n};\n\nconst a11yStatusCleanupTime = 500;\nconst charKeyPressedCleanupTime = 500;\n\n/** `normalizedValue` should be normalized always as it can be received from props */\nfunction normalizeValue(multiple: boolean, rawValue: DropdownProps['value']): ShorthandCollection<DropdownItemProps> {\n  const normalizedValue = Array.isArray(rawValue) ? rawValue : [rawValue];\n\n  if (multiple) {\n    return normalizedValue;\n  }\n\n  if (normalizedValue[0] === '') {\n    return [];\n  }\n\n  return normalizedValue.slice(0, 1);\n}\n\n/**\n * Used to compute the filtered items (by value and search query) and, if needed,\n * their string equivalents, in order to be used throughout the component.\n */\nfunction getFilteredValues(\n  options: Required<\n    Pick<DropdownProps, 'multiple' | 'items' | 'itemToValue' | 'itemToString' | 'search' | 'searchQuery'>\n  > & {\n    value: ShorthandCollection<DropdownItemProps>;\n  },\n) {\n  const { items, itemToString, itemToValue, multiple, search, searchQuery, value } = options;\n\n  const filteredItemsByValue = multiple ? _.differenceBy(items, value, itemToValue) : items;\n  const filteredItemStrings = _.map(filteredItemsByValue, filteredItem => itemToString(filteredItem).toLowerCase());\n\n  if (search) {\n    if (_.isFunction(search)) {\n      return {\n        filteredItems: search(filteredItemsByValue, searchQuery),\n        filteredItemStrings,\n      };\n    }\n\n    return {\n      filteredItems: filteredItemsByValue.filter(\n        item => itemToString(item).toLowerCase().indexOf(searchQuery.toLowerCase()) !== -1,\n      ),\n      filteredItemStrings,\n    };\n  }\n\n  return {\n    filteredItems: filteredItemsByValue,\n    filteredItemStrings,\n  };\n}\n\nconst isEmpty = prop => {\n  return typeof prop === 'object' && !prop.props && !_.get(prop, 'children') && !_.get(prop, 'content');\n};\n\n/**\n * A Dropdown allows user to select one or more values from a list of options.\n * Can be created with search and multi-selection capabilities.\n *\n * @accessibility\n * Implements [ARIA Combo Box](https://www.w3.org/TR/wai-aria-practices-1.1/#combobox) design pattern, uses aria-live to announce state changes.\n * @accessibilityIssues\n * [Issue 991203: VoiceOver doesn't narrate properly elements in the input/combobox](https://bugs.chromium.org/p/chromium/issues/detail?id=991203)\n * [JAWS - ESC (ESCAPE) not closing collapsible listbox (dropdown) on first time #528](https://github.com/FreedomScientific/VFO-standards-support/issues/528)\n */\nexport const Dropdown = React.forwardRef<HTMLDivElement, DropdownProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Dropdown.displayName, context.telemetry);\n\n  setStart();\n\n  const {\n    'aria-labelledby': ariaLabelledby,\n    'aria-describedby': ariaDescribedby,\n    'aria-invalid': ariaInvalid,\n    allowFreeform,\n    clearable,\n    clearIndicator,\n    checkable,\n    checkableIndicator,\n    className,\n    design,\n    disabled,\n    error,\n    fluid,\n    getA11ySelectionMessage,\n    a11ySelectedItemsMessage,\n    getA11yStatusMessage,\n    inline,\n    inverted,\n    itemToString,\n    itemToValue,\n    items,\n    highlightFirstItemOnOpen,\n    multiple,\n    headerMessage,\n    moveFocusOnTab,\n    noResultsMessage,\n    loading,\n    loadingMessage,\n    placeholder,\n    renderItem,\n    renderSelectedItem,\n    search,\n    searchInput,\n    styles,\n    toggleIndicator,\n    triggerButton,\n    variables,\n  } = props;\n\n  const {\n    align,\n    flipBoundary,\n    overflowBoundary,\n    position,\n    positionFixed,\n    offset,\n    unstable_disableTether,\n    unstable_pinned,\n    autoSize,\n  } = props; // PositioningProps passed directly to Dropdown\n  const [list, positioningProps] = partitionPopperPropsFromShorthand(props.list); // PositioningProps passed to Dropdown `list` prop's `popper` key\n\n  const buttonRef = React.useRef<HTMLElement>();\n  const inputRef = React.useRef<HTMLInputElement | undefined>() as React.MutableRefObject<HTMLInputElement | undefined>;\n  const listRef = React.useRef<HTMLElement>();\n  const selectedItemsRef = React.useRef<HTMLDivElement>();\n  const containerRef = React.useRef<HTMLDivElement>();\n\n  const defaultTriggerButtonId = React.useMemo(() => _.uniqueId('dropdown-trigger-button-'), []);\n  const selectedItemsCountNarrationId = React.useMemo(() => _.uniqueId('dropdown-selected-items-count-'), []);\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Dropdown.handledProps, props);\n\n  const [activeSelectedIndex, setActiveSelectedIndex] = useAutoControlled<number | null | undefined>({\n    defaultValue: props.defaultActiveSelectedIndex,\n    initialValue: multiple ? null : undefined,\n    value: props.activeSelectedIndex,\n  });\n  const [highlightedIndex, setHighlightedIndex] = useAutoControlled<number | null>({\n    defaultValue: props.defaultHighlightedIndex,\n    initialValue: highlightFirstItemOnOpen ? 0 : null,\n    value: props.highlightedIndex,\n  });\n  const [open, setOpen] = useAutoControlled({\n    defaultValue: props.defaultOpen,\n    initialValue: false,\n    value: props.open,\n  });\n  const [searchQuery, setSearchQuery] = useAutoControlled<string | undefined>({\n    defaultValue: props.defaultSearchQuery,\n    initialValue: search ? '' : undefined,\n    value: props.searchQuery,\n  });\n  const [rawValue, setValue] = useAutoControlled({\n    defaultValue: props.defaultValue,\n    initialValue: [],\n    value: props.value,\n  });\n  const value = normalizeValue(multiple, rawValue);\n\n  const [a11ySelectionStatus, setA11ySelectionStatus] = React.useState('');\n  const [focused, setFocused] = React.useState(false);\n  const [isFromKeyboard, setIsFromKeyboard] = React.useState(false);\n  const [itemIsFromKeyboard, setItemIsFromKeyboard] = React.useState(false);\n  const [startingString, setStartingString] = React.useState<string | undefined>(search ? undefined : '');\n  // used for keeping track of the source of the input, as Downshift does not pass events to the handlers\n  // for free form dropdown:\n  // - if the value is changed based on search query change (from input), accept any value even if not in the list\n  // - if the value is changed based on selection from list, use the value from the list item\n  const inListbox = React.useRef(false);\n\n  const { filteredItems, filteredItemStrings } = getFilteredValues({\n    itemToString,\n    itemToValue,\n    items,\n    multiple,\n    search,\n    searchQuery,\n    value,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<DropdownStylesProps>(Dropdown.displayName, {\n    className: dropdownClassName,\n    mapPropsToStyles: () => ({\n      disabled,\n      error,\n      fluid,\n      focused,\n      isEmptyClearIndicator: isEmpty(clearIndicator),\n      hasToggleIndicator: !!toggleIndicator,\n      inline,\n      inverted,\n      isFromKeyboard,\n      multiple,\n      open,\n      position: positioningProps?.position ?? position,\n      search: !!search,\n      hasItemsSelected: value.length > 0,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const popperRef = useMergedRefs(props.popperRef);\n\n  useIsomorphicLayoutEffect(() => {\n    popperRef.current?.updatePosition();\n  }, [filteredItems?.length, popperRef]);\n\n  const clearA11ySelectionMessage = React.useMemo(\n    () =>\n      _.debounce(() => {\n        setA11ySelectionStatus('');\n      }, a11yStatusCleanupTime),\n    [],\n  );\n  const clearStartingString = React.useMemo(\n    () =>\n      _.debounce(() => {\n        setStartingString('');\n      }, charKeyPressedCleanupTime),\n    [],\n  );\n\n  const handleChange = (e: React.SyntheticEvent) => {\n    // Dropdown component doesn't present any `input` component in markup, however all of our\n    // components should handle events transparently.\n    _.invoke(props, 'onChange', e, { ...props, value });\n  };\n\n  const handleOnBlur = (e: React.SyntheticEvent) => {\n    // Dropdown component doesn't present any `input` component in markup, however all of our\n    // components should handle events transparently.\n    if (e.target !== buttonRef.current) {\n      _.invoke(props, 'onBlur', e, props);\n    }\n  };\n\n  const renderTriggerButton = (getToggleButtonProps: (options?: GetToggleButtonPropsOptions) => any): JSX.Element => {\n    const content = getSelectedItemAsString(value[0]);\n    const triggerButtonId = triggerButton['id'] || defaultTriggerButtonId;\n    const triggerButtonContentId = `${triggerButtonId}__content`;\n    const triggerButtonProps = getToggleButtonProps({\n      disabled,\n      onFocus: handleTriggerButtonOrListFocus,\n      onBlur: handleTriggerButtonBlur,\n      onKeyDown: e => {\n        handleTriggerButtonKeyDown(e);\n      },\n      'aria-invalid': ariaInvalid,\n      'aria-label': undefined,\n      'aria-labelledby': [ariaLabelledby, triggerButtonContentId].filter(Boolean).join(' '),\n      ...(open && { 'aria-expanded': true }),\n    });\n\n    const { onClick, onFocus, onBlur, onKeyDown, ...restTriggerButtonProps } = triggerButtonProps;\n\n    return (\n      <Ref innerRef={buttonRef}>\n        {createShorthand(Button, triggerButton, {\n          defaultProps: () => ({\n            className: dropdownSlotClassNames.triggerButton,\n            disabled,\n            id: triggerButtonId,\n            fluid: true,\n            styles: resolvedStyles.triggerButton,\n            ...restTriggerButtonProps,\n          }),\n          overrideProps: (predefinedProps: ButtonProps) => {\n            // It can be a shorthand\n            const resolvedContent = _.isPlainObject(predefinedProps.content)\n              ? (predefinedProps.content as {})\n              : predefinedProps.content\n              ? { children: predefinedProps.content }\n              : {};\n\n            return {\n              content:\n                // If `null` is passed we should not render the slot\n                predefinedProps.content === null ? null : { content, id: triggerButtonContentId, ...resolvedContent },\n              onClick: e => {\n                onClick(e);\n                _.invoke(predefinedProps, 'onClick', e, predefinedProps);\n              },\n              onFocus: e => {\n                onFocus(e);\n                _.invoke(predefinedProps, 'onFocus', e, predefinedProps);\n              },\n              onBlur: e => {\n                if (!disabled) {\n                  onBlur(e);\n                }\n\n                _.invoke(predefinedProps, 'onBlur', e, predefinedProps);\n              },\n              onKeyDown: e => {\n                if (!disabled) {\n                  onKeyDown(e);\n                }\n\n                _.invoke(predefinedProps, 'onKeyDown', e, predefinedProps);\n              },\n            };\n          },\n        })}\n      </Ref>\n    );\n  };\n\n  const renderSearchInput = (\n    accessibilityComboboxProps: Object,\n    highlightedIndex: number,\n    getInputProps: (options?: GetInputPropsOptions) => any,\n    selectItemAtIndex: (index: number, otherStateToSet?: Partial<StateChangeOptions<any>>, cb?: () => void) => void,\n    toggleMenu: () => void,\n    variables,\n  ): JSX.Element => {\n    const noPlaceholder = searchQuery?.length > 0 || (multiple && value.length > 0);\n    const isMac = /Mac|iPod|iPhone|iPad/.test(navigator.platform);\n    const comboboxProps = isMac\n      ? { ...accessibilityComboboxProps, 'aria-owns': undefined }\n      : accessibilityComboboxProps;\n\n    return DropdownSearchInput.create(searchInput || {}, {\n      defaultProps: () => ({\n        className: dropdownSlotClassNames.searchInput,\n        placeholder: noPlaceholder ? '' : placeholder,\n        inline,\n        variables,\n        disabled,\n      }),\n      overrideProps: handleSearchInputOverrides(\n        highlightedIndex,\n        selectItemAtIndex,\n        toggleMenu,\n        comboboxProps,\n        getInputProps,\n      ),\n    });\n  };\n\n  const renderSelectedItemsCountNarration = id => {\n    // Get narration only if callback is provided, at least one item is selected and only in multiple case\n    if (!getA11ySelectionMessage || !getA11ySelectionMessage.itemsCount || value.length === 0 || !multiple) {\n      return null;\n    }\n    const narration = getA11ySelectionMessage.itemsCount(value.length);\n    return (\n      <span id={id} className={dropdownSlotClassNames.itemsCount} style={screenReaderContainerStyles}>\n        {narration}\n      </span>\n    );\n  };\n  const renderItemsList = (\n    highlightedIndex: number,\n    toggleMenu: () => void,\n    selectItemAtIndex: (index: number) => void,\n    getMenuProps: (options?: GetMenuPropsOptions, otherOptions?: GetPropsCommonOptions) => any,\n    getItemProps: (options: GetItemPropsOptions<ShorthandValue<DropdownItemProps>>) => any,\n    getInputProps: (options?: GetInputPropsOptions) => any,\n  ) => {\n    const items = open ? renderItems(getItemProps) : [];\n    const { innerRef, ...accessibilityMenuProps } = getMenuProps({ refKey: 'innerRef' }, { suppressRefError: true });\n\n    // If it's just a selection, some attributes and listeners from Downshift input need to go on the menu list.\n    if (!search) {\n      const accessibilityInputProps = getInputProps();\n\n      accessibilityMenuProps['aria-activedescendant'] = accessibilityInputProps['aria-activedescendant'];\n      accessibilityMenuProps['onKeyDown'] = e => {\n        handleListKeyDown(e, highlightedIndex, accessibilityInputProps['onKeyDown'], toggleMenu, selectItemAtIndex);\n      };\n    }\n\n    return (\n      <Ref\n        innerRef={(listElement: HTMLElement) => {\n          handleRef(listRef, listElement);\n          handleRef(innerRef, listElement);\n        }}\n      >\n        <Popper\n          rtl={context.rtl}\n          enabled={open}\n          targetRef={containerRef}\n          positioningDependencies={[items.length]}\n          // positioning props:\n          align={align}\n          flipBoundary={flipBoundary}\n          overflowBoundary={overflowBoundary}\n          popperRef={popperRef}\n          position={position}\n          positionFixed={positionFixed}\n          offset={offset}\n          unstable_disableTether={unstable_disableTether}\n          unstable_pinned={unstable_pinned}\n          autoSize={autoSize}\n          {...positioningProps}\n        >\n          {List.create(list, {\n            defaultProps: () => ({\n              className: dropdownSlotClassNames.itemsList,\n              ...accessibilityMenuProps,\n              styles: resolvedStyles.list,\n              items,\n              tabIndex: search ? undefined : -1, // needs to be focused when trigger button is activated.\n              'aria-hidden': !open,\n            }),\n\n            overrideProps: (predefinedProps: ListProps) => ({\n              onFocus: (e: React.SyntheticEvent<HTMLElement>, listProps: ListProps) => {\n                handleTriggerButtonOrListFocus();\n                _.invoke(predefinedProps, 'onClick', e, listProps);\n              },\n              onBlur: (e: React.SyntheticEvent<HTMLElement>, listProps: ListProps) => {\n                handleListBlur(e);\n                _.invoke(predefinedProps, 'onBlur', e, listProps);\n              },\n            }),\n          })}\n        </Popper>\n      </Ref>\n    );\n  };\n\n  const renderItems = (getItemProps: (options: GetItemPropsOptions<ShorthandValue<DropdownItemProps>>) => any) => {\n    const footerItem = renderItemsListFooter();\n    const headerItem = renderItemsListHeader();\n\n    const items = _.map(filteredItems, (item, index) => ({\n      children: () => {\n        const selected = value.indexOf(item) !== -1;\n\n        return DropdownItem.create(item, {\n          defaultProps: () => ({\n            className: dropdownSlotClassNames.item,\n            active: highlightedIndex === index,\n            selected,\n            checkable,\n            checkableIndicator,\n            isFromKeyboard: itemIsFromKeyboard,\n            variables,\n            ...(typeof item === 'object' &&\n              !item.hasOwnProperty('key') && {\n                key: (item as any).header,\n              }),\n          }),\n          overrideProps: handleItemOverrides(item, index, getItemProps, selected),\n          render: renderItem,\n        });\n      },\n    }));\n\n    if (footerItem) {\n      items.push(footerItem);\n    }\n\n    return headerItem ? [headerItem, ...items] : items;\n  };\n\n  const renderItemsListHeader = () => {\n    if (headerMessage) {\n      return {\n        children: () =>\n          DropdownItem.create(headerMessage, {\n            defaultProps: () => ({\n              key: 'items-list-footer-message',\n              styles: resolvedStyles.headerMessage,\n            }),\n          }),\n      };\n    }\n\n    return null;\n  };\n\n  const renderItemsListFooter = () => {\n    if (loading) {\n      return {\n        children: () =>\n          DropdownItem.create(loadingMessage, {\n            defaultProps: () => ({\n              key: 'loading-message',\n              styles: resolvedStyles.loadingMessage,\n            }),\n          }),\n      };\n    }\n\n    if (filteredItems && filteredItems.length === 0) {\n      return {\n        children: () =>\n          DropdownItem.create(noResultsMessage, {\n            defaultProps: () => ({\n              key: 'no-results-message',\n              styles: resolvedStyles.noResultsMessage,\n            }),\n          }),\n      };\n    }\n\n    return null;\n  };\n\n  const selectedItemsCountNarration = renderSelectedItemsCountNarration(selectedItemsCountNarrationId);\n  const renderSelectedItems = () => {\n    if (value.length === 0) {\n      return null;\n    }\n\n    const selectedItems = value.map((item: DropdownItemProps, index) =>\n      // (!) an item matches DropdownItemProps\n      DropdownSelectedItem.create(item, {\n        defaultProps: () => ({\n          className: dropdownSlotClassNames.selectedItem,\n          active: isSelectedItemActive(index),\n          disabled,\n          variables,\n          ...(typeof item === 'object' &&\n            !item.hasOwnProperty('key') && {\n              key: (item as any).header,\n            }),\n        }),\n        overrideProps: handleSelectedItemOverrides(item),\n        render: renderSelectedItem,\n      }),\n    );\n    return (\n      <>\n        <div role=\"listbox\" tabIndex={-1} aria-label={a11ySelectedItemsMessage}>\n          {selectedItems}\n        </div>\n        {selectedItemsCountNarration}\n      </>\n    );\n  };\n\n  const downshiftStateReducer = (\n    state: DownshiftState<ShorthandValue<DropdownItemProps>>,\n    changes: StateChangeOptions<ShorthandValue<DropdownItemProps>>,\n  ) => {\n    const activeElement: Element = context.target.activeElement;\n\n    switch (changes.type) {\n      case Downshift.stateChangeTypes.blurButton:\n        // Downshift closes the list by default on trigger blur. It does not support the case when dropdown is\n        // single selection and focuses list on trigger click/up/down/space/enter. Treating that here.\n        if (state.isOpen && activeElement === listRef.current) {\n          return {}; // won't change state in this case.\n        }\n        _.invoke(props, 'onBlur', null);\n      default:\n        return changes;\n    }\n  };\n\n  const handleInputValueChange = (\n    inputValue: string,\n    stateAndHelpers: ControllerStateAndHelpers<ShorthandValue<DropdownItemProps>>,\n  ) => {\n    const itemSelected = stateAndHelpers.selectedItem && inputValue === itemToString(stateAndHelpers.selectedItem);\n    if (\n      inputValue !== searchQuery &&\n      !itemSelected // when item is selected, `handleStateChange` will update searchQuery.\n    ) {\n      setStateAndInvokeHandler(['onSearchQueryChange'], null, {\n        searchQuery: inputValue,\n      });\n    }\n  };\n\n  const handleStateChange = (changes: StateChangeOptions<ShorthandValue<DropdownItemProps>>) => {\n    const { type } = changes;\n    const newState = {} as DropdownStateForInvoke;\n\n    switch (type) {\n      case Downshift.stateChangeTypes.changeInput: {\n        const shouldValueChange = changes.inputValue === '' && !multiple && value.length > 0;\n\n        if (allowFreeform) {\n          // set highlighted index to first item starting with search query\n          const itemIndex = items.findIndex(i =>\n            itemToString(i)?.toLocaleLowerCase().startsWith(changes.inputValue?.toLowerCase()),\n          );\n          if (itemIndex !== -1) {\n            newState.highlightedIndex = itemIndex;\n            // for free form always keep searchQuery and inputValue in sync\n            // as state change might not be called after last letter was entered\n            newState.searchQuery = changes.inputValue;\n          }\n        } else {\n          newState.highlightedIndex = highlightFirstItemOnOpen ? 0 : null;\n        }\n\n        if (shouldValueChange) {\n          newState.value = [];\n        }\n\n        if (open) {\n          // we clear value when in single selection user cleared the query.\n          const shouldMenuClose = changes.inputValue === '' || changes.selectedItem !== undefined;\n\n          if (shouldMenuClose) {\n            newState.open = false;\n          }\n        } else {\n          newState.open = true;\n        }\n\n        break;\n      }\n      case Downshift.stateChangeTypes.keyDownEnter:\n      case Downshift.stateChangeTypes.clickItem:\n        const shouldAddHighlightedIndex = !multiple && items && items.length > 0;\n        const isSameItemSelected = changes.selectedItem === undefined;\n        const newValue = isSameItemSelected ? value[0] : changes.selectedItem;\n\n        newState.searchQuery = getSelectedItemAsString(newValue);\n        if (allowFreeform && !inListbox.current && type === Downshift.stateChangeTypes.keyDownEnter) {\n          const itemIndex = items.findIndex(i =>\n            itemToString(i)?.toLocaleLowerCase().startsWith(searchQuery?.toLocaleLowerCase()),\n          );\n\n          // if there is an item that starts with searchQuery, still apply the search query\n          // to do auto complete (you enter '12:', can be completed to '12:00')\n          if (itemIndex === -1) {\n            delete newState.searchQuery;\n          }\n        }\n\n        newState.open = false;\n        newState.highlightedIndex = shouldAddHighlightedIndex ? items.indexOf(newValue) : null;\n        inListbox.current = false;\n\n        if (!isSameItemSelected) {\n          newState.value = multiple ? [...value, changes.selectedItem] : [changes.selectedItem];\n\n          if (getA11ySelectionMessage && getA11ySelectionMessage.onAdd) {\n            setA11ySelectionMessage(getA11ySelectionMessage.onAdd(newValue));\n          }\n        }\n\n        if (multiple) {\n          context.target?.defaultView.setTimeout(\n            () => (selectedItemsRef.current.scrollTop = selectedItemsRef.current.scrollHeight),\n            0,\n          );\n        }\n\n        // timeout because of NVDA, otherwise it narrates old button value/state\n        context.target?.defaultView.setTimeout(() => tryFocusTriggerButton(), 100);\n\n        break;\n      case Downshift.stateChangeTypes.keyDownEscape:\n        if (search && !multiple) {\n          newState.value = [];\n        }\n        newState.open = false;\n        newState.highlightedIndex = highlightFirstItemOnOpen ? 0 : null;\n        break;\n      case Downshift.stateChangeTypes.keyDownArrowDown:\n      case Downshift.stateChangeTypes.keyDownArrowUp:\n        if (changes.isOpen !== undefined) {\n          newState.open = changes.isOpen;\n          newState.highlightedIndex = changes.highlightedIndex;\n\n          if (changes.isOpen) {\n            const highlightedIndexOnArrowKeyOpen = getHighlightedIndexOnArrowKeyOpen(changes);\n\n            if (_.isNumber(highlightedIndexOnArrowKeyOpen)) {\n              newState.highlightedIndex = highlightedIndexOnArrowKeyOpen;\n            }\n\n            if (!search) {\n              listRef.current.focus();\n            }\n          } else {\n            newState.highlightedIndex = null;\n          }\n        }\n      case Downshift.stateChangeTypes['keyDownHome']:\n      case Downshift.stateChangeTypes['keyDownEnd']:\n        if (open && _.isNumber(changes.highlightedIndex)) {\n          newState.highlightedIndex = changes.highlightedIndex;\n          newState.itemIsFromKeyboard = true;\n        }\n\n        break;\n      case Downshift.stateChangeTypes.mouseUp:\n        if (open) {\n          newState.open = false;\n          if (allowFreeform) {\n            const itemIndex = items.findIndex(i =>\n              itemToString(i)?.toLowerCase().startsWith(searchQuery?.toLowerCase()),\n            );\n\n            // if there is an item that starts with searchQuery, still apply the search query\n            // to do auto complete (you enter '12:', can be completed to '12:00')\n            if (itemIndex !== -1) {\n              newState.searchQuery = itemToString(items[itemIndex]);\n            }\n          } else {\n            newState.highlightedIndex = null;\n          }\n        }\n\n        break;\n      case Downshift.stateChangeTypes.clickButton:\n      case Downshift.stateChangeTypes.keyDownSpaceButton:\n        newState.open = changes.isOpen;\n        newState.itemIsFromKeyboard = isFromKeyboard;\n\n        if (changes.isOpen) {\n          const highlightedIndexOnArrowKeyOpen = getHighlightedIndexOnArrowKeyOpen(changes);\n\n          if (_.isNumber(highlightedIndexOnArrowKeyOpen)) {\n            newState.highlightedIndex = highlightedIndexOnArrowKeyOpen;\n          }\n\n          if (!search) {\n            listRef.current.focus();\n          }\n        } else if (allowFreeform) {\n          const itemIndex = items.findIndex(i =>\n            itemToString(i)?.toLocaleLowerCase().startsWith(searchQuery.toLowerCase()),\n          );\n\n          // if there is an item that starts with searchQuery, still apply the search query\n          // to do auto complete (you enter '12:', can be completed to '12:00')\n          if (itemIndex !== -1) {\n            newState.searchQuery = itemToString(items[itemIndex]);\n          }\n        } else {\n          newState.highlightedIndex = null;\n        }\n        break;\n      case Downshift.stateChangeTypes.itemMouseEnter:\n        newState.highlightedIndex = changes.highlightedIndex;\n        newState.itemIsFromKeyboard = false;\n        break;\n      case Downshift.stateChangeTypes.unknown:\n        if (changes.selectedItem) {\n          newState.value = multiple ? [...value, changes.selectedItem] : [changes.selectedItem];\n          newState.searchQuery = multiple ? '' : changes.inputValue;\n          newState.open = false;\n          newState.highlightedIndex = changes.highlightedIndex;\n\n          tryFocusTriggerButton();\n        } else {\n          newState.open = changes.isOpen;\n        }\n      default:\n        break;\n    }\n\n    if (_.isEmpty(newState)) {\n      return;\n    }\n\n    const handlers: (keyof DropdownProps)[] = [\n      newState.highlightedIndex !== undefined && 'onHighlightedIndexChange',\n      newState.open !== undefined && 'onOpenChange',\n      newState.searchQuery !== undefined && 'onSearchQueryChange',\n      newState.value !== undefined && 'onChange',\n    ].filter(Boolean) as (keyof DropdownProps)[];\n\n    setStateAndInvokeHandler(handlers, null, newState);\n  };\n\n  const isSelectedItemActive = (index: number): boolean => {\n    return index === activeSelectedIndex;\n  };\n\n  const handleItemOverrides =\n    (\n      item: ShorthandValue<DropdownItemProps>,\n      index: number,\n      getItemProps: (options: GetItemPropsOptions<ShorthandValue<DropdownItemProps>>) => any,\n      selected: boolean,\n    ) =>\n    (predefinedProps: DropdownItemProps) => ({\n      accessibilityItemProps: {\n        ...getItemProps({\n          item,\n          index,\n          disabled: item['disabled'],\n          onClick: e => {\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n            _.invoke(predefinedProps, 'onClick', e, predefinedProps);\n          },\n        }),\n        // for single selection the selected item should have aria-selected, instead of the highlighted\n        ...(!multiple && {\n          'aria-selected': selected,\n        }),\n      },\n    });\n\n  const handleSelectedItemOverrides =\n    (item: ShorthandValue<DropdownItemProps>) => (predefinedProps: DropdownSelectedItemProps) => ({\n      onRemove: (e: React.SyntheticEvent, dropdownSelectedItemProps: DropdownSelectedItemProps) => {\n        handleSelectedItemRemove(e, item, predefinedProps, dropdownSelectedItemProps);\n      },\n      onClick: (e: React.SyntheticEvent, dropdownSelectedItemProps: DropdownSelectedItemProps) => {\n        setStateAndInvokeHandler(['onActiveSelectedIndexChange'], null, {\n          activeSelectedIndex: value.indexOf(item),\n        });\n        e.stopPropagation();\n        _.invoke(predefinedProps, 'onClick', e, dropdownSelectedItemProps);\n      },\n      onKeyDown: (e: React.KeyboardEvent, dropdownSelectedItemProps: DropdownSelectedItemProps) => {\n        handleSelectedItemKeyDown(e, item, predefinedProps, dropdownSelectedItemProps);\n      },\n    });\n\n  const handleSearchInputOverrides =\n    (\n      highlightedIndex: number,\n      selectItemAtIndex: (index: number, otherStateToSet?: Partial<StateChangeOptions<any>>, cb?: () => void) => void,\n      toggleMenu: () => void,\n      accessibilityComboboxProps: Object,\n      getInputProps: (options?: GetInputPropsOptions) => any,\n    ) =>\n    (predefinedProps: DropdownSearchInputProps) => {\n      const handleInputBlur = (e: React.SyntheticEvent, searchInputProps: DropdownSearchInputProps) => {\n        if (!disabled) {\n          setFocused(false);\n          setIsFromKeyboard(detectIsFromKeyboard());\n\n          e.nativeEvent['preventDownshiftDefault'] = true;\n        }\n\n        _.invoke(predefinedProps, 'onInputBlur', e, searchInputProps);\n      };\n\n      const handleInputKeyDown = (\n        e: React.KeyboardEvent<HTMLInputElement>,\n        searchInputProps: DropdownSearchInputProps,\n      ) => {\n        if (!disabled) {\n          switch (getCode(e)) {\n            // https://github.com/downshift-js/downshift/issues/1097\n            // Downshift skips Home/End if Deopdown is opened\n            case keyboardKey.Home:\n              e.nativeEvent['preventDownshiftDefault'] = filteredItems.length === 0;\n              break;\n            case keyboardKey.End:\n              e.nativeEvent['preventDownshiftDefault'] = filteredItems.length === 0;\n              break;\n            case keyboardKey.Tab:\n              e.stopPropagation();\n              handleTabSelection(e, highlightedIndex, selectItemAtIndex, toggleMenu);\n              break;\n            case keyboardKey.ArrowLeft:\n              e.stopPropagation();\n              if (!context.rtl) {\n                // https://github.com/testing-library/user-event/issues/709\n                // JSDOM does not implement `event.view` so prune this code path in test\n                if (process.env.NODE_ENV !== 'test') {\n                  setWhatInputSource(e.view.document, 'keyboard');\n                }\n                trySetLastSelectedItemAsActive();\n              }\n              break;\n            case keyboardKey.ArrowRight:\n              e.stopPropagation();\n              if (context.rtl) {\n                // https://github.com/testing-library/user-event/issues/709\n                // JSDOM does not implement `event.view` so prune this code path in test\n                if (process.env.NODE_ENV !== 'test') {\n                  setWhatInputSource(e.view.document, 'keyboard');\n                }\n                trySetLastSelectedItemAsActive();\n              }\n              break;\n            case keyboardKey.Backspace:\n              e.stopPropagation();\n              tryRemoveItemFromValue();\n              break;\n            case keyboardKey.Escape:\n              // If dropdown list is open ESC should close it and not propagate to the parent\n              // otherwise event should propagate\n              if (open) {\n                e.stopPropagation();\n              }\n            case keyboardKey.ArrowUp:\n            case keyboardKey.ArrowDown:\n              if (allowFreeform) {\n                inListbox.current = true;\n              }\n              break;\n            default:\n              if (getCode(e) !== keyboardKey.Enter) {\n                inListbox.current = false;\n              }\n              break;\n          }\n        }\n\n        _.invoke(predefinedProps, 'onInputKeyDown', e, {\n          ...searchInputProps,\n          highlightedIndex,\n          selectItemAtIndex,\n        });\n      };\n\n      return {\n        // getInputProps adds Downshift handlers. We also add our own by passing them as params to that function.\n        // user handlers were also added to our handlers previously, at the beginning of this function.\n        accessibilityInputProps: {\n          ...getInputProps({\n            disabled,\n            onBlur: e => {\n              handleInputBlur(e, predefinedProps);\n            },\n            onKeyDown: e => {\n              handleInputKeyDown(e, predefinedProps);\n            },\n            onChange: (e: React.ChangeEvent<HTMLInputElement>) => {\n              // we prevent the onChange input event to bubble up to our Dropdown handler,\n              // since in Dropdown it gets handled as onSearchQueryChange.\n              e.stopPropagation();\n\n              // A state modification should be triggered there otherwise it will go to an another frame and will break\n              // cursor position:\n              // https://github.com/facebook/react/issues/955#issuecomment-469352730\n              setSearchQuery(e.target.value);\n            },\n            'aria-labelledby': ariaLabelledby,\n            'aria-describedby': ariaDescribedby || selectedItemsCountNarrationId,\n          }),\n        },\n        // same story as above for getRootProps.\n        accessibilityComboboxProps,\n\n        inputRef: (node: HTMLInputElement) => {\n          handleRef(predefinedProps.inputRef, node);\n          inputRef.current = node;\n        },\n        onFocus: (e: React.FocusEvent, searchInputProps: DropdownSearchInputProps) => {\n          if (!disabled) {\n            setFocused(true);\n            setIsFromKeyboard(detectIsFromKeyboard());\n          }\n\n          _.invoke(predefinedProps, 'onFocus', e, searchInputProps);\n        },\n        onInputBlur: (e: React.FocusEvent, searchInputProps: DropdownSearchInputProps) => {\n          handleInputBlur(e, searchInputProps);\n        },\n        onInputKeyDown: (e: React.KeyboardEvent<HTMLInputElement>, searchInputProps: DropdownSearchInputProps) => {\n          handleInputKeyDown(e, searchInputProps);\n        },\n      };\n    };\n\n  /**\n   * Custom Tab selection logic, at least until Downshift will implement selection on blur.\n   * Also keeps focus on multiple selection dropdown when selecting by Tab.\n   */\n  const handleTabSelection = (\n    e: React.SyntheticEvent,\n    highlightedIndex: number,\n    selectItemAtIndex: (highlightedIndex: number) => void,\n    toggleMenu: () => void,\n  ): void => {\n    if (open) {\n      if (!_.isNil(highlightedIndex) && filteredItems.length && !items[highlightedIndex]['disabled']) {\n        selectItemAtIndex(highlightedIndex);\n\n        if (multiple && !moveFocusOnTab) {\n          e.preventDefault();\n        }\n      } else {\n        toggleMenu();\n      }\n    }\n  };\n\n  const trySetLastSelectedItemAsActive = () => {\n    if (!multiple || (inputRef.current && inputRef.current.selectionStart !== 0)) {\n      return;\n    }\n\n    if (value.length > 0) {\n      // If last element was already active, perform a 'reset' of activeSelectedIndex.\n      if (activeSelectedIndex === value.length - 1) {\n        setStateAndInvokeHandler(['onActiveSelectedIndexChange'], null, {\n          activeSelectedIndex: value.length - 1,\n        });\n      } else {\n        setStateAndInvokeHandler(['onActiveSelectedIndexChange'], null, {\n          activeSelectedIndex: value.length - 1,\n        });\n      }\n    }\n  };\n\n  const tryRemoveItemFromValue = () => {\n    if (\n      multiple &&\n      (searchQuery === '' || (inputRef.current.selectionStart === 0 && inputRef.current.selectionEnd === 0)) &&\n      value.length > 0\n    ) {\n      removeItemFromValue();\n    }\n  };\n\n  const handleClear = (e: React.SyntheticEvent<HTMLElement>) => {\n    setStateAndInvokeHandler(['onChange', 'onActiveSelectedIndexChange', 'onHighlightedIndexChange'], e, {\n      activeSelectedIndex: multiple ? null : undefined,\n      highlightedIndex: highlightFirstItemOnOpen ? 0 : null,\n      open: false,\n      searchQuery: search ? '' : undefined,\n      value: [],\n    });\n\n    tryFocusSearchInput();\n    tryFocusTriggerButton();\n  };\n\n  const handleContainerClick = () => {\n    tryFocusSearchInput();\n  };\n\n  const handleTriggerButtonKeyDown = (e: React.KeyboardEvent) => {\n    switch (getCode(e)) {\n      case keyboardKey.ArrowLeft:\n        if (!context.rtl) {\n          trySetLastSelectedItemAsActive();\n        }\n        return;\n      case keyboardKey.ArrowRight:\n        if (context.rtl) {\n          trySetLastSelectedItemAsActive();\n        }\n        return;\n      default:\n        return;\n    }\n  };\n\n  const handleListKeyDown = (\n    e: React.KeyboardEvent,\n    highlightedIndex: number,\n    accessibilityInputPropsKeyDown: (e) => any,\n    toggleMenu: () => void,\n    selectItemAtIndex: (index: number) => void,\n  ) => {\n    const keyCode = getCode(e);\n    switch (keyCode) {\n      case keyboardKey.Tab:\n        handleTabSelection(e, highlightedIndex, selectItemAtIndex, toggleMenu);\n        return;\n      case keyboardKey.Escape:\n        accessibilityInputPropsKeyDown(e);\n        tryFocusTriggerButton();\n        e.stopPropagation();\n        return;\n      default:\n        const keyString = String.fromCharCode(keyCode);\n        if (/[a-zA-Z0-9]/.test(keyString)) {\n          setHighlightedIndexOnCharKeyDown(keyString);\n        }\n        accessibilityInputPropsKeyDown(e);\n        return;\n    }\n  };\n\n  const handleSelectedItemKeyDown = (\n    e: React.KeyboardEvent,\n    item: ShorthandValue<DropdownItemProps>,\n    predefinedProps: DropdownSelectedItemProps,\n    dropdownSelectedItemProps: DropdownSelectedItemProps,\n  ) => {\n    const previousKey = context.rtl ? keyboardKey.ArrowRight : keyboardKey.ArrowLeft;\n    const nextKey = context.rtl ? keyboardKey.ArrowLeft : keyboardKey.ArrowRight;\n\n    switch (getCode(e)) {\n      case keyboardKey.Delete:\n      case keyboardKey.Backspace:\n        handleSelectedItemRemove(e, item, predefinedProps, dropdownSelectedItemProps);\n        break;\n      case previousKey:\n        if (value.length > 0 && !_.isNil(activeSelectedIndex) && activeSelectedIndex > 0) {\n          setStateAndInvokeHandler(['onActiveSelectedIndexChange'], null, {\n            activeSelectedIndex: activeSelectedIndex - 1,\n          });\n        }\n        break;\n      case nextKey:\n        if (value.length > 0 && !_.isNil(activeSelectedIndex)) {\n          if (activeSelectedIndex < value.length - 1) {\n            setStateAndInvokeHandler(['onActiveSelectedIndexChange'], null, {\n              activeSelectedIndex: activeSelectedIndex + 1,\n            });\n          } else {\n            setStateAndInvokeHandler(['onActiveSelectedIndexChange'], null, {\n              activeSelectedIndex: null,\n            });\n\n            if (search) {\n              e.preventDefault(); // prevents caret to forward one position in input.\n              inputRef.current.focus();\n            } else {\n              buttonRef.current.focus();\n            }\n          }\n        }\n        break;\n      default:\n        break;\n    }\n    _.invoke(predefinedProps, 'onKeyDown', e, dropdownSelectedItemProps);\n  };\n\n  const handleTriggerButtonOrListFocus = () => {\n    setFocused(true);\n    setIsFromKeyboard(detectIsFromKeyboard());\n  };\n\n  const handleTriggerButtonBlur = e => {\n    if (listRef.current !== e.relatedTarget) {\n      setFocused(false);\n      setIsFromKeyboard(detectIsFromKeyboard());\n    }\n  };\n\n  const handleListBlur = e => {\n    if (buttonRef.current !== e.relatedTarget) {\n      setFocused(false);\n      setIsFromKeyboard(detectIsFromKeyboard());\n    }\n  };\n\n  /**\n   * Sets highlightedIndex to be the item that starts with the character keys the\n   * user has typed. Only used in non-search dropdowns.\n   *\n   * @param keystring - The string the item needs to start with. It is composed by typing keys in fast succession.\n   */\n  const setHighlightedIndexOnCharKeyDown = (keyString: string): void => {\n    const newStartingString = `${startingString}${keyString.toLowerCase()}`;\n    let newHighlightedIndex = -1;\n\n    setStartingString(newStartingString);\n    clearStartingString();\n\n    if (_.isNumber(highlightedIndex)) {\n      newHighlightedIndex = _.findIndex(\n        filteredItemStrings,\n        item => item.startsWith(newStartingString),\n        highlightedIndex + (startingString.length > 0 ? 0 : 1),\n      );\n    }\n\n    if (newHighlightedIndex < 0) {\n      newHighlightedIndex = _.findIndex(filteredItemStrings, item => item.startsWith(newStartingString));\n    }\n\n    if (newHighlightedIndex >= 0) {\n      setStateAndInvokeHandler(['onHighlightedIndexChange'], null, {\n        highlightedIndex: newHighlightedIndex,\n      });\n    }\n  };\n\n  const handleSelectedItemRemove = (\n    e: React.SyntheticEvent,\n    item: ShorthandValue<DropdownItemProps>,\n    predefinedProps: DropdownSelectedItemProps,\n    dropdownSelectedItemProps: DropdownSelectedItemProps,\n  ) => {\n    setStateAndInvokeHandler(['onActiveSelectedIndexChange'], null, {\n      activeSelectedIndex: null,\n    });\n    removeItemFromValue(item);\n    tryFocusSearchInput();\n    tryFocusTriggerButton();\n    _.invoke(predefinedProps, 'onRemove', e, dropdownSelectedItemProps);\n  };\n\n  const removeItemFromValue = (item?: ShorthandValue<DropdownItemProps>) => {\n    let poppedItem = item;\n    let newValue = [...value];\n\n    if (poppedItem) {\n      newValue = newValue.filter(currentElement => currentElement !== item);\n    } else {\n      poppedItem = newValue.pop();\n    }\n\n    if (getA11ySelectionMessage && getA11ySelectionMessage.onRemove) {\n      setA11ySelectionMessage(getA11ySelectionMessage.onRemove(poppedItem));\n    }\n\n    setStateAndInvokeHandler(['onChange'], null, { value: newValue });\n  };\n\n  /**\n   * Calls setState and invokes event handler exposed to user.\n   * We don't have the event object for most events coming from Downshift se we send an empty event\n   * because we want to keep the event handling interface\n   */\n  const setStateAndInvokeHandler = (\n    handlerNames: (keyof DropdownProps)[],\n    event: React.SyntheticEvent<HTMLElement>,\n    newState: DropdownStateForInvoke,\n  ) => {\n    const proposedValue = _.isNil(newState.value) ? value : newState.value;\n    // `proposedValue` should be normalized for single/multiple variations, `null` condition is\n    // required as first item can be undefined\n    const newValue = multiple ? proposedValue : proposedValue[0] || null;\n\n    if (newState.hasOwnProperty('activeSelectedIndex')) {\n      setActiveSelectedIndex(newState.activeSelectedIndex);\n    }\n    if (newState.hasOwnProperty('highlightedIndex')) {\n      setHighlightedIndex(newState.highlightedIndex);\n    }\n    if (newState.hasOwnProperty('itemIsFromKeyboard')) {\n      setItemIsFromKeyboard(newState.itemIsFromKeyboard);\n    }\n    if (newState.hasOwnProperty('open')) {\n      setOpen(newState.open);\n    }\n    if (newState.hasOwnProperty('searchQuery')) {\n      setSearchQuery(newState.searchQuery);\n    }\n    if (newState.hasOwnProperty('value')) {\n      setValue(newState.value);\n    }\n\n    handlerNames.forEach(handlerName => {\n      _.invoke(props, handlerName, event, { ...props, ...newState, value: newValue });\n    });\n  };\n\n  const tryFocusTriggerButton = () => {\n    if (!search && buttonRef.current) {\n      buttonRef.current.focus();\n    }\n  };\n\n  const tryFocusSearchInput = () => {\n    if (search && inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  /**\n   * If there is no value we use the placeholder value\n   * otherwise, for single selection we convert the value with itemToString\n   * and for multiple selection we return empty string, the values are rendered by renderSelectedItems\n   */\n  const getSelectedItemAsString = (value: ShorthandValue<DropdownItemProps>): string => {\n    if (!value) {\n      return search ? '' : placeholder;\n    }\n\n    if (multiple) {\n      return '';\n    }\n\n    return itemToString(value);\n  };\n\n  const getHighlightedIndexOnArrowKeyOpen = (\n    changes: StateChangeOptions<ShorthandValue<DropdownItemProps>>,\n  ): number => {\n    const isArrowUp = changes.type === Downshift.stateChangeTypes.keyDownArrowUp;\n    const isArrowDown = changes.type === Downshift.stateChangeTypes.keyDownArrowDown;\n    const itemsLength = filteredItems.length;\n\n    if (highlightedIndex) {\n      return highlightedIndex;\n    }\n\n    if (highlightFirstItemOnOpen) {\n      // otherwise, if highlightFirstItemOnOpen prop is provied, highlight first item.\n      return 0;\n    }\n\n    if (!multiple && value.length > 0) {\n      // in single selection (search or not search), if there is a selected item, highlight it.\n      const offset = isArrowUp ? -1 : isArrowDown ? 1 : 0;\n      const newHighlightedIndex = items.indexOf(value[0]) + offset;\n      if (newHighlightedIndex >= itemsLength) {\n        return 0;\n      }\n      if (isArrowUp && newHighlightedIndex < 0) {\n        return itemsLength - 1;\n      }\n      if (newHighlightedIndex > 0) {\n        return newHighlightedIndex;\n      }\n    }\n\n    if (isArrowDown) {\n      return 0;\n    }\n    if (isArrowUp) {\n      return itemsLength - 1;\n    }\n\n    return null;\n  };\n\n  /**\n   * Function that sets and cleans the selection message after it has been set,\n   * so it is not read anymore via virtual cursor.\n   */\n  const setA11ySelectionMessage = (a11ySelectionStatus: string): void => {\n    setA11ySelectionStatus(a11ySelectionStatus);\n    clearA11ySelectionMessage();\n  };\n\n  React.useEffect(() => {\n    return () => {\n      clearStartingString.cancel();\n      clearA11ySelectionMessage.cancel();\n    };\n  }, [clearA11ySelectionMessage, clearStartingString]);\n\n  const element = (\n    <ElementType\n      className={classes.root}\n      onBlur={handleOnBlur}\n      onChange={handleChange}\n      ref={ref}\n      {...unhandledProps}\n      {...(process.env.NODE_ENV === 'test' && { 'data-test-focused': focused })}\n    >\n      <Downshift\n        isOpen={open}\n        inputValue={search ? searchQuery : null}\n        stateReducer={downshiftStateReducer}\n        itemToString={itemToString}\n        // downshift does not work with arrays as selectedItem.\n        selectedItem={multiple || !value.length ? null : value[0]}\n        scrollIntoView={(node: HTMLElement, menu: HTMLElement) => {\n          if (node) {\n            const { children } = menu;\n            let nodeToScroll = node;\n            /**\n             * If it's loading downshift doesn't take the last node with loadingMessage\n             * in consideration to scrolld so we need to check if the current is the\n             * antepenultimate and is so scroll the loading into view, same for headerMessage\n             */\n            if (loading && children[children.length - 2] === node) {\n              nodeToScroll = children[children.length - 1] as HTMLElement;\n            } else if (headerMessage && children[1] === node) {\n              nodeToScroll = children[0] as HTMLElement;\n            }\n\n            // Replicating same config that Downshift uses\n            const actions = computeScrollIntoView(nodeToScroll, {\n              boundary: menu, // Explicitly set boundary to avoid unnecessary scrolling by checking all parent elements\n              scrollMode: 'if-needed',\n              block: 'nearest',\n              inline: 'nearest',\n            });\n            actions.forEach(({ el, top, left }) => {\n              el.scrollTop = top;\n              el.scrollLeft = left;\n            });\n          }\n        }}\n        getA11yStatusMessage={getA11yStatusMessage}\n        highlightedIndex={highlightedIndex}\n        onStateChange={handleStateChange}\n        onInputValueChange={handleInputValueChange}\n        labelId={ariaLabelledby}\n        environment={context.target?.defaultView}\n        inputId={searchInput && searchInput['id'] ? searchInput['id'] : undefined}\n      >\n        {({\n          getInputProps,\n          getItemProps,\n          getMenuProps,\n          getRootProps,\n          getToggleButtonProps,\n          toggleMenu,\n          highlightedIndex,\n          selectItemAtIndex,\n        }) => {\n          const { innerRef, ...accessibilityRootPropsRest } = getRootProps(\n            { refKey: 'innerRef' },\n            { suppressRefError: true },\n          );\n          const showClearIndicator = clearable && value.length > 0;\n\n          return (\n            <Ref innerRef={innerRef}>\n              <div\n                ref={containerRef}\n                className={cx(dropdownSlotClassNames.container, classes.container)}\n                onClick={search && !open ? handleContainerClick : undefined}\n              >\n                <div ref={selectedItemsRef} className={cx(dropdownSlotClassNames.selectedItems, classes.selectedItems)}>\n                  {/* We previously were rendering the trigger button after selected items list,\n                    after listbox wrapper was introduced we moved it to before and\n                     set as absolute to avoid visual regressions   */}\n                  {!search && renderTriggerButton(getToggleButtonProps)}\n                  {multiple && renderSelectedItems()}\n                  {search &&\n                    renderSearchInput(\n                      accessibilityRootPropsRest,\n                      highlightedIndex,\n                      getInputProps,\n                      selectItemAtIndex,\n                      toggleMenu,\n                      variables,\n                    )}\n                </div>\n                {showClearIndicator\n                  ? Box.create(clearIndicator, {\n                      defaultProps: () => ({\n                        className: dropdownSlotClassNames.clearIndicator,\n                        styles: resolvedStyles.clearIndicator,\n                        ...(!search ? { tabIndex: 0, role: 'button' } : { accessibility: indicatorBehavior }),\n                      }),\n                      overrideProps: (predefinedProps: BoxProps) => ({\n                        onClick: (e: React.SyntheticEvent<HTMLElement>) => {\n                          _.invoke(predefinedProps, 'onClick', e);\n                          handleClear(e);\n                        },\n                        onKeyDown: (e: React.KeyboardEvent<HTMLElement>) => {\n                          _.invoke(predefinedProps, 'onKeyDown', e);\n                          const keyCode = getCode(e);\n                          if (!search && (keyCode === keyboardKey.Enter || keyCode === SpacebarKey)) {\n                            handleClear(e);\n                            e.preventDefault();\n                          }\n                        },\n                      }),\n                    })\n                  : Box.create(toggleIndicator, {\n                      defaultProps: () => ({\n                        className: dropdownSlotClassNames.toggleIndicator,\n                        styles: resolvedStyles.toggleIndicator,\n                        accessibility: indicatorBehavior,\n                      }),\n                      overrideProps: (predefinedProps: BoxProps) => ({\n                        onClick: e => {\n                          if (!disabled) {\n                            getToggleButtonProps({ disabled }).onClick(e);\n                          }\n\n                          _.invoke(predefinedProps, 'onClick', e);\n                        },\n                      }),\n                    })}\n                {renderItemsList(\n                  highlightedIndex,\n                  toggleMenu,\n                  selectItemAtIndex,\n                  getMenuProps,\n                  getItemProps,\n                  getInputProps,\n                )}\n              </div>\n            </Ref>\n          );\n        }}\n      </Downshift>\n      <Portal open={!!getA11ySelectionMessage}>\n        <div role=\"status\" aria-live=\"polite\" aria-relevant=\"additions text\" style={screenReaderContainerStyles}>\n          {a11ySelectionStatus}\n        </div>\n      </Portal>\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown as ForwardRefWithAs<'div', HTMLDivElement, DropdownProps> &\n  FluentComponentStaticProps<DropdownProps> & {\n    Item: typeof DropdownItem;\n    SearchInput: typeof DropdownSearchInput;\n    SelectedItem: typeof DropdownSelectedItem;\n  };\n\nDropdown.displayName = 'Dropdown';\n\nDropdown.propTypes = {\n  ...commonPropTypes.createCommon({\n    accessibility: false,\n    children: false,\n    content: false,\n  }),\n  activeSelectedIndex: PropTypes.number,\n  allowFreeform: PropTypes.bool,\n  checkable: PropTypes.bool,\n  checkableIndicator: customPropTypes.shorthandAllowingChildren,\n  clearable: PropTypes.bool,\n  clearIndicator: customPropTypes.shorthandAllowingChildren,\n  defaultActiveSelectedIndex: PropTypes.number,\n  defaultOpen: PropTypes.bool,\n  defaultHighlightedIndex: PropTypes.number,\n  defaultSearchQuery: PropTypes.string,\n  defaultValue: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n  disabled: PropTypes.bool,\n  error: PropTypes.bool,\n  fluid: PropTypes.bool,\n  getA11ySelectionMessage: PropTypes.object,\n  getA11yStatusMessage: PropTypes.func,\n  highlightFirstItemOnOpen: PropTypes.bool,\n  highlightedIndex: PropTypes.number,\n  inline: PropTypes.bool,\n  inverted: PropTypes.bool,\n  items: customPropTypes.collectionShorthand,\n  itemToString: PropTypes.func,\n  itemToValue: PropTypes.func,\n  headerMessage: customPropTypes.itemShorthand,\n  list: customPropTypes.itemShorthand,\n  loading: PropTypes.bool,\n  loadingMessage: customPropTypes.itemShorthand,\n  moveFocusOnTab: PropTypes.bool,\n  multiple: PropTypes.bool,\n  noResultsMessage: customPropTypes.itemShorthand,\n  onOpenChange: PropTypes.func,\n  onSearchQueryChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onActiveSelectedIndexChange: PropTypes.func,\n  onHighlightedIndexChange: PropTypes.func,\n  open: PropTypes.bool,\n  placeholder: PropTypes.string,\n  renderItem: PropTypes.func,\n  renderSelectedItem: PropTypes.func,\n  search: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n  searchQuery: PropTypes.string,\n  searchInput: customPropTypes.itemShorthand,\n  toggleIndicator: customPropTypes.shorthandAllowingChildren,\n  triggerButton: customPropTypes.itemShorthand,\n  value: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n  'aria-labelledby': PropTypes.string,\n  'aria-invalid': PropTypes.bool,\n  a11ySelectedItemsMessage: PropTypes.string,\n  // positioning props\n  align: PropTypes.oneOf(ALIGNMENTS),\n  flipBoundary: PropTypes.oneOfType([\n    PropTypes.object as PropTypes.Requireable<HTMLElement>,\n    PropTypes.arrayOf(PropTypes.object) as PropTypes.Requireable<HTMLElement[]>,\n    PropTypes.oneOf<'clippingParents' | 'window' | 'scrollParent'>(['clippingParents', 'window', 'scrollParent']),\n  ]),\n  overflowBoundary: PropTypes.oneOfType([\n    PropTypes.object as PropTypes.Requireable<HTMLElement>,\n    PropTypes.arrayOf(PropTypes.object) as PropTypes.Requireable<HTMLElement[]>,\n    PropTypes.oneOf<'clippingParents' | 'window' | 'scrollParent'>(['clippingParents', 'window', 'scrollParent']),\n  ]),\n  popperRef: customPropTypes.ref,\n  position: PropTypes.oneOf(POSITIONS),\n  positionFixed: PropTypes.bool,\n  offset: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.arrayOf(PropTypes.number) as PropTypes.Requireable<[number, number]>,\n  ]),\n  unstable_disableTether: PropTypes.oneOf([true, false, 'all']),\n  unstable_pinned: PropTypes.bool,\n  autoSize: PropTypes.oneOf<AutoSize>(AUTOSIZES),\n};\nDropdown.handledProps = Object.keys(Dropdown.propTypes) as any;\n\nDropdown.defaultProps = {\n  align: 'start',\n  clearIndicator: <CloseIcon outline />,\n  itemToString: item => {\n    if (!item || React.isValidElement(item)) {\n      return '';\n    }\n\n    // targets DropdownItem shorthand objects\n    return (item as any).header || String(item);\n  },\n  itemToValue: item => {\n    if (!item || React.isValidElement(item)) {\n      return '';\n    }\n\n    // targets DropdownItem shorthand objects\n    return (item as any).header || String(item);\n  },\n  list: {},\n  position: 'below',\n  toggleIndicator: <ChevronDownIcon outline />,\n  triggerButton: {},\n};\n\nDropdown.Item = DropdownItem;\nDropdown.SearchInput = DropdownSearchInput;\nDropdown.SelectedItem = DropdownSelectedItem;\n"],"mappings":"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"}