{"version":3,"file":"RadioGroupItem.js","names":["radioGroupItemBehavior","Ref","customPropTypes","React","PropTypes","createShorthandFactory","commonPropTypes","shouldPreventDefaultOnKeyDown","Box","useAutoControlled","getElementType","useAccessibility","useFluentContext","useStyles","useTelemetry","useUnhandledProps","RadioButtonIcon","radioGroupItemClassName","radioGroupItemSlotClassNames","indicator","label","RadioGroupItem","forwardRef","props","ref","context","_useTelemetry","displayName","telemetry","setStart","setEnd","checkedIndicator","disabled","vertical","className","design","styles","variables","shouldFocus","elementRef","useRef","ElementType","unhandledProps","handledProps","_useAutoControlled","defaultValue","defaultChecked","value","checked","initialValue","setChecked","prevChecked","handleClick","e","_invoke","useEffect","current","undefined","Object","assign","focus","_useStyles","mapPropsToStyles","mapPropsToInlineStyles","rtl","classes","resolvedStyles","getA11yProps","accessibility","debugName","actionHandlers","performClick","preventDefault","mapPropsToBehavior","handleChange","element","unstable_wrapWithFocusZone","createElement","innerRef","root","onClick","onChange","create","defaultProps","as","propTypes","createCommon","content","bool","shorthandAllowingChildren","itemShorthand","name","string","func","oneOfType","number","outline","keys","Component","mappedProp"],"sources":["components/RadioGroup/RadioGroupItem.tsx"],"sourcesContent":["import { Accessibility, radioGroupItemBehavior, RadioGroupItemBehaviorProps } from '@fluentui/accessibility';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\nimport {\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  shouldPreventDefaultOnKeyDown,\n} from '../../utils';\nimport { Box, BoxProps } from '../Box/Box';\nimport { ComponentEventHandler, ShorthandValue, FluentComponentStaticProps } from '../../types';\nimport {\n  useAutoControlled,\n  getElementType,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport { RadioButtonIcon } from '@fluentui/react-icons-northstar';\n\nexport interface RadioGroupItemSlotClassNames {\n  indicator: string;\n  label: string;\n}\n\nexport interface RadioGroupItemProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<RadioGroupItemBehaviorProps>;\n\n  /** Whether or not radio item is checked. */\n  checked?: boolean;\n\n  /**\n   * Called after radio item checked state is changed.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onChange?: ComponentEventHandler<RadioGroupItemProps>;\n\n  /** The label of the radio item. */\n  label?: ShorthandValue<BoxProps>;\n\n  /** Initial checked value. */\n  defaultChecked?: boolean;\n\n  /** A radio item can appear disabled and be unable to change states. */\n  disabled?: boolean;\n\n  /** The radio item indicator can be customized. */\n  indicator?: ShorthandValue<BoxProps>;\n\n  /** The checked radio item indicator can be customized. */\n  checkedIndicator?: ShorthandValue<BoxProps>;\n\n  /** The HTML input name. */\n  name?: string;\n\n  /**\n   * Called after radio item is clicked.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<RadioGroupItemProps>;\n\n  /** Whether should focus when checked */\n  shouldFocus?: boolean; // TODO: RFC #306\n\n  /** The HTML input value. */\n  value?: string | number;\n\n  /** A vertical radio group displays elements vertically. */\n  vertical?: boolean;\n}\n\nexport const radioGroupItemClassName = 'ui-radiogroup__item';\nexport const radioGroupItemSlotClassNames: RadioGroupItemSlotClassNames = {\n  indicator: `${radioGroupItemClassName}__indicator`,\n  label: `${radioGroupItemClassName}__label`,\n};\n\nexport type RadioGroupItemStylesProps = Required<Pick<RadioGroupItemProps, 'disabled' | 'vertical' | 'checked'>>;\n\n/**\n * A RadioGroupItem represents single input element within a RadioGroup.\n *\n * @accessibility\n * Radio items need to be grouped to correctly handle accessibility.\n */\nexport const RadioGroupItem = React.forwardRef<HTMLDivElement, RadioGroupItemProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(RadioGroupItem.displayName, context.telemetry);\n  setStart();\n  const { label, checkedIndicator, indicator, disabled, vertical, className, design, styles, variables, shouldFocus } =\n    props;\n  const elementRef = React.useRef<HTMLElement>();\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(RadioGroupItem.handledProps, props);\n\n  const [checked, setChecked] = useAutoControlled({\n    defaultValue: props.defaultChecked,\n    value: props.checked,\n    initialValue: false,\n  });\n\n  const prevChecked = React.useRef<boolean>(checked);\n\n  const handleClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n    _.invoke(props, 'onClick', e, props);\n    setChecked(prevChecked => {\n      return !prevChecked;\n    });\n  };\n\n  // This behavior is not conformant with native input radio, it was added to avoid breaking change\n  // and it should be fixed to be conformant with native, only calling onChange when item is clicked (checked will always be true)\n  React.useEffect(() => {\n    if (prevChecked.current !== checked) {\n      _.invoke(props, 'onChange', undefined, { ...props, checked });\n      prevChecked.current = checked;\n    }\n  });\n\n  React.useEffect(() => {\n    if (checked && shouldFocus) elementRef.current.focus();\n  }, [checked, shouldFocus]);\n\n  const { classes, styles: resolvedStyles } = useStyles<RadioGroupItemStylesProps>(RadioGroupItem.displayName, {\n    className: radioGroupItemClassName,\n    mapPropsToStyles: () => ({\n      vertical,\n      disabled,\n      checked,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const getA11yProps = useAccessibility<RadioGroupItemBehaviorProps>(props.accessibility, {\n    debugName: RadioGroupItem.displayName,\n    actionHandlers: {\n      performClick: e => {\n        if (shouldPreventDefaultOnKeyDown(e)) {\n          e.preventDefault();\n        }\n        handleClick(e);\n      },\n    },\n    mapPropsToBehavior: () => ({\n      checked,\n      disabled,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleChange = (e: React.ChangeEvent) => {\n    // RadioGroupItem component doesn't present any `input` component in markup, however all of our\n    // components should handle events transparently.\n    _.invoke(props, 'onChange', e, { ...props, checked });\n  };\n\n  const element = getA11yProps.unstable_wrapWithFocusZone(\n    <Ref innerRef={elementRef}>\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          onClick: handleClick,\n          onChange: handleChange,\n          ref,\n          ...unhandledProps,\n        })}\n      >\n        {Box.create(checked ? checkedIndicator : indicator, {\n          defaultProps: () => ({\n            className: radioGroupItemSlotClassNames.indicator,\n            styles: resolvedStyles.indicator,\n          }),\n        })}\n        {Box.create(label, {\n          defaultProps: () => ({\n            as: 'span',\n            className: radioGroupItemSlotClassNames.label,\n            styles: resolvedStyles.label,\n          }),\n        })}\n      </ElementType>\n    </Ref>,\n  );\n  setEnd();\n  return element;\n}) as unknown as ForwardRefWithAs<'div', HTMLDivElement, RadioGroupItemProps> &\n  FluentComponentStaticProps<RadioGroupItemProps>;\n\nRadioGroupItem.displayName = 'RadioGroupItem';\n\nRadioGroupItem.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  checked: PropTypes.bool,\n  defaultChecked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  indicator: customPropTypes.shorthandAllowingChildren,\n  checkedIndicator: customPropTypes.shorthandAllowingChildren,\n  label: customPropTypes.itemShorthand,\n  name: PropTypes.string,\n  onClick: PropTypes.func,\n  onChange: PropTypes.func,\n  shouldFocus: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  vertical: PropTypes.bool,\n};\n\nRadioGroupItem.defaultProps = {\n  accessibility: radioGroupItemBehavior,\n  indicator: <RadioButtonIcon outline />,\n  checkedIndicator: <RadioButtonIcon />,\n};\n\nRadioGroupItem.handledProps = Object.keys(RadioGroupItem.propTypes) as any;\n\nRadioGroupItem.create = createShorthandFactory({ Component: RadioGroupItem, mappedProp: 'label' });\n"],"mappings":"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"}