{"version":3,"file":"Checkbox.js","names":["checkboxBehavior","getElementType","useUnhandledProps","useAccessibility","useStateManager","useFluentContext","useStyles","useTelemetry","customPropTypes","createCheckboxManager","PropTypes","React","createShorthandFactory","commonPropTypes","Box","Text","checkboxClassName","checkboxSlotClassNames","label","indicator","Checkbox","forwardRef","props","ref","context","_useTelemetry","displayName","telemetry","setStart","setEnd","checked","className","defaultChecked","design","disabled","labelPosition","styles","toggle","variables","_useStateManager","mapPropsToInitialState","mapPropsToState","state","actions","getA11Props","accessibility","debugName","mapPropsToBehavior","actionHandlers","performClick","e","preventDefault","handleClick","rtl","_useStyles","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","ElementType","unhandledProps","handledProps","handleChange","_invoke","Object","assign","labelElement","create","defaultProps","element","createElement","root","onClick","onChange","checkbox","propTypes","createCommon","content","oneOf","bool","shorthandAllowingChildren","itemShorthand","func","keys","Component","mappedProp"],"sources":["components/Checkbox/Checkbox.tsx"],"sourcesContent":["import { Accessibility, checkboxBehavior, CheckboxBehaviorProps } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStateManager,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { createCheckboxManager } from '@fluentui/state';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { createShorthandFactory, ChildrenComponentProps, commonPropTypes, UIComponentProps } from '../../utils';\nimport { ComponentEventHandler, ShorthandValue, FluentComponentStaticProps } from '../../types';\nimport { Box, BoxProps } from '../Box/Box';\nimport { Text, TextProps } from '../Text/Text';\nimport { SupportedIntrinsicInputProps } from '../../utils/htmlPropsUtils';\n\nexport interface CheckboxSlotClassNames {\n  label: string;\n  indicator: string;\n}\n\nexport interface CheckboxProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<CheckboxBehaviorProps>;\n\n  /** A checkbox can be checked by default. */\n  defaultChecked?: SupportedIntrinsicInputProps['defaultChecked'];\n\n  /** A checkbox's checked state can be controlled. */\n  checked?: SupportedIntrinsicInputProps['checked'] | 'mixed';\n\n  /** A checkbox can appear disabled and be unable to change states. */\n  disabled?: SupportedIntrinsicInputProps['disabled'];\n\n  /** A checkbox's indicator icon can be customized. */\n  indicator?: ShorthandValue<BoxProps>;\n\n  /** A checkbox can render a label next to its indicator. */\n  label?: ShorthandValue<TextProps>;\n\n  /** A checkbox's label can be rendered in different positions. */\n  labelPosition?: 'start' | 'end';\n\n  /**\n   * Called after a checkbox's checked state is changed.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onChange?: ComponentEventHandler<Omit<CheckboxProps, 'checked'> & { checked: boolean }>;\n\n  /**\n   * Called after a checkbox is clicked.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<Omit<CheckboxProps, 'checked'> & { checked: boolean }>;\n\n  /** A checkbox can be formatted to show an \"on or off\" choice. */\n  toggle?: boolean;\n}\n\nexport type CheckboxStylesProps = Pick<CheckboxProps, 'checked' | 'disabled' | 'labelPosition' | 'toggle'>;\nexport const checkboxClassName = 'ui-checkbox';\nexport const checkboxSlotClassNames: CheckboxSlotClassNames = {\n  label: `${checkboxClassName}__label`,\n  indicator: `${checkboxClassName}__indicator`,\n};\n\n/**\n * A Checkbox allows a user to make a choice between two mutually exclusive options.\n *\n * @accessibility\n * Implements [ARIA Checkbox](https://www.w3.org/TR/wai-aria-practices-1.1/#checkbox) design pattern.\n */\nexport const Checkbox = React.forwardRef<HTMLDivElement, CheckboxProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Checkbox.displayName, context.telemetry);\n  setStart();\n\n  const {\n    checked,\n    className,\n    defaultChecked,\n    design,\n    disabled,\n    label,\n    labelPosition,\n    indicator,\n    styles,\n    toggle,\n    variables,\n  } = props;\n\n  const { state, actions } = useStateManager(createCheckboxManager, {\n    mapPropsToInitialState: () => ({ checked: defaultChecked }),\n    mapPropsToState: () => ({ checked: checked === 'mixed' ? false : checked }),\n  });\n\n  const getA11Props = useAccessibility(props.accessibility, {\n    debugName: Checkbox.displayName,\n    mapPropsToBehavior: () => ({\n      checked: state.checked,\n      disabled,\n    }),\n    actionHandlers: {\n      performClick: (e: React.KeyboardEvent) => {\n        e.preventDefault();\n        handleClick(e);\n      },\n    },\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<CheckboxStylesProps>(Checkbox.displayName, {\n    className: checkboxClassName,\n    mapPropsToStyles: () => ({\n      checked: checked === 'mixed' ? 'mixed' : state.checked,\n      disabled,\n      labelPosition,\n      toggle,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Checkbox.handledProps, props);\n\n  const handleChange = (e: React.ChangeEvent) => {\n    if (!disabled) {\n      // Checkbox component doesn't present any `input` component in markup, however all of our\n      // components should handle events transparently.\n      const checked = !state.checked;\n\n      actions.toggle(checked);\n      _.invoke(props, 'onChange', e, { ...props, checked });\n    }\n  };\n\n  const handleClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n    if (!disabled) {\n      const checked = !state.checked;\n      actions.toggle(checked);\n\n      _.invoke(props, 'onClick', e, { ...props, checked });\n      _.invoke(props, 'onChange', e, { ...props, checked });\n    }\n  };\n\n  const labelElement = Text.create(label, {\n    defaultProps: () =>\n      getA11Props('label', {\n        styles: resolvedStyles.label,\n        className: checkboxSlotClassNames.label,\n      }),\n  });\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        onClick: handleClick,\n        onChange: handleChange,\n        ref,\n        ...unhandledProps,\n      })}\n    >\n      {labelPosition === 'start' && labelElement}\n      {Box.create(indicator, {\n        defaultProps: () =>\n          getA11Props('indicator', {\n            className: checkboxSlotClassNames.indicator,\n            styles: toggle ? resolvedStyles.toggle : resolvedStyles.checkbox,\n          }),\n      })}\n      {labelPosition === 'end' && labelElement}\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown as ForwardRefWithAs<'div', HTMLDivElement, CheckboxProps> & FluentComponentStaticProps<CheckboxProps>;\n\nCheckbox.displayName = 'Checkbox';\n\nCheckbox.defaultProps = {\n  accessibility: checkboxBehavior,\n  indicator: {},\n  labelPosition: 'end',\n};\nCheckbox.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  checked: PropTypes.oneOf<true | false | 'mixed'>([true, false, 'mixed']),\n  defaultChecked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  indicator: customPropTypes.shorthandAllowingChildren,\n  label: customPropTypes.itemShorthand,\n  labelPosition: PropTypes.oneOf<'start' | 'end'>(['start', 'end']),\n  onChange: PropTypes.func,\n  onClick: PropTypes.func,\n  toggle: PropTypes.bool,\n};\nCheckbox.handledProps = Object.keys(Checkbox.propTypes) as any;\n\nCheckbox.create = createShorthandFactory({\n  Component: Checkbox,\n  mappedProp: 'label',\n});\n"],"mappings":"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"}