{"version":3,"file":"factories.js","names":["mergeStyles","cx","React","ReactIs","mappedProps","iframe","img","input","createShorthandFactory","_ref","Component","mappedProp","mappedArrayProp","allowsJSX","isValidElementType","Error","value","options","createShorthandInternal","_ref2","_ref2$options","_ref2$allowsJSX","valIsNoop","_isNil","render","valIsPrimitive","valIsPropsObject","_isPlainObject","valIsArray","_isArray","valIsReactElement","isValidElement","process","env","NODE_ENV","displayName","console","error","join","defaultProps","usersProps","overrideProps","Object","assign","props","mappedHTMLProps","as","className","mergedClassesNames","_uniq","split","style","styles","_options$generateKey","generateKey","key","elementKey","isNullKey","kind","children","undefined","createElement","createShorthand","_Component$fluentComp","_ref3","shorthandConfig","fluentComposeConfig","_ref3$mappedProp","_ref3$allowsJSX"],"sources":["utils/factories.ts"],"sourcesContent":["import { mergeStyles } from '@fluentui/styles';\nimport { ComponentWithAs, ComposePreparedOptions, ShorthandConfig } from '@fluentui/react-bindings';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as React from 'react';\nimport * as ReactIs from 'react-is';\n\nimport { ShorthandValue, Props, PropsOf, ShorthandRenderFunction } from '../types';\n\ntype HTMLTag = 'iframe' | 'img' | 'input';\ntype ShorthandProp = 'children' | 'src' | 'type';\n\ninterface CreateShorthandOptions<P> {\n  /** Default props object */\n  defaultProps?: () => Partial<Props<P>>;\n\n  /** Override props object or function (called with regular props) */\n  overrideProps?: Partial<Props<P>> | ((props: P) => Partial<Props<P>>);\n\n  /** Whether or not automatic key generation is allowed */\n  generateKey?: boolean;\n\n  /** Override the default render implementation. */\n  render?: ShorthandRenderFunction<P>;\n}\n\n// It's only necessary to map props that don't use 'children' as value ('children' is the default)\nconst mappedProps: { [key in HTMLTag]: ShorthandProp } = {\n  iframe: 'src',\n  img: 'src',\n  input: 'type',\n};\n\nexport type ShorthandFactory<P> = (\n  value: ShorthandValue<P>,\n  options?: CreateShorthandOptions<P>,\n) => React.ReactElement | null | undefined;\n\n// ============================================================\n// Factory Creators\n// ============================================================\n\n/**\n * @param config - Options passed to factory\n * @returns A shorthand factory function waiting for `val` and `defaultProps`.\n */\nexport function createShorthandFactory<TStringElement extends keyof JSX.IntrinsicElements, P>(config: {\n  /** A ReactClass or string */\n  Component: TStringElement;\n  /** A function that maps a primitive value to the Component props */\n  mappedProp?: keyof PropsOf<TStringElement>;\n  /** A function that maps an array value to the Component props */\n  mappedArrayProp?: keyof PropsOf<TStringElement>;\n  /** Indicates if factory supports React Elements */\n  allowsJSX?: boolean;\n}): ShorthandFactory<P>;\nexport function createShorthandFactory<TFunctionComponent extends React.FunctionComponent, P>(config: {\n  Component: TFunctionComponent;\n  mappedProp?: keyof PropsOf<TFunctionComponent>;\n  mappedArrayProp?: keyof PropsOf<TFunctionComponent>;\n  allowsJSX?: boolean;\n}): ShorthandFactory<P>;\nexport function createShorthandFactory<TInstance extends React.Component, P>(config: {\n  Component: { new (...args: any[]): TInstance };\n  mappedProp?: keyof PropsOf<TInstance>;\n  mappedArrayProp?: keyof PropsOf<TInstance>;\n  allowsJSX?: boolean;\n}): ShorthandFactory<P>;\nexport function createShorthandFactory<P>({ Component, mappedProp, mappedArrayProp, allowsJSX }) {\n  if (!ReactIs.isValidElementType(Component)) {\n    throw new Error('createShorthandFactory() Component must be a string or function.');\n  }\n\n  return (value, options: CreateShorthandOptions<P>) =>\n    createShorthandInternal({\n      allowsJSX,\n      Component,\n      mappedProp,\n      mappedArrayProp,\n      value,\n      options,\n    });\n}\n\n// ============================================================\n// Factories\n// ============================================================\n\nexport function createShorthandInternal<P>({\n  Component,\n  mappedProp,\n  mappedArrayProp,\n  value,\n  options = {},\n  allowsJSX = true,\n}: {\n  Component: React.ElementType<P>;\n  mappedProp?: string;\n  mappedArrayProp?: string;\n  allowsJSX?: boolean;\n  value?: ShorthandValue<P>;\n  options?: CreateShorthandOptions<P>;\n}) {\n  if (!ReactIs.isValidElementType(Component)) {\n    throw new Error('createShorthand() Component must be a string or function.');\n  }\n\n  // short circuit noop values\n  const valIsNoop = _.isNil(value) || typeof value === 'boolean';\n  if (valIsNoop && !options.render) return null;\n\n  const valIsPrimitive = typeof value === 'string' || typeof value === 'number';\n  const valIsPropsObject = _.isPlainObject(value);\n  const valIsArray = _.isArray(value);\n  const valIsReactElement = React.isValidElement(value);\n\n  // unhandled type warning\n  if (process.env.NODE_ENV !== 'production') {\n    const displayName = typeof Component === 'string' ? Component : Component.displayName;\n\n    if (!valIsPrimitive && !valIsPropsObject && !valIsArray && !valIsReactElement && !valIsNoop) {\n      /* eslint-disable-next-line no-console */\n      console.error(\n        [\n          `The shorthand prop for \"${displayName}\" component was passed a JSX element but this slot only supports string|number|object|array|ReactElements.`,\n          ' Use null|undefined|boolean for none.',\n          ` Received: ${value}`,\n        ].join(''),\n      );\n    }\n\n    if (!allowsJSX && valIsReactElement) {\n      /* eslint-disable-next-line no-console */\n      console.error(\n        [\n          `The shorthand prop for \"${displayName}\" component was passed a JSX element but this slot only supports string|number|object|array.`,\n          ' Use null|undefined|boolean for none.',\n          ` Received: ${value}`,\n        ].join(''),\n      );\n    }\n  }\n\n  // ----------------------------------------\n  // Build up props\n  // ----------------------------------------\n  const defaultProps = options.defaultProps ? options.defaultProps() || ({} as Props<P>) : ({} as Props<P>);\n\n  // User's props\n  const usersProps =\n    (valIsReactElement && ({} as Props<P>)) || (valIsPropsObject && (value as Props<P>)) || ({} as Props<P>);\n\n  // Override props\n  const overrideProps: Props<P> =\n    typeof options.overrideProps === 'function'\n      ? (options.overrideProps({ ...defaultProps, ...usersProps }) as Props<P>)\n      : (options.overrideProps as Props<P>) || ({} as Props<P>);\n\n  // Merge props\n  const props: Props<P> = { ...defaultProps, ...usersProps, ...overrideProps };\n\n  const mappedHTMLProps = mappedProps[overrideProps.as || defaultProps.as];\n\n  // Map prop for primitive value\n  if (valIsPrimitive || valIsReactElement) {\n    (props as any)[mappedHTMLProps || mappedProp || 'children'] = value;\n  }\n\n  // Map prop for array value\n  if (valIsArray) {\n    (props as any)[mappedHTMLProps || mappedArrayProp || 'children'] = value;\n  }\n\n  // Merge className\n  if (defaultProps.className || overrideProps.className || usersProps.className) {\n    const mergedClassesNames = cx(defaultProps.className, overrideProps.className, usersProps.className);\n    (props as any).className = _.uniq(mergedClassesNames.split(' ')).join(' ');\n  }\n\n  // Merge style\n  if (defaultProps.style || overrideProps.style || usersProps.style) {\n    (props as any).style = { ...defaultProps.style, ...usersProps.style, ...overrideProps.style };\n  }\n\n  // Merge styles\n  if (defaultProps.styles || overrideProps.styles || usersProps.styles) {\n    (props as any).styles = mergeStyles(defaultProps.styles, usersProps.styles, overrideProps.styles);\n  }\n\n  // ----------------------------------------\n  // Get key\n  // ----------------------------------------\n  const { generateKey = true } = options;\n\n  // Use key or generate key\n  if (generateKey && _.isNil(props.key)) {\n    if (valIsPrimitive) {\n      // use string/number shorthand values as the key\n      (props as any).key = value;\n    }\n\n    if (valIsReactElement) {\n      // use the key from React Element\n      const elementKey = (value as React.ReactElement).key;\n      // <div /> - key is not passed as will be `null`\n      // <div key={null} /> - key is passed as `null` and will be stringified\n      const isNullKey = elementKey === null;\n\n      if (!isNullKey) {\n        (props as any).key = elementKey;\n      }\n    }\n  }\n\n  // Remove the kind prop from the props object\n  delete props.kind;\n\n  // ----------------------------------------\n  // Create Element\n  // ----------------------------------------\n  const { render } = options;\n  if (render) {\n    return render(Component, props);\n  }\n\n  if (typeof props.children === 'function') {\n    return props.children(Component, { ...props, children: undefined });\n  }\n\n  if (!allowsJSX && valIsReactElement) {\n    return null;\n  }\n\n  // Create ReactElements from built up props\n  if (valIsPrimitive || valIsPropsObject || valIsArray || valIsReactElement) {\n    return React.createElement(Component, props);\n  }\n\n  return null;\n}\n\nexport function createShorthand<TFunctionComponent extends React.FunctionComponent>(\n  Component: TFunctionComponent & {\n    shorthandConfig?: ShorthandConfig<PropsOf<TFunctionComponent>>;\n    fluentComposeConfig?: ComposePreparedOptions<PropsOf<TFunctionComponent>>;\n  },\n  value?: ShorthandValue<PropsOf<TFunctionComponent>>,\n  options?: CreateShorthandOptions<PropsOf<TFunctionComponent>>,\n): React.ReactElement;\nexport function createShorthand<TInstance extends React.Component>(\n  Component: { new (...args: any[]): TInstance } & {\n    shorthandConfig?: ShorthandConfig<PropsOf<TInstance>>;\n    fluentComposeConfig?: ComposePreparedOptions<PropsOf<TInstance>>;\n  },\n  value?: ShorthandValue<PropsOf<TInstance>>,\n  options?: CreateShorthandOptions<PropsOf<TInstance>>,\n): React.ReactElement;\nexport function createShorthand<E extends keyof JSX.IntrinsicElements, P>(\n  Component: ComponentWithAs<E, P> & {\n    shorthandConfig?: ShorthandConfig<P>;\n    fluentComposeConfig?: ComposePreparedOptions<P>;\n  },\n  value?: ShorthandValue<P>,\n  options?: CreateShorthandOptions<P>,\n): React.ReactElement;\nexport function createShorthand<TElementType extends React.ElementType>(\n  Component: TElementType & {\n    shorthandConfig?: ShorthandConfig<PropsOf<TElementType>>;\n    fluentComposeConfig?: ComposePreparedOptions<PropsOf<TElementType>>;\n  },\n  value?: ShorthandValue<PropsOf<TElementType>>,\n  options?: CreateShorthandOptions<PropsOf<TElementType>>,\n): React.ReactElement;\nexport function createShorthand<P>(Component, value?, options?) {\n  const {\n    mappedProp = 'children',\n    allowsJSX = true,\n    mappedArrayProp,\n  } = Component.shorthandConfig || Component.fluentComposeConfig?.shorthandConfig || {};\n\n  return createShorthandInternal<P>({\n    Component,\n    mappedProp,\n    allowsJSX,\n    mappedArrayProp,\n    value,\n    options: options || {},\n  });\n}\n"],"mappings":"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"}