{"version":3,"file":"findAvailableDate.js","names":["isRestrictedDate","isAfterMaxDate","isBeforeMinDate","compareDatePart","addDays","findAvailableDate","options","targetDate","initialDate","direction","restrictedDateOptions","_objectWithoutPropertiesLoose","_excluded","availableDate","undefined"],"sources":["utils/date-time-utilities/dateGrid/findAvailableDate.ts"],"sourcesContent":["import { IAvailableDateOptions } from './dateGrid.types';\n\nimport { isRestrictedDate } from './isRestrictedDate';\n\nimport { isAfterMaxDate } from './isAfterMaxDate';\n\nimport { isBeforeMinDate } from './isBeforeMinDate';\nimport { compareDatePart, addDays } from '../dateMath/dateMath';\n\n/**\n * Returns closest available date given the restriction `options`, or undefined otherwise\n * @param options - list of search options\n */\nexport const findAvailableDate = (options: IAvailableDateOptions): Date | undefined => {\n  const { targetDate, initialDate, direction, ...restrictedDateOptions } = options;\n  let availableDate = targetDate;\n  // if the target date is available, return it immediately\n  if (!isRestrictedDate(targetDate, restrictedDateOptions)) {\n    return targetDate;\n  }\n\n  while (\n    compareDatePart(initialDate, availableDate) !== 0 &&\n    isRestrictedDate(availableDate, restrictedDateOptions) &&\n    !isAfterMaxDate(availableDate, restrictedDateOptions) &&\n    !isBeforeMinDate(availableDate, restrictedDateOptions)\n  ) {\n    availableDate = addDays(availableDate, direction);\n  }\n\n  if (compareDatePart(initialDate, availableDate) !== 0 && !isRestrictedDate(availableDate, restrictedDateOptions)) {\n    return availableDate;\n  }\n\n  return undefined;\n};\n"],"mappings":";;AAEA,SAASA,gBAAgB,QAAQ,oBAAoB;AAErD,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,eAAe,EAAEC,OAAO,QAAQ,sBAAsB;;AAE/D;AACA;AACA;AACA;AACA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,OAA8B,EAAuB;EACrF,IAAQC,UAAU,GAAuDD,OAAO,CAAxEC,UAAU;IAAEC,WAAW,GAA0CF,OAAO,CAA5DE,WAAW;IAAEC,SAAS,GAA+BH,OAAO,CAA/CG,SAAS;IAAKC,qBAAqB,GAAAC,6BAAA,CAAKL,OAAO,EAAAM,SAAA;EAChF,IAAIC,aAAa,GAAGN,UAAU;EAC9B;EACA,IAAI,CAACP,gBAAgB,CAACO,UAAU,EAAEG,qBAAqB,CAAC,EAAE;IACxD,OAAOH,UAAU;EACnB;EAEA,OACEJ,eAAe,CAACK,WAAW,EAAEK,aAAa,CAAC,KAAK,CAAC,IACjDb,gBAAgB,CAACa,aAAa,EAAEH,qBAAqB,CAAC,IACtD,CAACT,cAAc,CAACY,aAAa,EAAEH,qBAAqB,CAAC,IACrD,CAACR,eAAe,CAACW,aAAa,EAAEH,qBAAqB,CAAC,EACtD;IACAG,aAAa,GAAGT,OAAO,CAACS,aAAa,EAAEJ,SAAS,CAAC;EACnD;EAEA,IAAIN,eAAe,CAACK,WAAW,EAAEK,aAAa,CAAC,KAAK,CAAC,IAAI,CAACb,gBAAgB,CAACa,aAAa,EAAEH,qBAAqB,CAAC,EAAE;IAChH,OAAOG,aAAa;EACtB;EAEA,OAAOC,SAAS;AAClB,CAAC"}