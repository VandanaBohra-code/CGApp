{"version":3,"file":"isContiguous.js","names":["isContiguous","days","isSingleWeek","firstDayOfWeek","daySet","Set","amountOfNoNeighbors","_iterator","_createForOfIteratorHelperLoose","_step","done","day","value","nextDay","has"],"sources":["utils/date-time-utilities/dateGrid/isContiguous.ts"],"sourcesContent":["import { DayOfWeek } from '../dateValues/dateValues';\n\n/**\n * Returns whether provided week days are contiguous.\n * @param days - list of days in a week\n * @param isSingleWeek - decides whether the contiguous logic applies across week boundaries or not\n * @param firstDayOfWeek - decides which day of week is the first one in the order.\n */\nexport const isContiguous = (days: DayOfWeek[], isSingleWeek: boolean, firstDayOfWeek: DayOfWeek): boolean => {\n  const daySet = new Set(days);\n  let amountOfNoNeighbors = 0;\n  for (const day of days) {\n    const nextDay = (day + 1) % 7;\n    if (!(daySet.has(nextDay) && (!isSingleWeek || firstDayOfWeek !== nextDay))) {\n      amountOfNoNeighbors++;\n    }\n  }\n\n  // In case the full week is provided, then each day has a neighbor\n  // , otherwise the last day does not have a neighbor.\n  return amountOfNoNeighbors < 2;\n};\n"],"mappings":";;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAYA,CAAIC,IAAiB,EAAEC,YAAqB,EAAEC,cAAyB,EAAc;EAC5G,IAAMC,MAAM,GAAG,IAAIC,GAAG,CAACJ,IAAI,CAAC;EAC5B,IAAIK,mBAAmB,GAAG,CAAC;EAC3B,SAAAC,SAAA,GAAAC,+BAAA,CAAkBP,IAAI,GAAAQ,KAAA,IAAAA,KAAA,GAAAF,SAAA,IAAAG,IAAA,GAAE;IAAA,IAAbC,GAAG,GAAAF,KAAA,CAAAG,KAAA;IACZ,IAAMC,OAAO,GAAG,CAACF,GAAG,GAAG,CAAC,IAAI,CAAC;IAC7B,IAAI,EAAEP,MAAM,CAACU,GAAG,CAACD,OAAO,CAAC,KAAK,CAACX,YAAY,IAAIC,cAAc,KAAKU,OAAO,CAAC,CAAC,EAAE;MAC3EP,mBAAmB,EAAE;IACvB;EACF;;EAEA;EACA;EACA,OAAOA,mBAAmB,GAAG,CAAC;AAChC,CAAC"}